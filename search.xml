<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>递归经典例题（赶鸭子）</title>
    <url>/2020/03/04/%E9%80%92%E5%BD%92%E7%BB%8F%E5%85%B8%E4%BE%8B%E9%A2%98%E2%80%94java%E5%AE%9E%E7%8E%B0/</url>
    <content><![CDATA[<h3 id="一．-题目分析"><a href="#一．-题目分析" class="headerlink" title="一．    题目分析"></a>一．    题目分析</h3><p><strong>①一个人赶着鸭子去每个村庄卖，每经过一个村子卖去所赶鸭子的一半又一只。这样他经过了七个村子后还剩两只鸭子，问他出发时共赶多少只鸭子？经过每个村子卖出多少只鸭子？</strong></p>
<p>由题目可得知当经过第八个村庄时鸭子数量为2，所以利用已知条件由后向前递归计算可较为简便计算出出发时的总数，即第一个村庄的数量。由题意可轻松计算每个村庄卖出的数量。</p>
<p><strong>②角谷定理。输入一个自然数，若为偶数，则把它除以2，若为奇数，则把它乘以3加1。经过如此有限次运算后，总可以得到自然数值1。求经过多少次可得到自然数1。<br>如：输入22，<br>输出 22 11 34 17 52 26 13 40 20 10 5 16 8 4 2 1<br>STEP=16</strong></p>
<p>由题意可知应将输入数据分为1，偶数，奇数三种情况，分别进行分支处理。当经过选择递归后，当n 变为1后，程序到达递归出口。</p>
<h3 id="二．-算法构造"><a href="#二．-算法构造" class="headerlink" title="二．    算法构造"></a>二．    算法构造</h3><p><img src="https://img-blog.csdnimg.cn/20190531161550148.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzUzOTQ0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/2019053116161344.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzUzOTQ0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h3 id="三．-算法实现"><a href="#三．-算法实现" class="headerlink" title="三．    算法实现"></a>三．    算法实现</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">________________________1________________________</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Sellduck</span> </span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">duckNum</span><span class="params">(<span class="keyword">int</span> n )</span> </span>&#123;</span><br><span class="line">		</span><br><span class="line">		<span class="keyword">if</span>(n==<span class="number">8</span>) &#123;<span class="comment">//递归出口</span></span><br><span class="line">			<span class="keyword">return</span> <span class="number">2</span>;<span class="comment">//第七个村庄以后 剩下两只</span></span><br><span class="line">			</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span> &#123;</span><br><span class="line">			</span><br><span class="line">		<span class="keyword">return</span>	<span class="number">2</span>*(duckNum(n+<span class="number">1</span>)+<span class="number">1</span>);<span class="comment">//递归调用</span></span><br><span class="line">	&#125;		</span><br><span class="line">		 </span><br><span class="line">	&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">SellDuck</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;<span class="comment">//剩下的鸭子数n 调用时输入2</span></span><br><span class="line">		<span class="keyword">int</span> count = <span class="number">7</span>;</span><br><span class="line">		<span class="keyword">for</span>(;count &gt;= <span class="number">1</span>;count--) &#123;</span><br><span class="line">			System.out.println(<span class="string">"第"</span>+count+<span class="string">"个村子卖的鸭子数为:"</span>+(n+<span class="number">2</span>));</span><br><span class="line">			n = (n+<span class="number">1</span>) * <span class="number">2</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		System.out.println(<span class="string">"他开始有的鸭子数为："</span>+n);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		</span><br><span class="line">		<span class="keyword">int</span> num = duckNum(<span class="number">1</span>);</span><br><span class="line">		</span><br><span class="line">		System.out.println(<span class="string">"总共赶鸭子"</span>+num+<span class="string">"只"</span>);</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span> ;i&lt;=<span class="number">7</span>;i++) &#123;<span class="comment">//循环计算每个村庄的具体数目</span></span><br><span class="line">		<span class="keyword">int</span> all = duckNum(i);</span><br><span class="line">		<span class="keyword">int</span> sale= all/<span class="number">2</span>+<span class="number">1</span>;<span class="comment">//计算卖出鸭子数</span></span><br><span class="line">		<span class="keyword">int</span> remain= all-sale;</span><br><span class="line">		System.out.println(<span class="string">"经过第"</span>+(i)+<span class="string">"个村庄时卖了"</span>+sale+<span class="string">"只鸭子，还剩"</span>+remain+<span class="string">"只"</span>);</span><br><span class="line">			SellDuck(<span class="number">2</span>);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">_________________________2_______________________</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">valley_number</span> </span>&#123;</span><br><span class="line">	<span class="keyword">static</span> <span class="keyword">int</span> count=<span class="number">0</span>;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">vall_Num</span><span class="params">( <span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">		</span><br><span class="line">		</span><br><span class="line">		<span class="keyword">if</span>(n==<span class="number">1</span>) &#123;</span><br><span class="line">			count++;</span><br><span class="line">			System.out.println(n);<span class="comment">//输出1️后停止递归</span></span><br><span class="line">			System.out.println(<span class="string">"step:"</span>+count);</span><br><span class="line">			<span class="keyword">return</span> ;<span class="comment">//计算结果得到1时到达递归出口</span></span><br><span class="line">			</span><br><span class="line">		&#125;</span><br><span class="line">		</span><br><span class="line">		<span class="keyword">if</span>(n%<span class="number">2</span>==<span class="number">1</span>) &#123;</span><br><span class="line">			count++;</span><br><span class="line">			System.out.print(n+<span class="string">" "</span>);</span><br><span class="line">			n=n*<span class="number">3</span>+<span class="number">1</span>;<span class="comment">//执行计算结果为奇数时的表达式</span></span><br><span class="line">			vall_Num(n);<span class="comment">//递归</span></span><br><span class="line">			</span><br><span class="line">			</span><br><span class="line">		&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">			count++;</span><br><span class="line">			System.out.print(n+<span class="string">" "</span>);</span><br><span class="line">			</span><br><span class="line">			n=n/<span class="number">2</span>;<span class="comment">//执行计算结果为偶数时的表达式</span></span><br><span class="line">			vall_Num(n);</span><br><span class="line">		&#125;</span><br><span class="line">		</span><br><span class="line">		</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">		System.out.println(<span class="string">"please input a int Number"</span>);</span><br><span class="line">		<span class="keyword">int</span>  n= sc.nextInt();</span><br><span class="line">		 vall_Num(n);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="四．-调试测试"><a href="#四．-调试测试" class="headerlink" title="四．    调试测试"></a>四．    调试测试</h3><p><img src="https://img-blog.csdnimg.cn/20190531162020885.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzUzOTQ0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20190531162054959.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzUzOTQ0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20190531162242952.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzUzOTQ0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h3 id="五．-经验总结"><a href="#五．-经验总结" class="headerlink" title="五．    经验总结"></a>五．    经验总结</h3><pre><code>通过编程掌握了递归程序设计的方法，更深理解了递归的概念，掌握了递归数学模型的建立，及递归程序和非递归程序之间的转换。具体递归问题分析时应先找出递归关系和递归出口。
   相同问题下，利用递归求解可减少代码量，但是从性能角度来看，递归函数调用自身 ，将会产生时间和内存空间的消耗，同时也有可能存在一些重复计算，这就造成了效率不高的问题。当调用层次过多时还有可能导致 出现栈溢出的状况。</code></pre>]]></content>
      <categories>
        <category>Java 基础</category>
      </categories>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title>单词小助手完善</title>
    <url>/2020/03/04/%E5%8D%95%E8%AF%8D%E5%B0%8F%E5%8A%A9%E6%89%8B%E5%8A%9F%E8%83%BD%E5%AE%8C%E5%96%84%EF%BC%88C%EF%BC%89/</url>
    <content><![CDATA[<h3 id="一．-题目分析"><a href="#一．-题目分析" class="headerlink" title="一．    题目分析"></a>一．    题目分析</h3><ol>
<li>在原有代码基础上添加文档注释，函数注释及语句注释，使代码风格良好，易于阅读和修改。</li>
<li>完善功能，实现背单词时出错词的重复记忆。</li>
<li>在词库维护选项中添加中英文分别查询的功能</li>
<li>完成输如数据的正确性验证，如：在菜单选择时输入不规范的错误提示、在添加单词时英文输入时输入汉语的异常排除等</li>
</ol>
<h3 id="二．-关键算法构造"><a href="#二．-关键算法构造" class="headerlink" title="二．    关键算法构造"></a>二．    关键算法构造</h3><p>1．    总菜单项目选择及maintain函数子选项的输入异常检查及提示。<br><img src="https://img-blog.csdnimg.cn/2019040413093847.jpg" alt="在这里插入图片描述"></p>
<p><img src="https://img-blog.csdnimg.cn/2019040413095157.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzUzOTQ0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>2．    添加单词<br><img src="https://img-blog.csdnimg.cn/2019040413252857.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzUzOTQ0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20190404132543883.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzUzOTQ0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h3 id="三．-程序实现"><a href="#三．-程序实现" class="headerlink" title="三．    程序实现"></a>三．    程序实现</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAX_CHAR 20 <span class="comment">// 最大字符</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAX_NUM 200 <span class="comment">// 单词的最大个数</span></span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">word</span></span></span><br><span class="line"><span class="class">//单词的结构体</span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"> <span class="keyword">char</span> en[MAX_CHAR]; <span class="comment">// 英文形式</span></span><br><span class="line"> <span class="keyword">char</span> ch[MAX_CHAR]; <span class="comment">//中文形式</span></span><br><span class="line">&#125; s[MAX_NUM],r[MAX_NUM]; <span class="comment">//单词数组</span></span><br><span class="line"><span class="keyword">int</span> num; <span class="comment">//词典单词个数</span></span><br><span class="line"><span class="keyword">int</span> rnum = <span class="number">0</span>; <span class="comment">//增强记忆单词个数</span></span><br><span class="line"><span class="keyword">int</span> select=<span class="number">1</span>;<span class="comment">//select 为是否退出系统的标记</span></span><br><span class="line"><span class="keyword">int</span> d=<span class="number">0</span>,c=<span class="number">0</span>;<span class="comment">//c为答错的次数，d为答对的次数</span></span><br><span class="line"><span class="comment">//帮助</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">help</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n本系统主要实现英语单词学习的功能。用户可对词典文件中的单词进行预览，增删改查。"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n同时还可进行中英、英中测试。本系统还提供了测试成绩的显示功能。"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//从文件中读取单词的信息</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">readfile</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">FILE *fp;</span><br><span class="line"> <span class="keyword">int</span> i=<span class="number">0</span>;</span><br><span class="line"> fp=fopen(<span class="string">"data.txt"</span>,<span class="string">"r"</span>);</span><br><span class="line"> <span class="keyword">if</span>(!fp)</span><br><span class="line"> &#123;</span><br><span class="line"> <span class="built_in">printf</span>(<span class="string">"\n打开文件data.txt失败!"</span>);</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">while</span>(<span class="built_in">fscanf</span>(fp,<span class="string">"%s %s "</span>,s[i].en,s[i].ch)==<span class="number">2</span>)</span><br><span class="line"> &#123;</span><br><span class="line"> i++;</span><br><span class="line"> &#125;</span><br><span class="line"> num=i;</span><br><span class="line"> <span class="keyword">if</span>(<span class="number">0</span>==i)</span><br><span class="line"> <span class="built_in">printf</span>(<span class="string">"\n文件为空，请选择词典维护增加词条！"</span>);</span><br><span class="line"> <span class="keyword">else</span></span><br><span class="line"> <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line"> fclose(fp);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//向文件中写入单词</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">writefile</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">FILE *fp;</span><br><span class="line"><span class="keyword">int</span> i=<span class="number">0</span>;</span><br><span class="line">fp=fopen(<span class="string">"data.txt"</span>,<span class="string">"w"</span>);</span><br><span class="line"> <span class="keyword">if</span>(!fp)</span><br><span class="line"> &#123;</span><br><span class="line"> <span class="built_in">printf</span>(<span class="string">"\n打开文件data.txt失败!"</span>);</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;num;i++)</span><br><span class="line"> &#123;</span><br><span class="line"><span class="built_in">fprintf</span>(fp,<span class="string">"\n%s %s "</span>,s[i].en,s[i].ch);</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line"> fclose(fp);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//从增强记忆文件中读取单词</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">readRemeberfile</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">FILE *fp;</span><br><span class="line"> <span class="keyword">int</span> i=<span class="number">0</span>;</span><br><span class="line"> fp=fopen(<span class="string">"Remeberdata.txt"</span>,<span class="string">"r"</span>);</span><br><span class="line"> <span class="keyword">if</span>(!fp)</span><br><span class="line"> &#123;</span><br><span class="line"> <span class="built_in">printf</span>(<span class="string">"\n打开文件Remeberdata.txt失败!"</span>);</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">while</span>(<span class="built_in">fscanf</span>(fp,<span class="string">"%s %s "</span>,r[i].en,r[i].ch)==<span class="number">2</span>)</span><br><span class="line"> &#123;</span><br><span class="line"> i++;</span><br><span class="line"> &#125;</span><br><span class="line"> rnum=i;</span><br><span class="line"> <span class="keyword">if</span>(<span class="number">0</span>==i)</span><br><span class="line"> <span class="built_in">printf</span>(<span class="string">"\n你还没有错题哦！"</span>);</span><br><span class="line"> <span class="keyword">else</span></span><br><span class="line"> <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line"> fclose(fp);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">sort</span><span class="params">()</span><span class="comment">/*按字典排序*/</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i,j;</span><br><span class="line"><span class="keyword">char</span> temp[MAX_CHAR];</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;num<span class="number">-1</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(j=num<span class="number">-1</span>;j&gt;i;j--)</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">strcmp</span>(s[j<span class="number">-1</span>].en,s[j].en)&gt;<span class="number">0</span>)<span class="comment">//string类strcmp函数通过Ascll 码逐字符比较 </span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">strcpy</span>(temp,s[j<span class="number">-1</span>].en);</span><br><span class="line"><span class="built_in">strcpy</span>(s[j<span class="number">-1</span>].en,s[j].en);</span><br><span class="line"><span class="built_in">strcpy</span>(s[j].en,temp);</span><br><span class="line"><span class="built_in">strcpy</span>(temp,s[j<span class="number">-1</span>].ch);</span><br><span class="line"><span class="built_in">strcpy</span>(s[j<span class="number">-1</span>].ch,s[j].ch);</span><br><span class="line"><span class="built_in">strcpy</span>(s[j].ch,temp);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//添加单词信息</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i=num,j,flag=<span class="number">1</span>,a;</span><br><span class="line">f: <span class="keyword">while</span>(flag)</span><br><span class="line">&#123;</span><br><span class="line">flag=<span class="number">0</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n请输入单词的英文形式:"</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>,s[i].en);</span><br><span class="line"><span class="comment">//strncpy(c,s[i].en.c_str(),s[i].en.length());</span></span><br><span class="line"><span class="keyword">for</span>(a=<span class="number">0</span>;a&lt;<span class="number">20</span>;a++)</span><br><span class="line">&#123;<span class="keyword">if</span>(s[i].en[a]&gt;&gt;<span class="number">8</span>==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">continue</span>;</span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;<span class="built_in">printf</span>(<span class="string">"输入不是纯英文，请重新输入"</span>);</span><br><span class="line">flag=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">goto</span> f;<span class="comment">//当不是纯英文输入时跳转 </span></span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//if(a!=19) continue;</span></span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;i;j++)</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">strcmp</span>(s[i].en,s[j].en)==<span class="number">0</span>)<span class="comment">//与已有单词比较 </span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"已有该单词,请检查后重新录入!\n"</span>);</span><br><span class="line">flag=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">break</span>; <span class="comment">/*如有重复立即退出该层循环,提高判断速度*/</span></span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"> &#125;</span><br><span class="line"> <span class="built_in">printf</span>(<span class="string">"\n请输入单词的中文形式:"</span>);</span><br><span class="line"> <span class="built_in">scanf</span>(<span class="string">"%s"</span>,s[i].ch);</span><br><span class="line"> num++;</span><br><span class="line"> <span class="built_in">printf</span>(<span class="string">"\n您输入的信息为: 英文: %s 中文: %s "</span>,s[i].en,s[i].ch);</span><br><span class="line">sort();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//删除单词信息</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">del</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i=<span class="number">0</span>,j=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">char</span> en[MAX_CHAR];<span class="comment">//英文形式</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n请输入你要删除的单词英文形式:"</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>,en);</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;num;i++)<span class="comment">//先找到该英文形式对应的序号</span></span><br><span class="line"> <span class="keyword">if</span>(<span class="built_in">strcmp</span>(s[i].en,en)==<span class="number">0</span>)<span class="comment">//判断已有单词中是否存在此词 </span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(j=i;j&lt;num<span class="number">-1</span>;j++)</span><br><span class="line"> s[j]=s[j+<span class="number">1</span>];</span><br><span class="line">num--; <span class="comment">//数量减少 1</span></span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"> <span class="built_in">printf</span>(<span class="string">"\n没有这个单词!"</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//修改单词信息</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">modify</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i=<span class="number">0</span>,choose=<span class="number">0</span>,flag=<span class="number">1</span>;<span class="comment">//chooses代表选项标识，flag代表是否找到单词</span></span><br><span class="line"><span class="keyword">char</span> en[MAX_CHAR]; <span class="comment">//英文形式</span></span><br><span class="line"><span class="keyword">while</span>(flag||choose)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n请输入你要修改的单词英文形式:"</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>,en);</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;num;i++)<span class="comment">//先找到该英文形式对应的序号</span></span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">strcmp</span>(s[i].en,en)==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n请输入单词正确的英文形式:"</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>,s[i].en);</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n请输入此单词正确的的中文形式:"</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>,s[i].ch);</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n继续修改请选1，返回上一级请选0:"</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;choose);</span><br><span class="line"><span class="keyword">if</span>(choose==<span class="number">0</span>) <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"> flag=<span class="number">0</span>;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br><span class="line"> <span class="keyword">if</span>(!flag)</span><br><span class="line"> <span class="built_in">printf</span>(<span class="string">"\n没有这个单词!"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//单词预览</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">show</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i=<span class="number">0</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n单词：      英文           中文       "</span>);<span class="comment">//格式对齐 </span></span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;num;i++)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n           %-15s%-13s"</span>,s[i].en,s[i].ch);<span class="comment">//单词预览 </span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//查询单词</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">search</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i=<span class="number">0</span>,choose=<span class="number">0</span>,flag=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">char</span> ch[MAX_CHAR];<span class="comment">//中文形式</span></span><br><span class="line"><span class="keyword">while</span>(choose||flag)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n请输入你要查询的单词中文形式:"</span>);</span><br><span class="line"> <span class="built_in">scanf</span>(<span class="string">"%s"</span>,ch);</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;num;i++)<span class="comment">//先找到该中文形式对应的序号</span></span><br><span class="line"> <span class="keyword">if</span>(<span class="built_in">strcmp</span>(s[i].ch,ch)==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"> <span class="built_in">printf</span>(<span class="string">"\n英文形式       中文形式         "</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n %-12s%12s"</span>,s[i].en,s[i].ch);</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n继续查询请选1，返回上一级请选0:"</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;choose);</span><br><span class="line"><span class="keyword">if</span>(choose==<span class="number">0</span>) <span class="keyword">return</span>;&#125;</span><br><span class="line"> flag=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"> <span class="keyword">if</span>(!flag) <span class="built_in">printf</span>(<span class="string">"\n没有这个单词!"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//查询单词(英)</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ysearch</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i=<span class="number">0</span>,choose=<span class="number">0</span>,flag=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">char</span> en[MAX_CHAR]; <span class="comment">//英文形式</span></span><br><span class="line"><span class="keyword">while</span>(choose||flag)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n请输入你要查询的单词英文形式:"</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>,en);</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;num;i++)<span class="comment">//先找到该中文形式对应的序号</span></span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">strcmp</span>(s[i].en,en)==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n英文形式          中文形式 "</span>);</span><br><span class="line"> <span class="built_in">printf</span>(<span class="string">"\n %-12s%12s"</span>,s[i].en,s[i].ch);</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n继续查询请选1，返回上一级请选0:"</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;choose);</span><br><span class="line"><span class="keyword">if</span>(choose==<span class="number">0</span>) <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"> flag=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"> <span class="keyword">if</span>(!flag) <span class="built_in">printf</span>(<span class="string">"\n没有这个单词!"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//中译英测试</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">zytest</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">char</span> b1[<span class="number">20</span>];</span><br><span class="line"><span class="keyword">int</span> z;</span><br><span class="line"><span class="keyword">int</span> choose=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line">FILE *fp;</span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(choose)</span><br><span class="line">&#123; </span><br><span class="line">fp=fopen(<span class="string">"Remeberdata.txt"</span>,<span class="string">"a+"</span>);<span class="comment">//打开增强记忆文件</span></span><br><span class="line"><span class="keyword">if</span>(!fp)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n打开文件Remeberdata.txt失败!"</span>);</span><br><span class="line">&#125;</span><br><span class="line">i = rand()%num;<span class="comment">//在已有词汇中随机选取 </span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n【%s】请输入英文单词:"</span>,s[i].ch);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>,b1);</span><br><span class="line"><span class="keyword">int</span> flag = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(z=<span class="number">0</span>;<span class="built_in">strcmp</span>(b1,s[i].en)!=<span class="number">0</span>;z++)</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">if</span>(z&lt;=<span class="number">3</span>)&#123;</span><br><span class="line">	</span><br><span class="line"><span class="built_in">fprintf</span>(fp,<span class="string">"\n%s %s "</span>,s[i].en,s[i].ch);<span class="comment">//回答错误时写入增强记忆文件</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n输入错误！！请重新输入:"</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>,b1);c=c+<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">rnum++;&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"小伙子，挣扎有用吗，快滚去看字典"</span>);</span><br><span class="line">	flag=<span class="number">1</span>;</span><br><span class="line">	<span class="keyword">break</span>; </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(flag)</span><br><span class="line">&#123;<span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">fclose(fp);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n恭喜你，回答正确，加10分!\n\n"</span>);d=d+<span class="number">1</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n继续测试请选1，返回上一级请选0:"</span>);</span><br><span class="line"> <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;choose);</span><br><span class="line"><span class="keyword">if</span>(choose==<span class="number">0</span>) <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//英译中测试</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">yztest</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">char</span> b1[<span class="number">20</span>];</span><br><span class="line"><span class="keyword">int</span> z,x=<span class="number">41</span>;</span><br><span class="line"><span class="keyword">int</span> choose=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"> <span class="comment">//i = rand()%num;写入循环中</span></span><br><span class="line">FILE *fp;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(choose)</span><br><span class="line">&#123; </span><br><span class="line">i = rand()%num;</span><br><span class="line">fp=fopen(<span class="string">"Remeberdata.txt"</span>,<span class="string">"a+"</span>);</span><br><span class="line"><span class="keyword">if</span>(!fp)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n打开文件Remeberdata.txt失败!"</span>);<span class="comment">//打开增强记忆文件</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"【%s】请输入中文意思:"</span>,s[i].en);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>,b1);</span><br><span class="line"><span class="keyword">int</span> flag = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(z=<span class="number">0</span>;<span class="built_in">strcmp</span>(b1,s[i].ch)!=<span class="number">0</span>;z++)</span><br><span class="line">&#123;<span class="keyword">if</span>(z&lt;=<span class="number">3</span>)&#123;</span><br><span class="line"></span><br><span class="line">fp=fopen(<span class="string">"Remeberdata.txt"</span>,<span class="string">"a+"</span>);</span><br><span class="line"><span class="keyword">if</span>(!fp)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n打开文件Remeberdata.txt失败!"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">fprintf</span>(fp,<span class="string">"\n%s %s "</span>,s[i].en,s[i].ch);<span class="comment">//回答错误时写入增强记忆文件</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"输入错误！！请重新输入:"</span>);&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;<span class="built_in">printf</span>(<span class="string">"小伙子，别挣扎了，看词典吧 "</span>); </span><br><span class="line">flag = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">break</span>;&#125;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>,b1);c=c+<span class="number">1</span>;</span><br><span class="line">rnum++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(flag)</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">return</span> ;</span><br><span class="line">&#125;fclose(fp);</span><br><span class="line"></span><br><span class="line"> <span class="built_in">printf</span>(<span class="string">"\n恭喜你，回答正确，加10分!\n\n"</span>);d=d+<span class="number">1</span>;</span><br><span class="line"> <span class="built_in">printf</span>(<span class="string">"\n继续测试请选1，返回上一级请选0:"</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;choose);</span><br><span class="line"><span class="keyword">if</span>(choose==<span class="number">0</span>) <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//中英增强记忆</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">zyRetest</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">char</span> b1[<span class="number">20</span>];</span><br><span class="line"><span class="keyword">int</span> z;</span><br><span class="line"> <span class="keyword">int</span> choose=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="keyword">int</span> m = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(choose)</span><br><span class="line">&#123; </span><br><span class="line">i = rand()%rnum;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n【%s】请输入英文单词:"</span>,r[i].ch);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>,b1);</span><br><span class="line"><span class="keyword">for</span>(z=<span class="number">0</span>;<span class="built_in">strcmp</span>(b1,r[i].en)!=<span class="number">0</span>;z=z)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n输入错误！！请重新输入:"</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>,b1);c=c+<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"> <span class="built_in">printf</span>(<span class="string">"\n恭喜你，回答正确，加10分!\n\n"</span>);d=d+<span class="number">1</span>;</span><br><span class="line"> <span class="built_in">printf</span>(<span class="string">"\n继续测试请选1，返回上一级请选0:"</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;choose);</span><br><span class="line"><span class="keyword">if</span>(choose==<span class="number">0</span>) <span class="keyword">return</span>;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//英中增强记忆</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">yzRetest</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">char</span> b1[<span class="number">20</span>];</span><br><span class="line"><span class="keyword">int</span> z,x=<span class="number">41</span>;</span><br><span class="line"><span class="keyword">int</span> choose=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="keyword">while</span>(choose)</span><br><span class="line">&#123; </span><br><span class="line">i = rand()%num;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"【%s】请输入中文意思:"</span>,r[i].en);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>,b1);</span><br><span class="line"><span class="keyword">for</span>(z=<span class="number">0</span>;<span class="built_in">strcmp</span>(b1,r[i].ch)!=<span class="number">0</span>;z=z)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"输入错误！！请重新输入:"</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>,b1);c=c+<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"> <span class="built_in">printf</span>(<span class="string">"\n恭喜你，回答正确，加10分!\n\n"</span>);d=d+<span class="number">1</span>;</span><br><span class="line"> <span class="built_in">printf</span>(<span class="string">"\n继续测试请选1，返回上一级请选0:"</span>);</span><br><span class="line"> <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;choose);</span><br><span class="line"> <span class="keyword">if</span>(choose==<span class="number">0</span>) <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//成绩列表</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">list</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n共计输入错误:%d次**每次扣10分**\n"</span>,c);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"共计输入正确:%d次**每次加10分**\n"</span>,d);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"你的总得分为:%d分\n\n"</span>,<span class="number">10</span>*d<span class="number">-10</span>*c);<span class="comment">//计算最后得分 </span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//词典维护</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">maintain</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"> <span class="keyword">int</span> choose;<span class="comment">//维护功能选择</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">" ------------------\n"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">" 1.增加单词\n"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">" 2.修改单词\n"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">" 3.删除单词\n"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">" 4.查询单词(中)\n"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">" 5.查询单词(英)\n"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">" 6.退出本菜单\n"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">" ------------------\n"</span>);</span><br><span class="line"> </span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123; </span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">" \n请输入维护功能编号:"</span>);<span class="comment">//输入非法排错 </span></span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;choose);</span><br><span class="line"><span class="keyword">int</span> ret;</span><br><span class="line">ret=choose; </span><br><span class="line">    <span class="keyword">while</span> (ret != <span class="number">1</span>||ret !=<span class="number">2</span>||ret!=<span class="number">3</span>||ret!=<span class="number">4</span>||ret!=<span class="number">5</span>||ret!=<span class="number">6</span>)<span class="comment">//将输入限定在0-6的整数 </span></span><br><span class="line">    &#123;   <span class="keyword">if</span>(ret&gt;<span class="number">6</span>||ret&lt;=<span class="number">0</span>)&#123;</span><br><span class="line">	</span><br><span class="line">	    <span class="keyword">while</span> (getchar() != <span class="string">'\n'</span>);</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"error input,please again.\n"</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;choose);</span><br><span class="line">        ret =choose;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span></span><br><span class="line">		<span class="keyword">break</span>;</span><br><span class="line">		</span><br><span class="line">    &#125;<span class="comment">//直到输入的值为整数*/</span></span><br><span class="line">ret=choose;</span><br><span class="line"><span class="keyword">switch</span>(ret)</span><br><span class="line">&#123;</span><br><span class="line"> <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line"> add();writefile();<span class="keyword">break</span>;</span><br><span class="line"> <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line"> modify();writefile();<span class="keyword">break</span>;</span><br><span class="line"> <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line"> del();writefile();<span class="keyword">break</span>;</span><br><span class="line"> <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line"> search();<span class="keyword">break</span>;</span><br><span class="line"> <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line"> ysearch();<span class="keyword">break</span>;</span><br><span class="line"> <span class="keyword">case</span> <span class="number">6</span>: <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">default</span>: <span class="built_in">printf</span>(<span class="string">"\n请在1-6之间选择"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//用户界面</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">menu</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line"><span class="keyword">int</span> item;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"                                                                        \n"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"              __________________________________________________________\n"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"              ||                                                      ||\n"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"              ||                 英语单词小助手                       ||\n"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"              ||                                                      ||\n"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"              ||              版本 ： v1.0                            ||\n"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"              ||                                                      ||\n"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"              __________________________________________________________\n"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"              ||                                                      ||\n"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"              ||       0.词库维护              1.单词预览             ||\n"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"              ||                                                      ||\n"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"              ||       2.单词背诵(中英)        3.单词背诵(英中)          ||\n"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"              ||                                                      ||\n"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"              ||       4.查询成绩              5.帮助                  ||\n"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"              ||                                                      ||\n"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"              ||       6.增强记忆(中英)        7.增强记忆(英中)          ||\n"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"              ||                                                      ||\n"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"              ||       8.退出                                         ||\n"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"              ||                                                      ||\n"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"              __________________________________________________________\n"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"              请选择您需要的操作序号(0-8)按回车确认:"</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;item);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line"><span class="keyword">int</span> ret;</span><br><span class="line">ret=item; </span><br><span class="line">    <span class="keyword">while</span> (ret != <span class="number">1</span>||ret !=<span class="number">2</span>||ret!=<span class="number">3</span>||ret!=<span class="number">4</span>||ret!=<span class="number">5</span>||ret!=<span class="number">6</span>||ret!=<span class="number">7</span>||ret!=<span class="number">8</span>)<span class="comment">//将输入限定在0-6的整数 </span></span><br><span class="line">    &#123;   <span class="keyword">if</span>(ret&gt;<span class="number">8</span>||ret&lt;<span class="number">0</span>)&#123;</span><br><span class="line">	</span><br><span class="line">	    <span class="keyword">while</span> (getchar() != <span class="string">'\n'</span>);</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"error input,please again.\n"</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;item);</span><br><span class="line">        ret =item;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span></span><br><span class="line">		<span class="keyword">break</span>;</span><br><span class="line">		</span><br><span class="line">    &#125;<span class="comment">//直到输入的值为整数*/</span></span><br><span class="line">ret=item;</span><br><span class="line"> readfile();</span><br><span class="line"><span class="keyword">switch</span>(ret)</span><br><span class="line">&#123;</span><br><span class="line"> <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line"> show();<span class="built_in">maintain</span>();<span class="keyword">break</span>;<span class="comment">//词库维护 </span></span><br><span class="line"> <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line"> show();<span class="keyword">break</span>; <span class="comment">//单词预览 </span></span><br><span class="line"> <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line"> zytest();<span class="keyword">break</span>;<span class="comment">//中英背词测试 </span></span><br><span class="line"> <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line"> yztest(); <span class="keyword">break</span>;<span class="comment">//英中背刺测试 </span></span><br><span class="line"> <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line"> <span class="built_in">list</span>();<span class="keyword">break</span>;<span class="comment">//成绩查询 </span></span><br><span class="line"> <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line"> help();<span class="keyword">break</span>;<span class="comment">//使用帮助 </span></span><br><span class="line"> <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line"> readRemeberfile();zyRetest();<span class="keyword">break</span>;<span class="comment">//调用文件读入已插入词汇，进行重复中英记忆 </span></span><br><span class="line"> <span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line"> readRemeberfile();yzRetest();<span class="keyword">break</span>;<span class="comment">// 调用文件读入已插入词汇，进行重复英中记忆 </span></span><br><span class="line"> <span class="keyword">case</span> <span class="number">8</span>:</span><br><span class="line"> select =<span class="number">0</span>;<span class="keyword">break</span>;<span class="comment">//退出子选项 </span></span><br><span class="line"> <span class="keyword">default</span>:</span><br><span class="line"> <span class="built_in">printf</span>(<span class="string">"请在0-8之间选择\n"</span>);</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line"><span class="keyword">while</span>(select)</span><br><span class="line">&#123;</span><br><span class="line">menu();</span><br><span class="line">&#125;</span><br><span class="line">system(<span class="string">"pause"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="四．-经验归纳"><a href="#四．-经验归纳" class="headerlink" title="四．    经验归纳"></a>四．    经验归纳</h3><p>   此次程序设计在原有基础程序的基础上，实现功能的完善，侧重于程序的结构化及精细化编写。在单词汉英查询模块，使用了string库 strcmp函数，利用字符Ascll码的比较实现字符的相同与否判断。在判断输入输入字符是否为纯英文时，用到位运算右移八位得到最高位二进制，1则为汉语，0为英文。</p>
<p>   通过本次程序代码编写，再次熟悉了文件操作，认识到程序结构化的重要性。虽然在上课时强调过少用甚至不用goto语句，但是在中英文识别的函数中由于while(for(if（flag）))的嵌套使用，导致逻辑有些混乱，还是不可避免的使用了goto语句，好在最终最终解决了问题。所以在以后设计逻辑算法的时候，要尽量用能驾驭的语句实现，否则会出现意想不到的逻辑错误，甚至到用goto语句破坏程序结构性的地步。</p>
]]></content>
      <categories>
        <category>C s hert</category>
      </categories>
      <tags>
        <tag>C</tag>
      </tags>
  </entry>
  <entry>
    <title>Spring Mvc 跨服务器上传图片405、403、409异常</title>
    <url>/2020/03/04/Spring%20MVC%20%E8%B7%A8%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8A%E4%BC%A0%E5%9B%BE%E7%89%87%E5%87%BA%E7%8E%B0405%20_403_409%E9%94%99%E8%AF%AF/</url>
    <content><![CDATA[<h3 id="1-0-status-403"><a href="#1-0-status-403" class="headerlink" title="1.0 status 403"></a>1.0 status 403</h3><p>详情如图：<br><img src="https://img-blog.csdnimg.cn/20200227194343278.png" alt="status 403"><br>原因： 在使用local Tomcat 部署项目时，因为Tomcat服务器默认为文件只读模式，所以在调用webResource的put()方法时字节数组无法通过服务器写入对应的url地址写入。</p>
<h5 id="解决方法：更改Tomcat服务器文件读写模式"><a href="#解决方法：更改Tomcat服务器文件读写模式" class="headerlink" title="解决方法：更改Tomcat服务器文件读写模式"></a>解决方法：更改Tomcat服务器文件读写模式</h5><p>在本地安装的Tomcat文件夹下找到如下参考路径：<br><strong>D:\Tomcat9.0_Tomcat9.2\conf\web.xml</strong><br><img src="https://img-blog.csdnimg.cn/20200227195323241.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzUzOTQ0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">       	<span class="tag">&lt;<span class="name">param-name</span>&gt;</span>readonly<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">       	<span class="tag">&lt;<span class="name">param-value</span>&gt;</span>false<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="1-1-status-405"><a href="#1-1-status-405" class="headerlink" title="1.1 status  405"></a>1.1 status  405</h3><p>当修改了Tomcat服务器web.xml文件后，只重启了发送端服务器，而图片接收端服务器没有重启时，就会出现以下异常。</p>
<p><img src="https://img-blog.csdnimg.cn/20200227195745649.png" alt="status 405"></p>
<h5 id="解决方法：将两个服务器都进行重启，重新部署刷新项目"><a href="#解决方法：将两个服务器都进行重启，重新部署刷新项目" class="headerlink" title="解决方法：将两个服务器都进行重启，重新部署刷新项目"></a>解决方法：将两个服务器都进行重启，重新部署刷新项目</h5><h3 id="2-0-status-409"><a href="#2-0-status-409" class="headerlink" title="2.0 status 409"></a>2.0 status 409</h3><p>修改完Tomcat服务器web.xml，项目重启正常时，如果在接受图片的服务器没有路径中的文件夹时，会出现如下异常。<br><img src="https://img-blog.csdnimg.cn/20200227200105338.png" alt="在这里插入图片描述"><br>原因，调用webResource的put()方法时无法找到图片服务器相应的资源文件夹。因为服务器打包项目后资源文件存在target文件夹下，在其路径下找到与项目名称相同的文件夹新建路径中的目标文件夹即可（以uploads为例），如下图。<br><img src="https://img-blog.csdnimg.cn/20200227200818578.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzUzOTQ0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h3 id="特别注意的是：如果项目采用maven-Tomcat插件进行部署的话，则需要在本地maven仓库中找到Tomcat的相应文件进行更改。花费时间较多，如果项目只是练手的话，建议改成本地Tomcat服务器进行部署。"><a href="#特别注意的是：如果项目采用maven-Tomcat插件进行部署的话，则需要在本地maven仓库中找到Tomcat的相应文件进行更改。花费时间较多，如果项目只是练手的话，建议改成本地Tomcat服务器进行部署。" class="headerlink" title="特别注意的是：如果项目采用maven Tomcat插件进行部署的话，则需要在本地maven仓库中找到Tomcat的相应文件进行更改。花费时间较多，如果项目只是练手的话，建议改成本地Tomcat服务器进行部署。"></a>特别注意的是：如果项目采用maven Tomcat插件进行部署的话，则需要在本地maven仓库中找到Tomcat的相应文件进行更改。花费时间较多，如果项目只是练手的话，建议改成本地Tomcat服务器进行部署。</h3>]]></content>
      <categories>
        <category>JAVA WEB</category>
      </categories>
      <tags>
        <tag>Java Web</tag>
      </tags>
  </entry>
  <entry>
    <title>servlet 实现简易验证码</title>
    <url>/2020/03/04/Servlet%20%E5%AE%9E%E7%8E%B0%E7%AE%80%E6%98%93%E9%AA%8C%E8%AF%81%E7%A0%81/</url>
    <content><![CDATA[<h3 id="一-验证码本质解释"><a href="#一-验证码本质解释" class="headerlink" title="一.验证码本质解释"></a>一.验证码本质解释</h3><p>1.本质：图片<br>2.目的：防止恶意表单注册</p>
<h3 id="二-验证码生成过程分析"><a href="#二-验证码生成过程分析" class="headerlink" title="二.验证码生成过程分析"></a>二.验证码生成过程分析</h3><p>新建JavaWeb 项目，在src 下新建Servlet ，编写servlet逻辑代码<br><img src="https://img-blog.csdnimg.cn/20190815133012484.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzUzOTQ0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h3 id="三-代码实现"><a href="#三-代码实现" class="headerlink" title="三.代码实现"></a>三.代码实现</h3><p>新建JavaWeb 项目，在src 下新建Servlet ，编写servlet逻辑代码，在tomcat服务器部署项目</p>
<h6 id="servlet-代码如下"><a href="#servlet-代码如下" class="headerlink" title="servlet 代码如下"></a>servlet 代码如下</h6><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.sun.image.codec.jpeg.JPEGCodec;</span><br><span class="line"><span class="keyword">import</span> com.sun.image.codec.jpeg.JPEGImageEncoder;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.imageio.ImageIO;</span><br><span class="line"><span class="keyword">import</span> javax.imageio.plugins.jpeg.JPEGImageWriteParam;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.image.BufferedImage;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.util.Random;</span><br><span class="line"></span><br><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/checkCodeServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">checkCodeServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> width=<span class="number">500</span>;</span><br><span class="line">        <span class="keyword">int</span> height=<span class="number">300</span>;</span><br><span class="line">        BufferedImage image = <span class="keyword">new</span> BufferedImage(width,height,BufferedImage.TYPE_INT_RGB);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//美化图片</span></span><br><span class="line">        <span class="comment">//2.1 填充背景色</span></span><br><span class="line">        Graphics g = image.getGraphics();</span><br><span class="line">        g.setColor(Color.pink);</span><br><span class="line">        g.fillRect(<span class="number">0</span>,<span class="number">0</span>,width,height);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//画边框</span></span><br><span class="line">        g.setColor(Color.red);</span><br><span class="line">        g.drawRect(<span class="number">0</span>,<span class="number">0</span>,width-<span class="number">1</span>,height-<span class="number">1</span>);</span><br><span class="line">        String str = <span class="string">"QWERTYUIOPASDFGHJKLZXCVBNMqwertyuiopasdfghjklzxcvbnm1234567890"</span>;</span><br><span class="line">        <span class="comment">//生成随机角标</span></span><br><span class="line">        g.setColor(Color.blue);</span><br><span class="line">        Random rand = <span class="keyword">new</span> Random();</span><br><span class="line">        <span class="comment">//写验证码</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;=<span class="number">4</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">int</span> index= rand.nextInt(str.length());</span><br><span class="line">            <span class="keyword">char</span> ch= str.charAt(index);</span><br><span class="line">            g.drawString(ch+<span class="string">""</span>,width/<span class="number">5</span>*i,height/<span class="number">2</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//画干扰线</span></span><br><span class="line">        g.setColor(Color.GREEN);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;<span class="number">10</span> ; i++) &#123;</span><br><span class="line">            <span class="keyword">int</span> x1=rand.nextInt(width);</span><br><span class="line">            <span class="keyword">int</span> x2=rand.nextInt(width);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">int</span> y1=rand.nextInt(width);</span><br><span class="line">            <span class="keyword">int</span> y2=rand.nextInt(width);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            g.drawLine(x1,y1,x2,y2);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//将图片输出到页面</span></span><br><span class="line"><span class="comment">//        ImageIO.write(image,"jpg",resp.getOutputStream());</span></span><br><span class="line">        JPEGImageEncoder encoder = JPEGCodec.createJPEGEncoder(resp.getOutputStream());</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        encoder.encode(image);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">      <span class="keyword">this</span>.doPost(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="四-实现效果"><a href="#四-实现效果" class="headerlink" title="四.实现效果"></a>四.实现效果</h3><p><img src="https://img-blog.csdnimg.cn/20190815133631885.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzUzOTQ0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h5 id="部署完成后，刷新浏览器页面，即可实现验证码图片的更新"><a href="#部署完成后，刷新浏览器页面，即可实现验证码图片的更新" class="headerlink" title="部署完成后，刷新浏览器页面，即可实现验证码图片的更新"></a>部署完成后，刷新浏览器页面，即可实现验证码图片的更新</h5>]]></content>
      <categories>
        <category>JAVA WEB</category>
      </categories>
      <tags>
        <tag>Java Web</tag>
      </tags>
  </entry>
  <entry>
    <title>python 实现图灵机XN_2 模拟</title>
    <url>/2020/03/04/python%20%E5%AE%9E%E7%8E%B0%E5%9B%BE%E7%81%B5%E6%9C%BA%20XN_2%20%E6%A8%A1%E6%8B%9F/</url>
    <content><![CDATA[<h3 id="一．-题目分析"><a href="#一．-题目分析" class="headerlink" title="一．    题目分析"></a>一．    题目分析</h3><p>通过编程模拟某一图灵机的工作过程，掌握图灵机的概念与基本结构。将图灵机内态变化及指令输出用高级语言实现逐行输出。从而理解图灵机的编码方式。</p>
<h3 id="二．-算法构造"><a href="#二．-算法构造" class="headerlink" title="二．    算法构造"></a>二．    算法构造</h3><ol>
<li>实现输入十进制整数的二进制编码，并将其转化为二进制扩展码。</li>
<li>选择图灵机（XN*2），将1转化过来的二进制扩展码用if（elif）语句实现判断后的图灵机指令操作。</li>
<li>Show_binary函数对2中turing_operate操作后的二进制码（字符串）进行输出。</li>
<li>调用方法，实现完整功能</li>
</ol>
<h3 id="三．-算法实现"><a href="#三．-算法实现" class="headerlink" title="三．    算法实现"></a>三．    算法实现</h3><h5 id="Python（Pycharm）编译"><a href="#Python（Pycharm）编译" class="headerlink" title="Python（Pycharm）编译"></a>Python（Pycharm）编译</h5><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">conversion_nu</span><span class="params">()</span>:</span></span><br><span class="line">    decimalism = int(input(<span class="string">"请输入您的整数："</span>))</span><br><span class="line">    binary = bin(decimalism).replace(<span class="string">'0b'</span>, <span class="string">''</span>)  <span class="comment"># bin 函数转化十进制</span></span><br><span class="line">    print(<span class="string">"转化为二进制为："</span>+binary)</span><br><span class="line">    </span><br><span class="line">    tensor = list(map(int, binary)) <span class="comment"># 将二进制转为列表</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> tensor[<span class="number">0</span>] == <span class="string">'0'</span>: <span class="comment"># 判断输入值0时的情况</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        new_tensor = [<span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>] <span class="comment"># 任何非零数据转化二进制第一位010</span></span><br><span class="line">        <span class="keyword">for</span> a <span class="keyword">in</span> tensor[<span class="number">1</span>:]:</span><br><span class="line">            <span class="keyword">if</span> a == <span class="number">1</span>:</span><br><span class="line">                new_tensor.append(<span class="number">10</span>) <span class="comment"># 对第二位后的值进行操作，将操作值存在new_tensor中</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">if</span> a == <span class="number">0</span>:</span><br><span class="line">                    new_tensor.append(<span class="number">0</span>)</span><br><span class="line">        new_tensor.append(<span class="number">110</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> new_tensor <span class="comment"># 返回值作为turing_operate 的参数</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="string">'''turing machine operation</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">turing_operate</span><span class="params">(new_tensor)</span>:</span></span><br><span class="line"></span><br><span class="line">    tend = [str(i) <span class="keyword">for</span> i <span class="keyword">in</span> new_tensor]</span><br><span class="line">    tend.append(<span class="string">"0"</span>) <span class="comment"># 内态补位操作</span></span><br><span class="line">    tend.append(<span class="string">'0'</span>)</span><br><span class="line"></span><br><span class="line">    a = <span class="string">''</span>.join(tend)</span><br><span class="line">    eve_tend = list(a)  <span class="comment"># 转化为单值字符</span></span><br><span class="line"></span><br><span class="line">    state = <span class="string">'0'</span> <span class="comment"># 初始化内态</span></span><br><span class="line">    arr = []</span><br><span class="line">    <span class="string">'''</span></span><br><span class="line"><span class="string">    图灵机操作</span></span><br><span class="line"><span class="string">    '''</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>, len(eve_tend)):</span><br><span class="line">        print(<span class="string">"第"</span> + str(i+<span class="number">1</span>) + <span class="string">"步"</span>)</span><br><span class="line">        <span class="keyword">if</span> state == <span class="string">'0 '</span><span class="keyword">and</span> eve_tend[i] == <span class="string">'0'</span>:</span><br><span class="line"></span><br><span class="line">            state = <span class="string">'0'</span></span><br><span class="line">            eve_tend[i] = <span class="string">'0'</span></span><br><span class="line">        <span class="keyword">elif</span> state == <span class="string">'0'</span> <span class="keyword">and</span> eve_tend[i] == <span class="string">'1'</span>:</span><br><span class="line"></span><br><span class="line">            state = <span class="string">'1'</span></span><br><span class="line">            eve_tend[i] = <span class="string">'0'</span></span><br><span class="line">        <span class="keyword">elif</span> state == <span class="string">'1'</span> <span class="keyword">and</span> eve_tend[i] == <span class="string">'0'</span>:</span><br><span class="line"></span><br><span class="line">            state = <span class="string">'0'</span></span><br><span class="line">            eve_tend[i] = <span class="string">'1'</span></span><br><span class="line">        <span class="keyword">elif</span> state == <span class="string">'1'</span> <span class="keyword">and</span> eve_tend[i] == <span class="string">'1'</span>:</span><br><span class="line"></span><br><span class="line">            state = <span class="string">'10'</span></span><br><span class="line">            eve_tend[i] = <span class="string">'0'</span></span><br><span class="line">        <span class="keyword">elif</span> state == <span class="string">'10'</span> <span class="keyword">and</span> eve_tend[i] == <span class="string">'0'</span>:</span><br><span class="line"></span><br><span class="line">            state = <span class="string">'11'</span></span><br><span class="line">            eve_tend[i] = <span class="string">'1'</span></span><br><span class="line">        <span class="keyword">elif</span> state == <span class="string">'11'</span> <span class="keyword">and</span> eve_tend[i] == <span class="string">'0'</span>:</span><br><span class="line"></span><br><span class="line">            state = <span class="string">'0'</span></span><br><span class="line">            eve_tend[i] = <span class="string">'1'</span></span><br><span class="line"></span><br><span class="line">            arr.append(eve_tend)</span><br><span class="line">        carry = [str(i) <span class="keyword">for</span> i <span class="keyword">in</span> eve_tend] <span class="comment"># 聚合操作后的列表</span></span><br><span class="line">        temp = <span class="string">''</span>.join(carry)</span><br><span class="line">        print(<span class="string">"当前内态: "</span>+state+<span class="string">"    "</span>+<span class="string">"当前扩展码: "</span>+temp)</span><br><span class="line">    print(<span class="string">"stop"</span>)</span><br><span class="line">    <span class="keyword">return</span> arr</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">binary_to_metric</span><span class="params">(arr)</span>:</span></span><br><span class="line">    metric = arr[<span class="number">0</span>]</span><br><span class="line">    tes = [int(i) <span class="keyword">for</span> i <span class="keyword">in</span> metric]</span><br><span class="line">    <span class="comment">#print(tes)</span></span><br><span class="line">    final = []</span><br><span class="line">    <span class="keyword">for</span> e <span class="keyword">in</span> range(<span class="number">0</span>, len(tes)):</span><br><span class="line">        <span class="keyword">if</span> tes[e] == <span class="number">1</span> <span class="keyword">and</span> tes[e + <span class="number">1</span>] == <span class="number">0</span>:</span><br><span class="line">            final.append(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">elif</span> (e + <span class="number">1</span>) &lt; len(tes) <span class="keyword">and</span> tes[e] == <span class="number">0</span> <span class="keyword">and</span> tes[e + <span class="number">1</span>] == <span class="number">0</span>:</span><br><span class="line">            final.append(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">elif</span> tes[e] == <span class="number">1</span> <span class="keyword">and</span> tes[e + <span class="number">1</span>] == <span class="number">1</span> <span class="keyword">and</span> tes[e + <span class="number">2</span>] == <span class="number">0</span>:</span><br><span class="line">            final.append(<span class="string">','</span>)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    final.remove(<span class="string">','</span>)</span><br><span class="line">    ls = [str(i) <span class="keyword">for</span> i <span class="keyword">in</span> final]</span><br><span class="line">    ls1 = <span class="string">''</span>.join(ls)</span><br><span class="line">    print(<span class="string">'转化完成的二进制码为：'</span> + ls1)</span><br><span class="line">    F = int(ls1, <span class="number">2</span>)</span><br><span class="line">    print(<span class="string">"XN*2:    "</span>, end=<span class="string">" "</span>)</span><br><span class="line">    print(F)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">调用函数</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line">s = conversion_nu() <span class="comment"># 调用</span></span><br><span class="line">h = turing_operate(s) <span class="comment"># 函数作为参数传入</span></span><br><span class="line">binary_to_metric(h)</span><br></pre></td></tr></table></figure>
<h3 id="四．-调试，测试及运行结果"><a href="#四．-调试，测试及运行结果" class="headerlink" title="四．    调试，测试及运行结果"></a>四．    调试，测试及运行结果</h3><p>小数据测试<img src="https://img-blog.csdnimg.cn/20190320154513392.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzUzOTQ0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">)较大数据测试<img src="https://img-blog.csdnimg.cn/2019032015452646.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzUzOTQ0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h3 id="五．-经验归纳"><a href="#五．-经验归纳" class="headerlink" title="五．    经验归纳"></a>五．    经验归纳</h3><p>本次程序设计，算法相对来说较为简单明了，实现起来不算困难，但因为自学了python，想用python 完成此次编程。由于是第一次用python写具有功能性的代码，遇到了不少困难。首先是函数间参数传入问题，c++及java中都不存在<strong>init</strong>函数（self）参数的问题，参数传入较好理解，python中此参数让人备受困扰，在查阅相关博客时还学习到python可以将类内函数作为另一函数的参数传入，在Java中只能做到函数间的相互调用。其次是python的对象函数调用，因为没有python的编程经验，此方面花了不少时间，但也学到了面对对象的方法在不同语言中的通用性及区别。</p>
<h4 id="补充"><a href="#补充" class="headerlink" title="补充:"></a>补充:</h4><p>1.当python出现列表套列表时，可将里边的列表当作是外边的列表元素处理，将里边的列表剥离出来时只需要另新建变量使其等于外边列表的其所处的索引。<br>2.python函数之间传值时可能会出现值变化的情况，此时一定要注意传参顺序，和传参的数据类型。另外，python可将函数作为参数传入另一个函数，此时就需要注意函数是否被重复调用。</p>
]]></content>
      <categories>
        <category>Python 应用</category>
      </categories>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>java实现最大公约数最大公倍数求解及Hankson问题</title>
    <url>/2020/03/04/N%E4%B8%AA%E6%95%B0%E7%9A%84%E6%9C%80%E5%A4%A7%E5%85%AC%E7%BA%A6%E6%95%B0%EF%BC%8C%E6%9C%80%E5%B0%8F%E5%85%AC%E5%80%8D%E6%95%B0%E6%B1%82%E8%A7%A3%E5%8F%8Ahankson%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<h3 id="1-java实现最大公约数最大公倍数求解"><a href="#1-java实现最大公约数最大公倍数求解" class="headerlink" title="1.java实现最大公约数最大公倍数求解"></a>1.java实现最大公约数最大公倍数求解</h3><h3 id="2-hankson问题求解"><a href="#2-hankson问题求解" class="headerlink" title="2.hankson问题求解"></a>2.hankson问题求解</h3><h4 id="一．-题目要求"><a href="#一．-题目要求" class="headerlink" title="一．    题目要求"></a>一．    题目要求</h4><p>基本要求： 求N个数的最大公约数和最小公倍数。用C或C++或java或python语言实现程序解决问题。<br>          1.程序风格良好(使用自定义注释模板)<br>          2.提供友好的输入输出，并进行输入数据的正确性验证。<br>提高要求：<br>Hanks博士是BT（Bio-Tech，生物技术）领域的知名专家，他的儿子名叫Hankson。现在，刚刚放学回家的Hankson正在思考一个有趣的问题。<br>今天在课堂上，老师讲解了如何求两个正整数c1和c2的最大公约数和最小公倍数。现在Hankson认为自己已经熟练地掌握了这些知识，他开始思考一个“求公约数”和“求公倍数”之类问题的“逆问题”，这个问题是这样的：已知正整数a0,a1,b0,b1，设某未知正整数x满足：<br>1、  x和a0的最大公约数是a1；<br>2、  x和b0的最小公倍数是b1。<br>Hankson的“逆问题”就是求出满足条件的正整数x。但稍加思索之后，他发现这样的x并不唯一，甚至可能不存在。因此他转而开始考虑如何求解满足条件的x的个数。请你帮助他编程求解这个问题。<br>输入格式<br>输入第一行为一个正整数n，表示有n组输入数据。接下来的n行每行一组输入数据，为四个正整数a0，a1，b0，b1，每两个整数之间用一个空格隔开。输入数据保证a0能被a1整除，b1能被b0整除。<br>输出格式<br>输出共n行。每组输入数据的输出结果占一行，为一个整数。<br>对于每组数据：若不存在这样的x，请输出0；<br>若存在这样的x，请输出满足条件的x的个数；<br>样例输入<br>2<br>41 1 96 288<br>95 1 37 1776<br>样例输出<br>6<br>2</p>
<h4 id="二．算法设计思路"><a href="#二．算法设计思路" class="headerlink" title="二．算法设计思路"></a>二．算法设计思路</h4><p>1．    多个数据的最大公约数和最小公倍数<br>根据两个数据的算法，采用迭代法实现多个数据的计算。先计算出前两个数的最大公约数及最小公倍数，递归代入先前定义的计算函数。从而达到计算N个的目的。<br>     2 .  hankson.通过数学推算x的取值在a0~b1间，用循环代入题目要求，达到计算x 个数的目的。</p>
<h4 id="三．-代码实现（java）"><a href="#三．-代码实现（java）" class="headerlink" title="三．    代码实现（java）"></a>三．    代码实现（java）</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 1.实现多整数最大公约数，最大公倍数求解</span></span><br><span class="line"><span class="comment"> * 2.实现hankson问题x个数的计数*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Ngdc</span> </span>&#123;</span><br><span class="line">	 <span class="function"><span class="keyword">static</span> <span class="keyword">int</span>  <span class="title">gcds</span> <span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span><span class="comment">//递归调用//两个数的最大公约数求解</span></span></span><br><span class="line"><span class="function">	   </span></span><br><span class="line"><span class="function">		</span>&#123;</span><br><span class="line">		<span class="keyword">if</span>(a%b==<span class="number">0</span>)</span><br><span class="line">			<span class="keyword">return</span> b;</span><br><span class="line">		<span class="keyword">else</span></span><br><span class="line">			<span class="keyword">return</span> gcds(b,a%b);</span><br><span class="line">	&#125;</span><br><span class="line">	 <span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">multiple</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span><span class="comment">//两个数的最小公倍数求解</span></span></span><br><span class="line"><span class="function">	 </span>&#123;</span><br><span class="line">	 <span class="keyword">return</span>(x*y/gcds(x,y));</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">ngcd</span><span class="params">(<span class="keyword">int</span> []a)</span><span class="comment">//n个数的最大公约数求解</span></span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">		<span class="keyword">int</span> i=<span class="number">0</span>;</span><br><span class="line">		<span class="keyword">int</span> temp=gcds(a[i],a[i+<span class="number">1</span>]);</span><br><span class="line">		i+=<span class="number">2</span>;</span><br><span class="line">		<span class="keyword">while</span>(i&lt;a.length)</span><br><span class="line">		&#123;</span><br><span class="line">			gcds(temp,a[i]);</span><br><span class="line">			i++;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> temp;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">nlcm</span><span class="params">(<span class="keyword">int</span> []a)</span><span class="comment">//n个数的最小公倍数求解</span></span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">		<span class="keyword">int</span> i=<span class="number">0</span>;</span><br><span class="line">		<span class="keyword">int</span> temp=multiple(a[i],a[i+<span class="number">1</span>]);</span><br><span class="line">		i+=<span class="number">2</span>;</span><br><span class="line">		<span class="keyword">while</span>(i&lt;a.length)</span><br><span class="line">		&#123;</span><br><span class="line">			multiple(temp,a[i]);</span><br><span class="line">			i++;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> temp;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span>[][] setArray()<span class="comment">//放置数据 函数</span></span><br><span class="line">	&#123;</span><br><span class="line">		Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">		System.out.println(<span class="string">"请输入您想输入数据的组数:"</span>);</span><br><span class="line">		<span class="keyword">int</span> n=sc.nextInt();</span><br><span class="line">	    <span class="keyword">if</span>(n&lt;<span class="number">1</span>)</span><br><span class="line">		&#123;System.out.println(<span class="string">"请重新输入"</span>);&#125;</span><br><span class="line">		</span><br><span class="line">		<span class="keyword">int</span>[][] array = <span class="keyword">new</span> <span class="keyword">int</span>[n][<span class="number">4</span>];</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; array.length; i++) &#123;</span><br><span class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">4</span>; j++) &#123;</span><br><span class="line">				array[i][j] = sc.nextInt();</span><br><span class="line">			&#125;</span><br><span class="line">			</span><br><span class="line">		&#125;</span><br><span class="line">		sc.close();</span><br><span class="line">		<span class="keyword">return</span> array;</span><br><span class="line">	</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">judgecount</span><span class="params">(<span class="keyword">int</span> array[][])</span><span class="comment">//x个数计算函数</span></span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">		<span class="keyword">int</span> count=<span class="number">0</span>;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> e=<span class="number">0</span>;e&lt;array.length;e++) &#123;</span><br><span class="line">			<span class="keyword">if</span>(array[e][<span class="number">0</span>]%array[e][<span class="number">1</span>]!=<span class="number">0</span>&amp;&amp;array[e][<span class="number">3</span>]%array[e][<span class="number">2</span>]!=<span class="number">0</span>)</span><br><span class="line">        	</span><br><span class="line">				&#123;System.out.println(<span class="string">"输入非法，重新输入      （使每一行第一个数被第二个整除，第四个被第二个整除）"</span>);	&#125;</span><br><span class="line">			<span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=array[e][<span class="number">0</span>];i&lt;=array[e][<span class="number">3</span>];i++) &#123;</span><br><span class="line">        	<span class="keyword">if</span>(gcds(i,array[e][<span class="number">0</span>])==array[e][<span class="number">1</span>]&amp;&amp;multiple(i,array[e][<span class="number">2</span>])==array[e][<span class="number">3</span>])</span><br><span class="line">        &#123;count++;</span><br><span class="line">        &#125;</span><br><span class="line">     </span><br><span class="line">        </span><br><span class="line">&#125;</span><br><span class="line">        System.out.println(<span class="string">"x个数    "</span>+count*<span class="number">2</span>);&#125;&#125;</span><br><span class="line">		<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">		System.out.println(<span class="string">"请选择您想要的操作方式：1.N个数的最大公约数      2.Hankson"</span>);</span><br><span class="line">		<span class="keyword">int</span> s=sc.nextInt();</span><br><span class="line">		<span class="keyword">switch</span> (s) &#123;</span><br><span class="line">		<span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">			System.out.println(<span class="string">"请输入您想输入的数据个数N:"</span>);</span><br><span class="line">		<span class="keyword">int</span> n=sc.nextInt();</span><br><span class="line">		<span class="keyword">int</span>[] array=<span class="keyword">new</span> <span class="keyword">int</span>[n];</span><br><span class="line">		<span class="keyword">if</span>(n&lt;<span class="number">2</span>)</span><br><span class="line">		&#123;System.out.println(<span class="string">"输入有误，请输入大于2的整数"</span>);</span><br><span class="line">		&#125;<span class="keyword">else</span></span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">		&#123;</span><br><span class="line">			array[i]=sc.nextInt();</span><br><span class="line">		&#125;</span><br><span class="line">		System.out.println(<span class="string">"这N个数的最大公约数是："</span>+ngcd(array));</span><br><span class="line">		System.out.println(<span class="string">"这N个数的最小公倍数是："</span>+nlcm(array));</span><br><span class="line">		sc.close();</span><br><span class="line">		<span class="keyword">break</span>;</span><br><span class="line">		<span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">			<span class="keyword">int</span> arr[][]=setArray();<span class="comment">//接收setArray()返回值</span></span><br><span class="line">			judgecount(arr);<span class="comment">//调用 x 计数函数</span></span><br><span class="line">		&#125;</span><br><span class="line">	&#125;&#125;</span><br></pre></td></tr></table></figure>
<h4 id="四-测试截图"><a href="#四-测试截图" class="headerlink" title="四.测试截图"></a>四.测试截图</h4><p><img src="https://img-blog.csdnimg.cn/20190322224921224.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzUzOTQ0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20190322225017719.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzUzOTQ0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h4 id="五-个人总结"><a href="#五-个人总结" class="headerlink" title="五.个人总结"></a>五.个人总结</h4><p>此次程序设计基本要求算法较为简单，在上次的算法基础上变通，复用即可实现。所以差距现在代码的简洁和高效性上。提高要求中Hankson 算法将题目要求变成代码需要进行对X 的变通。经过数学归纳得出X 值所在范围后，问题得到简化。<br>虽然本学期开了java课，但用java写一个正真具有功能的代码还是第一次，本次程序设计进一步熟悉了java语法及函数之间的调用，也认识到了java语言的强大。不足之处很多，如在编码的时候经常遇到语法及算法问题，编程实践能力欠缺，时间也拖得有些长。另外，在数据的异常处理方面，也做得不够好，想用try catch 语句，但是由于还没有掌握，便放弃了。只进行了简单的异常处理，达不到完全符合要求。程序的模块化也做得不够好，争取在接下来的时间里填补空缺，下次做得更好。</p>
]]></content>
      <categories>
        <category>java基础</category>
      </categories>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title>Maven 创建webapp骨架无法使用@WebServlet注解配置</title>
    <url>/2020/03/04/Maven%E5%88%9B%E5%BB%BAwebapp%E9%AA%A8%E6%9E%B6%E6%97%A0%E6%B3%95%E4%BD%BF%E7%94%A8@WebServlet%E6%9D%A5%E5%AE%9E%E7%8E%B0%E6%B3%A8%E8%A7%A3%E9%85%8D%E7%BD%AE%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</url>
    <content><![CDATA[<h3 id="利用maven框架创建web工程"><a href="#利用maven框架创建web工程" class="headerlink" title="利用maven框架创建web工程"></a>利用maven框架创建web工程</h3><p><img src="https://img-blog.csdnimg.cn/20200108231002904.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzUzOTQ0,size_16,color_FFFFFF,t_70" alt="创建 Maven  web 工程"><br>如上图所示，在利用maven骨架创建web项目时，默认选择创建webapp:1.4版本，由于在早期的web工程中并不支持@WebServlet注解配置，甚至不支持El表达式（在web 3.0版本之后才支持），所以在写servlet 时想使用@WebServlet进行url-pattern配置是不能够完成的。</p>
<h3 id="问题解决"><a href="#问题解决" class="headerlink" title="问题解决"></a>问题解决</h3><h4 id="1-改变web-xml文件头来更改web工程版本"><a href="#1-改变web-xml文件头来更改web工程版本" class="headerlink" title="1.改变web.xml文件头来更改web工程版本"></a>1.改变web.xml文件头来更改web工程版本</h4><ul>
<li>找到本地仓库文件 如 ：E:\maven_repository</li>
<li>打开创建web工程的依赖jar包             路径如下：E:\maven_repository\org\apache\maven\archetypes\maven-archetype-webapp\1.4</li>
<li><img src="https://img-blog.csdnimg.cn/20200108232552775.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzUzOTQ0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li>
<li>如图用压缩软件打开jar包 <h4 id="注意：不是解压缩"><a href="#注意：不是解压缩" class="headerlink" title="注意：不是解压缩"></a>注意：不是解压缩</h4><img src="https://img-blog.csdnimg.cn/20200108232932955.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzUzOTQ0,size_16,color_FFFFFF,t_70" alt="修改web.xml文件"><br>修改代码如下</li>
</ul>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">xmlns</span>=<span class="string">"http://xmlns.jcp.org/xml/ns/javaee"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://xmlns.jcp.org/xml/ns/javaee</span></span></span><br><span class="line"><span class="tag"><span class="string">                      http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">version</span>=<span class="string">"4.0"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">metadata-complete</span>=<span class="string">"false"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h4 id="注意一定要将matadata-complete属性改为”false”这样创建的web工程才是web-4-0"><a href="#注意一定要将matadata-complete属性改为”false”这样创建的web工程才是web-4-0" class="headerlink" title="注意一定要将matadata-complete属性改为”false”这样创建的web工程才是web-4.0"></a>注意一定要将matadata-complete属性改为”false”这样创建的web工程才是web-4.0</h4><ul>
<li>此处代码只是一个参考，正确做法是打开TomCat安装路径找到以下文件复制粘贴到上述的jar包web.xml中</li>
<li>Tomcat 中路径如下：D:\Tomcat9.0_Tomcat9.2\webapps\ROOT\WEB-INF</li>
<li><img src="https://img-blog.csdnimg.cn/20200108234017118.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzUzOTQ0,size_16,color_FFFFFF,t_70" alt="修改参数"><h6 id="一定注意要修改metadata-complete参数（重要的话说两遍）"><a href="#一定注意要修改metadata-complete参数（重要的话说两遍）" class="headerlink" title="一定注意要修改metadata-complete参数（重要的话说两遍）"></a>一定注意要修改metadata-complete参数（重要的话说两遍）</h6>这样就完成了webapp项目版本的升级</li>
</ul>
<h4 id="2-创建web-4-0工程后实现-WebServlet注解配置"><a href="#2-创建web-4-0工程后实现-WebServlet注解配置" class="headerlink" title="2.创建web-4.0工程后实现@WebServlet注解配置"></a>2.创建web-4.0工程后实现@WebServlet注解配置</h4><h6 id="要实现maven-工程的Servlet编写，首先要在pom-xml中使用来导入依赖，代码如下："><a href="#要实现maven-工程的Servlet编写，首先要在pom-xml中使用来导入依赖，代码如下：" class="headerlink" title="要实现maven 工程的Servlet编写，首先要在pom.xml中使用来导入依赖，代码如下："></a>要实现maven 工程的Servlet编写，首先要在pom.xml中使用<dependency></dependency>来导入依赖，代码如下：</h6><p>servlet -api 依赖有代码中所示的两种版本，已注释的版本不支持@WebServlet注释配解 请务必使用下边未加注释的版本，另外注意在 <version>3.1.0</version>后加上 <scope>provided</scope>标签，不加此标签也会导致注解配置不能使用。</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--    &lt;dependency&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--      &lt;groupId&gt;javax.servlet&lt;/groupId&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--      &lt;artifactId&gt;servlet-api&lt;/artifactId&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--      &lt;version&gt;2.5&lt;/version&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--    &lt;/dependency&gt;--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>javax.servlet-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.1.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>进行上述更改后maven创建的web项目在可正常使用@WebServlet进行注释配解。 </p>
]]></content>
      <categories>
        <category>JAVA WEB</category>
      </categories>
      <tags>
        <tag>Java Web</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux文件目录及常用命令</title>
    <url>/2020/03/04/Linux%20%E6%96%87%E4%BB%B6%E7%9B%AE%E5%BD%95%E5%8F%8A%E5%B8%B8%E7%94%A8(%E7%AE%80%E5%8D%95)%E5%91%BD%E4%BB%A4/</url>
    <content><![CDATA[<h3 id="1-1文件和目录简介"><a href="#1-1文件和目录简介" class="headerlink" title="1.1文件和目录简介"></a>1.1文件和目录简介</h3><p><strong>Linux和windows 文件存储方式不同，Windows有多个根目录（/c/d/e/f）linux 只有一个根目录<br>Linux 根目录： 文件–》 其他–》计算机</strong></p>
<p><strong>根目录：</strong></p>
<ol>
<li>/bin 二进制文件</li>
<li>/home 用户目录</li>
<li>/home/xxx(user) 用户家目录</li>
<li>/etc 系统配置文件目录</li>
<li>/root 超级管理员的目录</li>
</ol>
<h3 id="1-2-Linux终端命令格式"><a href="#1-2-Linux终端命令格式" class="headerlink" title="1.2 Linux终端命令格式"></a>1.2 Linux终端命令格式</h3><p><strong>终端</strong>：软件控制台，在终端输入命令可快速操作计算机<br>终端命令格式： <em>命令 [-选项] [-参数]</em></p>
<h5 id="查看帮助的两种方式"><a href="#查看帮助的两种方式" class="headerlink" title="查看帮助的两种方式"></a>查看帮助的两种方式</h5><p><strong>（1）.man 命令</strong><br>  【enter】 换行<br>  【空格】 翻页<br>      f - 下一页<br>    b - 上一页<br>    q -  退出<br><strong>（2）.help</strong><br>    命令 –help</p>
<h3 id="1-3-常用命令—-显示文件及目录"><a href="#1-3-常用命令—-显示文件及目录" class="headerlink" title="1.3 常用命令— 显示文件及目录"></a>1.3 常用命令— 显示文件及目录</h3><p>*pwd 显示当前所在的路径<br>*tree 以树状列表方式显示文件夹内容<br>(1)tree 当前目录<br>(2)tree aaa[指定目录]<br>*ls 一列表方式显示 文件夹内容<br> ls -a 显示所有文件（包含隐藏文件）</p>
<h5 id="1-3-1显示文件详细信息"><a href="#1-3-1显示文件详细信息" class="headerlink" title="1.3.1显示文件详细信息"></a>1.3.1显示文件详细信息</h5><p><strong>ls两个选项</strong><br>-l 以详细信息的方式显示列表内容<br>-h 以更加人性化的方式显示文件夹内容（文件大小 k MB..）</p>
<h5 id="1-3-2-切换目录"><a href="#1-3-2-切换目录" class="headerlink" title="1.3.2 切换目录"></a>1.3.2 切换目录</h5><p>（1）.在图形界面进入该文件目录，鼠标右击显示复选框，选择在终端打开即可进入该目录下<br><img src="https://img-blog.csdnimg.cn/20190719205857200.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzUzOTQ0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>（2）cd 命令，切换工作目录<br>    用法：<br>    cd 路径   切换到指定路径<br>    cd 回到家目录<br>    cd ~ 回到家目录<br>    cd . 当前目录<br>    cd .. 上级目录<br>    cd - 上次目录</p>
<h3 id="1-4-常用命令—创建文件和文件夹"><a href="#1-4-常用命令—创建文件和文件夹" class="headerlink" title="1.4 常用命令—创建文件和文件夹"></a>1.4 常用命令—创建文件和文件夹</h3><ul>
<li>mkdir 创建目录 ，递归创建 添加 -p 选项</li>
<li>touch 创建一个文件：touch 文件名 </li>
<li>touch 创建多个文件：touch  filename1 filename2</li>
<li>gedit  用来打开一个文件并进行编辑<br>（1）.打开一个文件后，终端进入等待状态<br>（2）.可以同时编辑多个文件 gedit  filename1 filename2</li>
</ul>
<h5 id="1-4-1-常用命令-删除文件和目录"><a href="#1-4-1-常用命令-删除文件和目录" class="headerlink" title="1.4.1 常用命令- 删除文件和目录"></a>1.4.1 常用命令- 删除文件和目录</h5><ul>
<li>rm -&gt;remove<br>删除文件或者目录<br>删除文件： rm filename</li>
</ul>
<p>此命令提供两种选项<br> -i 以交互模式删除 （提示是否确认删除）<br> -f 强制删除不提示<br>删除文件夹 rm -r filename 递归删除目录中的内容 </p>
<h5 id="1-4-2-常用命令-文件拷贝"><a href="#1-4-2-常用命令-文件拷贝" class="headerlink" title="1.4.2 常用命令-文件拷贝"></a>1.4.2 常用命令-文件拷贝</h5><p>cp -&gt;copy<br>用来拷贝文件或目录<br>拷贝文件 ： cp 原路径 目标路径<br>如： cp ./Javascript/demo.txt  ./java/demo2.txt<br>该命令提供如下选项<br>    -i 交互模式拷贝<br>    -f 强制覆盖不提示<br>    -v 显示拷贝过程<br>    -a 拷贝原有属性</p>
<p><strong>·</strong>拷贝目录 cp -r 源路径 目标路径</p>
<h5 id="1-4-3-常用命令-移动"><a href="#1-4-3-常用命令-移动" class="headerlink" title="1.4.3 常用命令-移动"></a>1.4.3 常用命令-移动</h5><p>mv -&gt;move<br><strong>1.移动文件或文件夹</strong><br>  mv  源路径 目标路径<br>  选项可选如下：<br>-i 交互方式进行文件移动<br>-f 强制覆盖不提示<br>-v 显示移动过程<br>注意：移动文件夹不需要加 -r 选项<br><strong>2.重命名文件及文件夹</strong><br>重命名： 在一个目录下移动才能进行重命名<br>mv 旧文件名 新文件名</p>
<h3 id="1-5-常用命令-其他"><a href="#1-5-常用命令-其他" class="headerlink" title="1.5 常用命令-其他"></a>1.5 常用命令-其他</h3><p><strong>1.    clear</strong><br>清除当前终端显示内容  如果你想秀操作的话 使用快捷键   【ctrl】+【l】<br><strong>2.    【Tab】</strong><br>自动补全文件夹或者文件名<br><strong><em>注意：</em></strong>当在当前文件夹下有相同开头文件名时，补全功能无法实现，此时按两下Tab 系统显示当前文件夹下的所有以所写命令开始的文件名<br><strong>3.  which</strong><br> 查看某个命令所在的位置<br>如： which gedit<br><strong>4. 终止指令的执行</strong><br>【ctrl】+【c】<br><strong>5.终端字体的大小调整</strong><br>放大： ctrl +shift+=<br>缩小： ctrl+ - </p>
<h3 id="1-6-常用命令-日历日期"><a href="#1-6-常用命令-日历日期" class="headerlink" title="1.6 常用命令-日历日期"></a>1.6 常用命令-日历日期</h3><h5 id="cal-查看日历"><a href="#cal-查看日历" class="headerlink" title="cal 查看日历"></a>cal 查看日历</h5><p>cal  -3 查看上月，当前月，下一月<br>cal  -y 显示当年的日历<br>cal  -j 以一年中第—天的形式显示日历<br>cal  + 具体年份 显示所写年份日历</p>
<h5 id="date-查看日期时间"><a href="#date-查看日期时间" class="headerlink" title="date 查看日期时间"></a>date 查看日期时间</h5><p>date  显示当前的年月日时分秒</p>
<h5 id="格式化显示"><a href="#格式化显示" class="headerlink" title="格式化显示"></a>格式化显示</h5><p>date ”+%Y”  输出年份<br>date ”+%m”  输出月份<br>date ”+%d”    输出天<br>date ”+%H”    输出时<br>date ”+%M”    输出分<br>date ”+%S”    输出秒<br>date ”+%F”    格式化输出 如2019-7-19<br>date ”+%T”   格式化输出 如19：56：21</p>
<h3 id="1-7-常用命令-查看历史指令"><a href="#1-7-常用命令-查看历史指令" class="headerlink" title="1.7 常用命令-查看历史指令"></a>1.7 常用命令-查看历史指令</h3><ol>
<li><p>history  查看当前用户服务器所有历史指令</p>
</li>
<li><p>history  数量 显示一定数量的历史指令</p>
</li>
<li><p>！历史指令编号 执行该条历史指令</p>
<p><strong><em>历史指令保存在~/.bash_history 文件中</em></strong></p>
</li>
</ol>
<h3 id="1-8常用命令-文件查看（cat-more）"><a href="#1-8常用命令-文件查看（cat-more）" class="headerlink" title="1.8常用命令-文件查看（cat ,more）"></a>1.8常用命令-文件查看（cat ,more）</h3><h5 id="·cat-查看文件或连接文件"><a href="#·cat-查看文件或连接文件" class="headerlink" title="·cat 查看文件或连接文件"></a><strong>·cat 查看文件或连接文件</strong></h5><p><strong>| 1.查看文件</strong><br>cat 文件名<br>选项：<br>-n 查看文件时，对每一行进行编号<br>-b 非空行进行编号<br>-s 连续两行以上的空行，只显示一行<br><strong>| 2.连接文件，把两个文件合并到 一起进行输出</strong><br>cat filename1 filename2</p>
<h5 id="·more-用来分屏查看文件内容"><a href="#·more-用来分屏查看文件内容" class="headerlink" title="·more 用来分屏查看文件内容"></a><strong>·more 用来分屏查看文件内容</strong></h5><p><strong>选项：</strong><br>+num 从第num行开始查看文件 如：more ./demo.txt +20<br>-p 先清屏，再查看文件<br>-s 连续两行以上的空行，只显示一行<br><strong>快捷键：</strong><br>【enter】查看下一行<br>【空格】查看下一屏<br>Ctrl + f 查看下一屏<br>Ctrl + b 查看上一屏<br>q 退出</p>
<h3 id="1-9-常用命令-数据流-、管道"><a href="#1-9-常用命令-数据流-、管道" class="headerlink" title="1.9 常用命令-数据流 、管道"></a>1.9 常用命令-数据流 、管道</h3><p><img src="https://img-blog.csdnimg.cn/20190721130542847.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzUzOTQ0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><strong>·数据流</strong></p>
<ul>
<li>输入流</li>
<li>输出流</li>
<li>标准的错误输入输出流</li>
</ul>
<p><strong>·重定向：改变数据流向（一般定向到文件中）</strong></p>
<ol>
<li><blockquote>
<p>重定向</p>
</blockquote>
</li>
<li><blockquote>
<blockquote>
<p>以追加的方式重定向</p>
</blockquote>
</blockquote>
</li>
</ol>
<p><strong>·管道</strong></p>
<ul>
<li></li>
<li>| 指令1 |指令2     ps:指令1必须要有输出</li>
</ul>
<p><strong>如： touch demo.txt |more 因为指令1无输出，所以该管道使用错误</strong></p>
]]></content>
      <categories>
        <category>Linux 入门</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux常用指令（续）</title>
    <url>/2020/03/04/linux%20%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4%EF%BC%88%E7%BB%AD%EF%BC%89/</url>
    <content><![CDATA[<h3 id="2-0-常用命令-建立链接"><a href="#2-0-常用命令-建立链接" class="headerlink" title="2.0 常用命令- 建立链接"></a>2.0 常用命令- 建立链接</h3><h5 id="·Linux-中链接文件有两种：软链接，硬链接"><a href="#·Linux-中链接文件有两种：软链接，硬链接" class="headerlink" title="·Linux 中链接文件有两种：软链接，硬链接"></a>·Linux 中链接文件有两种：软链接，硬链接</h5><p><strong>··软链接： 相当于快捷方式，通过软链接可以修改源文件的内容</strong><br><strong><em>ln -s 源文件 链接文件</em></strong></p>
<p>删除软链接，不影响源文件<br>删除源文件，软链接失效<br><strong>··硬链接： 一个文件有多个名字，通过硬链接可以修改源文件的内容。</strong><br><strong><em>ln 源文件 链接文件</em></strong></p>
<p>删除源文件，如果文件还有多个硬链接，则无影响</p>
<p><strong>软硬链接区别：</strong><br>    ·软链接可以指向 一个不存在的文件，硬链接不可以<br>·可以对目录创建软链接，而不能对目录创建硬链接<br><img src="https://img-blog.csdnimg.cn/20190721131039703.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzUzOTQ0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h3 id="2-1-常用命令-文件搜索"><a href="#2-1-常用命令-文件搜索" class="headerlink" title="2.1 常用命令- 文件搜索"></a>2.1 常用命令- 文件搜索</h3><p><strong>·在文本内部搜索 grep</strong><br>    <strong><em>grep  ‘搜索内容’  文件路径</em></strong><br>        <img src="https://img-blog.csdnimg.cn/20190721131057803.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzUzOTQ0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>        <strong>grep ‘teacher’ ./test.txt  即搜索文本中与‘teacher’相关的行 ，关键字用红字标出</strong></p>
<p><strong>grep 内部搜索</strong><br>            <strong>选项：</strong>-n 查看结果的行数<br>                             -i 忽略大小写搜索<br>                             -v 取反搜索，搜索不是关键词范围的其他所有行<br><strong>·grep 正则搜索</strong><br>            grep ‘^a’ 文件路径      【搜索以开头的行】</p>
<p><strong>·在（linux）计算机中搜索文件 find</strong><br>            <strong><em>find 目标文件目录 选项 条件</em></strong> </p>
<p><img src="https://img-blog.csdnimg.cn/201907211311545.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzUzOTQ0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h3 id="2-2-常用命令-归档和压缩"><a href="#2-2-常用命令-归档和压缩" class="headerlink" title="2.2 常用命令-归档和压缩"></a>2.2 常用命令-归档和压缩</h3><p><strong>·归档和解档</strong></p>
<ul>
<li><p>*tar -cvf 归档的文件名.tar 文件1 文件2</p>
</li>
<li><p>tar -xvf 档案文件名*</p>
<p><strong><em>选项f必须放到最后</em></strong></p>
</li>
</ul>
<h4 id="·归档-压缩-和-解压-解档"><a href="#·归档-压缩-和-解压-解档" class="headerlink" title="·归档+压缩 和 解压+解档"></a>·归档+压缩 和 解压+解档</h4><p><strong>·归档+压缩</strong><br>         tar -zcvf 归档的文件名.tar.gz 文件1 文件2<br><strong>·解档+解压</strong><br>tar -zcvf 归档的文件名.tar.gz<br>如果需要指定解档的目录：tar -zxvf 归档的文件名.tar.gc -C 要解压解档到的目录</p>
<h3 id="2-2-1-常用命令-归档和压缩"><a href="#2-2-1-常用命令-归档和压缩" class="headerlink" title="2.2.1 常用命令-归档和压缩"></a>2.2.1 常用命令-归档和压缩</h3><p><strong>·zip 压缩</strong><br>压缩目录：zip -r xxx.zip<br><strong>·unzip 解压缩</strong><br>unzip xxx.zip</p>
<h3 id="2-3-常用命令-文件权限"><a href="#2-3-常用命令-文件权限" class="headerlink" title="2.3 常用命令- 文件权限"></a>2.3 常用命令- 文件权限</h3><p><img src="https://img-blog.csdnimg.cn/20190721131236103.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzUzOTQ0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><strong>·文件权限的构成</strong><br>九个字母，三组 （权限拥有者 u -&gt;user，权限组 g-&gt;group ,其他用户权限o-other）  所有用户权限 a</p>
<p>每一组权限可选的权限有：</p>
<p><em>r、w、x 具体权限如上图</em></p>
<h3 id="2-4-常用命令-权限修改"><a href="#2-4-常用命令-权限修改" class="headerlink" title="2.4 常用命令- 权限修改"></a>2.4 常用命令- 权限修改</h3><h5 id="①字母表示法"><a href="#①字母表示法" class="headerlink" title="①字母表示法"></a>①字母表示法</h5><ul>
<li>·权限修改指令  chmod</li>
<li>用户： u g o a</li>
<li>权限设置 ： +（增加）、-（撤销）、=（设置）</li>
<li>具体权限： r/w/x</li>
<li>用法： chmod 用户 + 具体权限 文件名</li>
</ul>
<p><em>如： chmod u+’r’ test.txt 即为文件拥有者增加文件可读权限<br>chmod u=rwx 1.txt</em></p>
<h5 id="②数字表示法"><a href="#②数字表示法" class="headerlink" title="②数字表示法"></a>②数字表示法</h5><p><img src="https://img-blog.csdnimg.cn/20190721131301812.png" alt="在这里插入图片描述"><br><strong>三位权限数字 ：第一位拥有者 第二位同组用户 第三位 其他用户</strong></p>
<p><em>chomd 权限数字 文件路径</em> </p>
<h3 id="2-4-常用命令-用户管理"><a href="#2-4-常用命令-用户管理" class="headerlink" title="2.4 常用命令-用户管理"></a>2.4 常用命令-用户管理</h3><p><strong>·切换用户</strong><br><strong><em>临时：</em></strong> sudo  命令<br><strong><em>永久：</em></strong> su 用户名 输入用户名对应的密码</p>
<ol>
<li>sudo -s 输入当前用户的密码</li>
<li>passwd 修改密码</li>
<li>passwd  【修改当前用户的密码】</li>
<li>passwd  <strong><strong>【修改</strong></strong>用户的密码】</li>
<li>exit<pre><code>exit 如果当前没有用户在线，直接退出终端
如果多次切换用户，退出到上次登录的用户</code></pre><strong>who</strong><br>用来查看当前系统的登录用户<br><em>选项：</em> -q  统计用户数量<pre><code>-u  显示最后一次操作距离现在的时间</code></pre></li>
</ol>
<h3 id="2-5-常用命令-关机-、重启"><a href="#2-5-常用命令-关机-、重启" class="headerlink" title="2.5 常用命令- 关机 、重启"></a>2.5 常用命令- 关机 、重启</h3><p><img src="https://img-blog.csdnimg.cn/20190721131323483.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzUzOTQ0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h3 id="2-6-常用命令-软件安装与卸载"><a href="#2-6-常用命令-软件安装与卸载" class="headerlink" title="2.6 常用命令- 软件安装与卸载"></a>2.6 常用命令- 软件安装与卸载</h3><p> <strong>Linux 软件安装三种方式</strong></p>
<p>源代码包安装  deb 包安装  apt-get</p>
<p><em>源代码包安装需要先编译后安装，较为麻烦<br>deb包安装需要解决软件依赖问题<br>apt-get 方式较为省事，且安装一般不会出现问题，下做介绍</em></p>
<h5 id="apt-get-方式-安装"><a href="#apt-get-方式-安装" class="headerlink" title="apt-get 方式 安装"></a><strong>apt-get 方式 安装</strong></h5><pre><code>**·配置软件镜像源  修改/etc/apt/source.list**</code></pre><p><em>注意： 在使用 gedit /etc/apt/source.list 命令打开配置文件时，通常情况下会出现权限不够无法修改的情况，此时临时或永久提升权限可修改保存</em><br><em>gedit 文本编辑只在Ubuntu 发行版中有，在centOS中没有</em></p>
<p><strong>命令：</strong> </p>
<ul>
<li>sudo gedit /etc/apt/source.list</li>
<li>更新软件源 sudo  apt-get update</li>
<li>安装软件  sudo apt-get install 软件包名</li>
<li>卸载软件 sudo apt-get remove 软件包名称</li>
</ul>
<h3 id="2-7-ssh-远程登录"><a href="#2-7-ssh-远程登录" class="headerlink" title="2.7 ssh 远程登录"></a>2.7 ssh 远程登录</h3><p><strong>服务器端安装ssh server</strong><br>sudo apt-get install openssh-server<br><strong>·客户端登录</strong></p>
<p>ssh 服务器用户名@服务器地址<br>如 ssh demo @192.168.150.112   –&gt;123</p>
<h3 id="2-8-编辑器-vim介绍及使用"><a href="#2-8-编辑器-vim介绍及使用" class="headerlink" title="2.8 编辑器 vim介绍及使用"></a>2.8 编辑器 vim介绍及使用</h3><h5 id="三种模式："><a href="#三种模式：" class="headerlink" title="三种模式："></a><strong>三种模式：</strong></h5><ol>
<li>命令模式（移动光标，复制，删除）</li>
<li>输入模式（编辑文件）</li>
<li>末行模式（保存文件，查找替换）</li>
</ol>
<h5 id="三种模式转换："><a href="#三种模式转换：" class="headerlink" title="三种模式转换："></a>三种模式转换：</h5><p>打开文件默认是命令模式——【a\i\o】-&gt;输入模式——【：】-&gt;末行模式</p>
<h5 id="vim-操作"><a href="#vim-操作" class="headerlink" title="vim 操作"></a><strong>vim 操作</strong></h5><p>（1）.创建文件 ：vi 文件名——&gt; i 进入编辑模式—&gt;编辑模式—&gt;【esc】到命令模式—&gt;【：】进入末行模式—&gt;wq保存并退出<br>（2）.进入输入模式<br>             - i 光标前插入  I行首插入<br>             - a 光标后 行尾<br>            - o 光标下一行产生新行 O 光标上一行产生新行</p>
<p>（3）.进入命令模式<br>          在任何状态下【esc】</p>
]]></content>
      <categories>
        <category>Linux 入门</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux踩坑实践</title>
    <url>/2020/03/04/Linux%20%20%E5%85%A5%E9%97%A8%EF%BC%88%E5%A1%AB%E5%9D%91%E5%AE%9E%E8%B7%B5%EF%BC%8C%E4%BD%A0%E6%83%B3%E8%A6%81%E7%9A%84%E9%83%BD%E5%9C%A8%E8%BF%99%EF%BC%89/</url>
    <content><![CDATA[<h3 id="linux-常见发行版"><a href="#linux-常见发行版" class="headerlink" title="linux 常见发行版"></a>linux 常见发行版</h3><ul>
<li><strong>CentOS</strong></li>
<li><strong>redHat</strong></li>
<li><strong>ubuntu</strong></li>
<li><pre><code>本Blog 操作均以Ubuntu 18.04 -64 实践
附上百度云镜像链接（VMware,Ubuntu iso）：
链接：https://pan.baidu.com/s/1qLxVvxh5M2AfhWkknv9jIQ     
提取码：oe0t </code></pre></li>
</ul>
<h3 id="一．Ubuntu-图形界面简介"><a href="#一．Ubuntu-图形界面简介" class="headerlink" title="一．Ubuntu 图形界面简介"></a>一．Ubuntu 图形界面简介</h3><p><img src="https://img-blog.csdnimg.cn/20190722151202767.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzUzOTQ0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h3 id="二．Ubuntu-中文输入法及系统语言设置"><a href="#二．Ubuntu-中文输入法及系统语言设置" class="headerlink" title="二．Ubuntu 中文输入法及系统语言设置"></a>二．Ubuntu 中文输入法及系统语言设置</h3><p>– Ubuntu 系统语言环境设置（VMware默认安装为英文），此处设置为中文。<br>附链接：<br><a href="https://blog.csdn.net/gys_20153235/article/details/80490880" target="_blank" rel="noopener">https://blog.csdn.net/gys_20153235/article/details/80490880</a><br>– 搜狗拼音安装(选装)<br>由于搜狗输入法安装需要中文输入法框架fcitx 支持，而默认fcitx 在系统中没有安装，下面给出命令行安装方法</p>
<p>sudo add-apt-repository ppa:fcitx-team/nightly<br>Sudo apt-get update<br>Sudo apt-get install fcitx<br>以下是baidu 提供的安装方法</p>
<p><a href="https://jingyan.baidu.com/article/b7001fe1a7d2c60e7382dd7c.html" target="_blank" rel="noopener">https://jingyan.baidu.com/article/b7001fe1a7d2c60e7382dd7c.html</a></p>
<h3 id="三．常用软件安装"><a href="#三．常用软件安装" class="headerlink" title="三．常用软件安装"></a>三．常用软件安装</h3><h4 id="1-编程工具"><a href="#1-编程工具" class="headerlink" title="(1).编程工具"></a>(1).编程工具</h4><p><strong>–java</strong></p>
<h5 id="lt-1-gt-安装jdk"><a href="#lt-1-gt-安装jdk" class="headerlink" title="&lt;1&gt; 安装jdk"></a>&lt;1&gt; 安装jdk</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">apt install default-jre    y</span><br><span class="line">apt-cache search openjdk</span><br><span class="line">sudo apt-get install openjdk-8-jdk</span><br></pre></td></tr></table></figure>
<h5 id="lt-2-gt-安装代码工具"><a href="#lt-2-gt-安装代码工具" class="headerlink" title="&lt;2&gt; 安装代码工具"></a>&lt;2&gt; 安装代码工具</h5><p>Java 编写代码主流使用eclipse 和 Idea，下面分别做安装方法介绍</p>
<p><strong>·eclipse安装</strong></p>
<p>①　打开终端，输入命令</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo apt-get install eclipse</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/2019072215163845.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzUzOTQ0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>②　输入y/Y  确认继续<br><img src="https://img-blog.csdnimg.cn/20190722151736202.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzUzOTQ0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>③　等待解包完成后可直接打开运行</p>
<p><strong>·IDEA 安装</strong><br>&lt;1&gt;.搜索Idea</p>
<p>进入官网，选择linux版本下载</p>
<p><img src="https://img-blog.csdnimg.cn/20190722151835925.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzUzOTQ0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>&lt;2&gt;.    下载完成后解压提取到某个文件夹下，利用图形化界面文件管理器进入文件bin目录下，如<br>Downloads/idea-IC-191.7479.19/bin<br><img src="https://img-blog.csdnimg.cn/2019072215190844.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzUzOTQ0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>在如上所示的文件目录下单击鼠标右键 ，选择在终端打开</p>
<p>&lt;3&gt;.进入该目录下终端后执行如下指令</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">sudo chmod a=+rx bin/idea.sh     --提升脚本文件读权限和可执行权限</span><br><span class="line">sh idea.sh  --执行脚本文件</span><br></pre></td></tr></table></figure>
<p>&lt;4&gt;.安装<br>如果前边一切进行顺利，此时出现安装窗口。<br>前边步骤相对较为简单，不做过多赘述，值得注意的是下图的窗口，用于选择是否要将IntelliJ IDEA与系统应用程序菜单集成。在几乎每一种情况下，答案是肯定的，否则，为了启动IntelliJ IDEA，我们必须手动执行idea.sh脚本，而这并不是最舒适的方式。因此选择【Next launch Script】创建启动器脚本。<br><img src="https://img-blog.csdnimg.cn/20190722152045283.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzUzOTQ0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>&lt;5&gt;.在菜单搜索框中搜索idea,出现idae图标，添加到收藏夹，即可快捷启动。<br><img src="https://img-blog.csdnimg.cn/20190722152106825.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzUzOTQ0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><strong>–Python</strong><br>因为Ubuntu系统 预装了Python3 Python2<br><img src="https://img-blog.csdnimg.cn/20190722152204324.png" alt="在这里插入图片描述"><br>所以不需要自己下载安装<br>Python 代码编写通常用pycharm和 idle(简单代码编写)，下提供两者的安装方式</p>
<p><strong>&lt;1&gt;idle</strong><br>在终端执行命令  <code>sudo apt-get install idle</code><br><img src="https://img-blog.csdnimg.cn/20190722152304529.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzUzOTQ0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><strong><pycharm></strong><br>因为该软件发行商与idea为同一公司，所以安装步骤及其相似</p>
<ol>
<li>下载完成后解压提取到某个文件夹下，利用图形化界面文件管理器进入文件bin目录下，如<br>Downloads/pycharm-community-2019.1.3/bin<br>在如上所示的文件目录下单击鼠标右键 ，选择在终端打开<br><img src="https://img-blog.csdnimg.cn/2019072215235446.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzUzOTQ0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li>
<li>在终端输入如下指令进行安装<br><code>chmod 555 pycharm.sh</code>    ——为pycharm.sh 脚本文件提升读和可执行权限<br><code>sh pycharm.sh</code>                 ——执行该命令后pycharm进入安装窗口，同样选择是否创建启动脚本是选择是【Next launch script】以创建快捷启动方式</li>
</ol>
<h4 id="2-浏览器—三行命令安装chome"><a href="#2-浏览器—三行命令安装chome" class="headerlink" title="(2)浏览器—三行命令安装chome"></a>(2)浏览器—三行命令安装chome</h4><pre><code>Wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
 sudo dpkg -i google-chrome*
 sudo apt-get install -f</code></pre><h3 id="四．解决linux系统自带火狐浏览器无法播放在线音乐问题"><a href="#四．解决linux系统自带火狐浏览器无法播放在线音乐问题" class="headerlink" title="四．解决linux系统自带火狐浏览器无法播放在线音乐问题"></a>四．解决linux系统自带火狐浏览器无法播放在线音乐问题</h3><pre><code>众所周知Tecent 巴巴一向无视linux, 理所当然，也就没有QQ music for linux 一说，当然其他平台也 好不到哪里去</code></pre><p>那么想听音乐就只能网页在线播放喽，可是当音乐播放键||时，你会绝望的发现并没有声音，试了多次无果，于是转战chome ,就会发现geogle 还是有点东西，播放在线QQ music 毫无压力，回到Firefox，拿出开发工具查看控制台，看到原来是解码器不支持解码AAC,没办法，装一个喽。<br>控制台输入如下命令可安装大多数音频解码：</p>
<pre><code>sudo apt-get install ubuntu-restricted-extras</code></pre><p>安装后重启火狐，问题解决。</p>
]]></content>
      <categories>
        <category>Linux 入门</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>java CORBA 组件化编程</title>
    <url>/2020/03/04/java%E5%AE%9E%E7%8E%B0CORBA%E7%BB%84%E4%BB%B6%E5%8C%96%E7%BC%96%E7%A8%8B/</url>
    <content><![CDATA[<h3 id="一．-题目分析"><a href="#一．-题目分析" class="headerlink" title="一．    题目分析"></a>一．    题目分析</h3><p>1.编写组件相关接口，服务端程序及客户端程序，掌握组件化开发的概念，了解掌握CORBA模型及ORB机制。<br>2.掌握CORBA组件化编程方法。<br>3.理解接口在组件化编程中的具体运用。</p>
<h3 id="二．-CORBA模型分析"><a href="#二．-CORBA模型分析" class="headerlink" title="二．    CORBA模型分析"></a>二．    CORBA模型分析</h3><h5 id="题目一：JAVA版CORBA程序——HelloWorld"><a href="#题目一：JAVA版CORBA程序——HelloWorld" class="headerlink" title="题目一：JAVA版CORBA程序——HelloWorld"></a>题目一：JAVA版CORBA程序——HelloWorld</h5><h6 id="要求编写实现显示“Hello，World！-班级-中文姓名”字符串。"><a href="#要求编写实现显示“Hello，World！-班级-中文姓名”字符串。" class="headerlink" title="要求编写实现显示“Hello，World！+班级+中文姓名”字符串。"></a>要求编写实现显示“Hello，World！+班级+中文姓名”字符串。</h6><h6 id="组件结构图"><a href="#组件结构图" class="headerlink" title="组件结构图:"></a>组件结构图:</h6><p> <img src="https://img-blog.csdnimg.cn/20190518012410570.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzUzOTQ0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h5 id="具体设计："><a href="#具体设计：" class="headerlink" title="具体设计："></a>具体设计：</h5><h6 id="1-编写IDL接口HelloWorld-idl："><a href="#1-编写IDL接口HelloWorld-idl：" class="headerlink" title="1 编写IDL接口HelloWorld.idl："></a>1 编写IDL接口HelloWorld.idl：</h6><p>module sample{<br>interface HelloWorld{<br>wstring sayHello();<br>};<br>};<br>值得注意的是因为服务端程序重写sayHello（）函数时存在返回值为汉字的情况，所以此处将string返回值变成了wstring 。</p>
<h6 id="2编译IDL接口：X-corba-gt-idlj-–fall-HelloWorld-idl"><a href="#2编译IDL接口：X-corba-gt-idlj-–fall-HelloWorld-idl" class="headerlink" title="2编译IDL接口：X:\corba&gt;idlj –fall HelloWorld.idl"></a>2编译IDL接口：X:\corba&gt;idlj –fall HelloWorld.idl</h6><p>在配置好jdk环境变量的情况下，将cmd 窗口文件目录切换到Hello.idl文件所在的路径，输入上述命令，执行后有java-jdk-bin文件目录下的ldlj.exe在命令目录下生成一个文件夹。在此程序中，文件夹名称为sample。文件夹下Java文件如下：<br><img src="https://img-blog.csdnimg.cn/20190518012827760.png" alt="在这里插入图片描述"> </p>
<h6 id="3编写并编译服务器端和客户端文件HelloWorldServer-java，HelloWorldClient-java"><a href="#3编写并编译服务器端和客户端文件HelloWorldServer-java，HelloWorldClient-java" class="headerlink" title="3编写并编译服务器端和客户端文件HelloWorldServer.java，HelloWorldClient.java"></a>3编写并编译服务器端和客户端文件HelloWorldServer.java，HelloWorldClient.java</h6><p> <img src="https://img-blog.csdnimg.cn/2019051801264067.png" alt="在这里插入图片描述"></p>
<h6 id="4启动名字服务器："><a href="#4启动名字服务器：" class="headerlink" title="4启动名字服务器："></a>4启动名字服务器：</h6><p>tnameserv -ORBInitialPort 1050<br>@pause</p>
<h6 id="5启动服务器端程序："><a href="#5启动服务器端程序：" class="headerlink" title="5启动服务器端程序："></a>5启动服务器端程序：</h6><p>java HelloWorldServer -ORBInitialPort 1050<br>@pause</p>
<h6 id="6启动客户端程序："><a href="#6启动客户端程序：" class="headerlink" title="6启动客户端程序："></a>6启动客户端程序：</h6><p>java HelloWorldClient -ORBInitialPort 1050<br>@pause</p>
<h4 id="题目二：JAVA版CORBA程序——Counter"><a href="#题目二：JAVA版CORBA程序——Counter" class="headerlink" title="题目二：JAVA版CORBA程序——Counter"></a>题目二：JAVA版CORBA程序——Counter</h4><h6 id="组件结构图："><a href="#组件结构图：" class="headerlink" title="组件结构图："></a>组件结构图：</h6><p><img src="https://img-blog.csdnimg.cn/20190518013322624.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzUzOTQ0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h5 id="具体设计：-1"><a href="#具体设计：-1" class="headerlink" title="具体设计："></a>具体设计：</h5><h6 id="1-编写IDL接口counter-idl："><a href="#1-编写IDL接口counter-idl：" class="headerlink" title="1 编写IDL接口counter.idl："></a>1 编写IDL接口counter.idl：</h6><p>module CounterApp{<br>    interface Counter{<br>        readonly attribute long value;<br>        void inc();<br>        void dec();<br>    };<br>};</p>
<h6 id="2编译IDL接口：X-corba-gt-idlj-–fall-counter-idl"><a href="#2编译IDL接口：X-corba-gt-idlj-–fall-counter-idl" class="headerlink" title="2编译IDL接口：X:\corba&gt;idlj –fall counter.idl"></a>2编译IDL接口：X:\corba&gt;idlj –fall counter.idl</h6><p>在配置好jdk环境变量的情况下，将cmd 窗口文件目录切换到Hello.idl文件所在的路径，输入上述命令，执行后有java-jdk-bin文件目录下的ldlj.exe在命令目录下生成一个文件夹。在此程序中，文件夹名称为CountApp。文件夹下Java文件如下：<br><img src="https://img-blog.csdnimg.cn/20190518013356946.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzUzOTQ0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h6 id="3编写并编译服务器端和客户端和对象实现文件Server-java，-Client-java，CounterImpl-java-如图："><a href="#3编写并编译服务器端和客户端和对象实现文件Server-java，-Client-java，CounterImpl-java-如图：" class="headerlink" title="3编写并编译服务器端和客户端和对象实现文件Server.java， Client.java，CounterImpl.java 如图："></a>3编写并编译服务器端和客户端和对象实现文件Server.java， Client.java，CounterImpl.java 如图：</h6><p> <img src="https://img-blog.csdnimg.cn/20190518013412511.png" alt="在这里插入图片描述"></p>
<h6 id="4启动名字服务器：-1"><a href="#4启动名字服务器：-1" class="headerlink" title="4启动名字服务器："></a>4启动名字服务器：</h6><p>tnameserv -ORBInitialPort 1050<br>@pause</p>
<h6 id="5启动服务器端程序：-1"><a href="#5启动服务器端程序：-1" class="headerlink" title="5启动服务器端程序："></a>5启动服务器端程序：</h6><p>java Server -ORBInitialPort 1050<br>@pause</p>
<h6 id="6启动客户端程序：-1"><a href="#6启动客户端程序：-1" class="headerlink" title="6启动客户端程序："></a>6启动客户端程序：</h6><p>java Client -ORBInitialPort 1050<br>@pause</p>
<h3 id="三．-组件实现"><a href="#三．-组件实现" class="headerlink" title="三．    组件实现"></a>三．    组件实现</h3><h5 id="1"><a href="#1" class="headerlink" title="1"></a>1</h5><h6 id="HelloWorldClient-java"><a href="#HelloWorldClient-java" class="headerlink" title="HelloWorldClient.java"></a>HelloWorldClient.java</h6><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> sample.*; </span><br><span class="line"><span class="keyword">import</span> org.omg.CosNaming.*; </span><br><span class="line"><span class="keyword">import</span> org.omg.CORBA.*; </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloWorldClient</span> </span>&#123; </span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span> </span>&#123; </span><br><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line">ORB orb = ORB.init(args, <span class="keyword">null</span>);</span><br><span class="line">org.omg.CORBA.Object objRef = orb.resolve_initial_references(<span class="string">"NameService"</span>); </span><br><span class="line">NamingContext ncRef = NamingContextHelper.narrow(objRef); </span><br><span class="line">NameComponent nc = <span class="keyword">new</span> NameComponent(<span class="string">"Hello"</span>,<span class="string">""</span>); </span><br><span class="line">NameComponent path[] = &#123;nc&#125;; </span><br><span class="line">HelloWorld helloWorld = HelloWorldHelper.narrow(ncRef.resolve(path)); </span><br><span class="line">String hello = helloWorld.sayHello(); </span><br><span class="line">System.out.println(hello); </span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">System.out.println(<span class="string">"ERROR : "</span> + e) ;</span><br><span class="line">e.printStackTrace(System.out); </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h6 id="HelloWorldServer-java"><a href="#HelloWorldServer-java" class="headerlink" title="HelloWorldServer.java"></a>HelloWorldServer.java</h6><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> sample.*;</span><br><span class="line"><span class="keyword">import</span> org.omg.CosNaming.*;</span><br><span class="line"><span class="keyword">import</span> org.omg.CosNaming.NamingContextPackage.*;</span><br><span class="line"><span class="keyword">import</span> org.omg.CORBA.*;</span><br><span class="line"><span class="keyword">import</span> org.omg.CORBA.portable.*;</span><br><span class="line"><span class="keyword">import</span> org.omg.PortableServer.*;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">HelloWorldServant</span> <span class="keyword">extends</span> <span class="title">HelloWorldPOA</span></span>&#123;   <span class="comment">//对象实现类</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">sayHello</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">"\nHello World! 软件工程1703 焦宇珠\n"</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloWorldServer</span></span>&#123;                  <span class="comment">//服务程序</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span></span>&#123;</span><br><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line"><span class="comment">//初始化ORB</span></span><br><span class="line">ORB orb = ORB.init(args, <span class="keyword">null</span>);</span><br><span class="line"><span class="comment">//取根POA的引用</span></span><br><span class="line">org.omg.CORBA.Object poaobj = orb.resolve_initial_references (<span class="string">"RootPOA"</span>);</span><br><span class="line">org.omg.PortableServer.POA rootPOA = org.omg.PortableServer.POAHelper.narrow(poaobj);</span><br><span class="line">org.omg.PortableServer.POAManager manager = rootPOA.the_POAManager();</span><br><span class="line"><span class="comment">//创建伺服对象 </span></span><br><span class="line">HelloWorldServant objRef = <span class="keyword">new</span> HelloWorldServant();</span><br><span class="line">HelloWorld obj = objRef._this(orb);</span><br><span class="line"><span class="comment">//绑定命名服务 </span></span><br><span class="line">NamingContext ncRef = NamingContextHelper.narrow(orb.resolve_initial_references(<span class="string">"NameService"</span>));</span><br><span class="line">NameComponent nc = <span class="keyword">new</span> NameComponent(<span class="string">"Hello"</span>, <span class="string">""</span>); </span><br><span class="line">NameComponent path[] = &#123;nc&#125;; </span><br><span class="line">ncRef.rebind(path, obj);</span><br><span class="line"><span class="comment">//激活POA管理器 </span></span><br><span class="line">manager.activate();</span><br><span class="line"><span class="comment">//等待处理客户程序的请求</span></span><br><span class="line">System.out.println(<span class="string">"HelloWorld is running!"</span>);</span><br><span class="line">orb.run();</span><br><span class="line">&#125;<span class="keyword">catch</span> (Exception e) &#123; </span><br><span class="line">System.err.println(<span class="string">"ERROR: "</span> + e); </span><br><span class="line">e.printStackTrace(System.out); </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">``</span><br></pre></td></tr></table></figure>


<h5 id="2"><a href="#2" class="headerlink" title="2"></a>2</h5><h6 id="CounterImpl-java"><a href="#CounterImpl-java" class="headerlink" title="CounterImpl.java"></a>CounterImpl.java</h6><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> CounterApp.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CounterImpl</span> <span class="keyword">extends</span> <span class="title">CounterPOA</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> count;   </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">CounterImpl</span><span class="params">()</span></span>&#123;   </span><br><span class="line">        count = <span class="number">0</span>;   </span><br><span class="line">    &#125;   </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">inc</span><span class="params">()</span></span>&#123;   </span><br><span class="line">        count++;   </span><br><span class="line">    &#125;   </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">dec</span><span class="params">()</span></span>&#123;   </span><br><span class="line">        count --;   </span><br><span class="line">    &#125;   </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">value</span><span class="params">()</span></span>&#123;   </span><br><span class="line">        <span class="keyword">return</span> count;   </span><br><span class="line">    &#125;   </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h5 id="Server-java"><a href="#Server-java" class="headerlink" title="Server.java"></a>Server.java</h5><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> CounterApp.*;   </span><br><span class="line"><span class="keyword">import</span> java.io.*;   </span><br><span class="line"><span class="keyword">import</span> org.omg.CosNaming.*;</span><br><span class="line"><span class="keyword">import</span> org.omg.CosNaming.NamingContextPackage.*;</span><br><span class="line"><span class="keyword">import</span> org.omg.CORBA.*;</span><br><span class="line"><span class="keyword">import</span> org.omg.CORBA.portable.*;</span><br><span class="line"><span class="keyword">import</span> org.omg.PortableServer.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Server</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line">ORB orb = ORB.init(args, <span class="keyword">null</span>);</span><br><span class="line">org.omg.CORBA.Object poaobj = orb.resolve_initial_references (<span class="string">"RootPOA"</span>);</span><br><span class="line">org.omg.PortableServer.POA rootPOA = org.omg.PortableServer.POAHelper.narrow(poaobj);</span><br><span class="line">org.omg.PortableServer.POAManager manager = rootPOA.the_POAManager();</span><br><span class="line">CounterImpl c_impl = <span class="keyword">new</span> CounterImpl();</span><br><span class="line">Counter c = c_impl._this(orb);</span><br><span class="line">NamingContext ncRef = NamingContextHelper.narrow(orb.resolve_initial_references(<span class="string">"NameService"</span>));</span><br><span class="line">NameComponent nc = <span class="keyword">new</span> NameComponent(<span class="string">"Count"</span>, <span class="string">""</span>);</span><br><span class="line">NameComponent path[] = &#123;nc&#125;; </span><br><span class="line">ncRef.rebind(path, c);</span><br><span class="line">FileOutputStream file = <span class="keyword">new</span> FileOutputStream(<span class="string">"Counter.ref"</span>);</span><br><span class="line">PrintWriter writer = <span class="keyword">new</span> PrintWriter(file);</span><br><span class="line">String ref = orb.object_to_string(c);</span><br><span class="line">writer.println(ref);</span><br><span class="line">writer.flush();</span><br><span class="line">file.close();</span><br><span class="line">System.out.println(<span class="string">"Server started."</span>+<span class="string">" Stop:Ctrl-c"</span>);</span><br><span class="line">rootPOA.the_POAManager().activate();</span><br><span class="line">orb.run();</span><br><span class="line">&#125;<span class="keyword">catch</span>(IOException ex)&#123;</span><br><span class="line">System.out.println(<span class="string">"File error:"</span>+ex.getMessage());</span><br><span class="line">System.exit(<span class="number">2</span>);</span><br><span class="line">&#125;<span class="keyword">catch</span>(Exception ex)&#123;</span><br><span class="line">System.out.println(<span class="string">"Exception: "</span>+ex.getMessage());</span><br><span class="line">System.exit(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h5 id="Client-java"><a href="#Client-java" class="headerlink" title="Client.java"></a>Client.java</h5><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> CounterApp.*;  </span><br><span class="line"><span class="keyword">import</span> java.util.*;   </span><br><span class="line"><span class="keyword">import</span> java.io.*;   </span><br><span class="line"><span class="keyword">import</span> org.omg.CORBA.*; </span><br><span class="line"><span class="keyword">import</span> org.omg.CosNaming.*; </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Client</span> </span>&#123;   </span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;   </span><br><span class="line"><span class="keyword">try</span>&#123;   </span><br><span class="line">ORB orb = ORB.init(args, <span class="keyword">null</span>);</span><br><span class="line">org.omg.CORBA.Object obj = orb.resolve_initial_references(<span class="string">"NameService"</span>); </span><br><span class="line">NamingContext ncRef = NamingContextHelper.narrow(obj); </span><br><span class="line">NameComponent nc = <span class="keyword">new</span> NameComponent(<span class="string">"Count"</span>,<span class="string">""</span>); </span><br><span class="line">NameComponent path[] = &#123;nc&#125;;</span><br><span class="line">String ref = <span class="keyword">null</span>; </span><br><span class="line"><span class="keyword">try</span>&#123;   </span><br><span class="line">Scanner reader = <span class="keyword">new</span> Scanner(<span class="keyword">new</span> File(<span class="string">"Counter.ref"</span>));   </span><br><span class="line">ref = reader.nextLine();   </span><br><span class="line">&#125;<span class="keyword">catch</span>(IOException ex)&#123;   </span><br><span class="line">System.out.println(<span class="string">"File error: "</span>+ex.getMessage());   </span><br><span class="line">System.exit(<span class="number">2</span>);   </span><br><span class="line">&#125;   </span><br><span class="line">obj = orb.string_to_object(ref);   </span><br><span class="line"><span class="keyword">if</span>(obj == <span class="keyword">null</span>)&#123;   </span><br><span class="line">System.out.println(<span class="string">"Invalid IOR"</span>);   </span><br><span class="line">System.exit(<span class="number">4</span>);   </span><br><span class="line">&#125;   </span><br><span class="line">Counter c = <span class="keyword">null</span>;   </span><br><span class="line"><span class="keyword">try</span>&#123;   </span><br><span class="line">c = CounterHelper.narrow(obj);   </span><br><span class="line">&#125;<span class="keyword">catch</span>(BAD_PARAM ex)&#123;   </span><br><span class="line">System.out.println(<span class="string">"Narrowing failed"</span>);   </span><br><span class="line">System.exit(<span class="number">3</span>);   </span><br><span class="line">&#125;   </span><br><span class="line"><span class="keyword">int</span> inp = -<span class="number">1</span>;   </span><br><span class="line"><span class="keyword">do</span>&#123;   </span><br><span class="line">System.out.print(<span class="string">"Counter value: "</span>+c.value()+<span class="string">"\nAction(+/-/e)?"</span>);   </span><br><span class="line">System.out.flush();   </span><br><span class="line"><span class="keyword">do</span>&#123;   </span><br><span class="line"><span class="keyword">try</span>&#123;   </span><br><span class="line">inp = System.in.read();   </span><br><span class="line">&#125;<span class="keyword">catch</span>(IOException ioe)&#123;&#125;   </span><br><span class="line">&#125;<span class="keyword">while</span>(inp != <span class="string">'+'</span> &amp;&amp; inp != <span class="string">'-'</span> &amp;&amp; inp != <span class="string">'e'</span>);   </span><br><span class="line"><span class="keyword">if</span>(inp == <span class="string">'+'</span>)   </span><br><span class="line">c.inc();   </span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(inp == <span class="string">'-'</span>)   </span><br><span class="line">c.dec();   </span><br><span class="line">&#125;<span class="keyword">while</span>(inp != <span class="string">'e'</span>);   </span><br><span class="line">&#125;<span class="keyword">catch</span>(Exception ex)&#123;   </span><br><span class="line">System.out.println(<span class="string">"Exception: "</span>+ex.getMessage());   </span><br><span class="line">System.exit(<span class="number">1</span>);   </span><br><span class="line">&#125;   </span><br><span class="line">&#125;   </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


<h3 id="四．-测试调试及运行结果"><a href="#四．-测试调试及运行结果" class="headerlink" title="四．    测试调试及运行结果"></a>四．    测试调试及运行结果</h3><h4 id="①"><a href="#①" class="headerlink" title="①"></a>①</h4><h6 id="启动服务器名字"><a href="#启动服务器名字" class="headerlink" title="启动服务器名字"></a>启动服务器名字</h6><p><img src="https://img-blog.csdnimg.cn/20190518014259328.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzUzOTQ0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h6 id="启动服务器端"><a href="#启动服务器端" class="headerlink" title="启动服务器端"></a>启动服务器端</h6><p><img src="https://img-blog.csdnimg.cn/2019051801433610.png" alt="在这里插入图片描述"></p>
<h6 id="启动客户端"><a href="#启动客户端" class="headerlink" title="启动客户端"></a>启动客户端</h6><p><img src="https://img-blog.csdnimg.cn/20190518014435630.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzUzOTQ0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h4 id="②"><a href="#②" class="headerlink" title="②"></a>②</h4><h6 id="启动服务器端-1"><a href="#启动服务器端-1" class="headerlink" title="启动服务器端"></a>启动服务器端</h6><p><img src="https://img-blog.csdnimg.cn/20190518014515982.png" alt="在这里插入图片描述"></p>
<h6 id="启动客户端并进行测试"><a href="#启动客户端并进行测试" class="headerlink" title="启动客户端并进行测试"></a>启动客户端并进行测试</h6><p><img src="https://img-blog.csdnimg.cn/20190518014541752.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzUzOTQ0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h3 id="五．-经验归纳"><a href="#五．-经验归纳" class="headerlink" title="五．    经验归纳"></a>五．    经验归纳</h3><p>通过此次程序设计了解掌握了组件化程序设计的方法，掌握了组件结构图的画法。<br>在配置jdk的过程中，从jdk1.8 的各种版本到jdk12都进行了装机尝试，jdk12虽是新版本，但其并不支持idlj 这种命令的编译执行。</p>
]]></content>
      <categories>
        <category>java 基础</category>
      </categories>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title>java RGP 人物生成器</title>
    <url>/2020/03/04/Java%E2%80%94%E5%AE%9E%E7%8E%B0%20RPG%20%E4%BA%BA%E7%89%A9%E7%94%9F%E6%88%90%E5%99%A8/</url>
    <content><![CDATA[<h3 id="一．-题目分析"><a href="#一．-题目分析" class="headerlink" title="一．    题目分析"></a>一．    题目分析</h3><h4 id="1．-题目内容"><a href="#1．-题目内容" class="headerlink" title="1．    题目内容"></a>1．    题目内容</h4><p>1.功能描述<br>几乎所有的RPG游戏（一种源自《龙与地下城》的游戏类型）在进入游戏时都会让用户自己来创建自己喜欢的角色。本次上机要求编写一个简化的创建游戏角色的程序。</p>
<p>2.游戏角色应有的属性<br>本题目要求的游戏角色应有以下属性：名字、性别、种族、职业、力量、敏捷、体力、智力、智慧、生命值和魔法值。<br>名字：不超过50个字符。<br>性别：可以选择男性和女性。<br>种族：一共可选五个种族，人类、精灵、兽人、矮人和元素。<br>职业：可选六种职业，狂战士、圣骑士、刺客、猎手、祭司和巫师。<br>其余属性均为整数。<br>本题目要求首先用户输入角色姓名，然后由用户选择角色性别，然后由用户选择种族，然后选择职业，然后自动分配力量、敏捷、体力、智力和智慧属性，并计算生命值和魔法值。<br>生命值=体力<em>20。<br>魔法值=（智力+智慧）</em>10。<br>3.职业限制<br>很多职业会限制某些种族选择，例如兽人不能就职圣骑士等等，种族和职业的限制表如下：<br>种族/职业    狂战士    圣骑士    刺客    猎手    祭司    巫师<br>人类    允许    允许    允许    允许    允许    允许<br>精灵    不允许    不允许    允许    允许    允许    允许<br>兽人    允许    不允许    不允许    允许    允许    不允许<br>矮人    允许    允许    不允许    不允许    允许    不允许<br>元素    不允许    不允许    不允许    不允许    允许    允许<br>所以在要求用户选择职业时，输出信息里面只能有用户所选择种族可以就职的职业。<br>4.初始属性<br>本题目要求力量、敏捷、体力、智力和智慧要求是随机值（利用随机数函数来取得随机数），但是五项属性的总和应该是100，并且应该和职业相关。例如狂战士的体力和力量就要比较高，而巫师需要较高的智力，而祭司则需要较高的智慧。各职业初始属性的大致比例应遵从下表：<br>职业/属性    力量    敏捷    体力    智力    智慧<br>狂战士    40    20    30    5    5<br>圣骑士    25    15    30    20    10<br>刺客    20    35    20    15    10<br>猎手    15    40    15    10    20<br>祭司    15    20    15    35    15<br>巫师    10    20    10    20    40<br>例如，前面示意图中的祭司的初始属性，大致满足该比例，但是应该是随机的。<br>然后利用属性值计算生命值和魔法值。<br>5.显示信息<br>最后向用户显示该角色的所有信息，然后询问用户是否满意，如用户不满意则重新创建，若用户满意则程序结束，并将用户创建角色的相关信息写入文件保存。</p>
<h4 id="2-题目分析"><a href="#2-题目分析" class="headerlink" title="2.  题目分析"></a>2.  题目分析</h4><ol>
<li>掌握面向对象程序设计的方法。明确类与对象的概念，掌握面向对象设计七大原则；</li>
<li>掌握常见的设计模式以及类图的描述。<br>通过面向对象的方法创建游戏人物，从而加深对面向对象编程的理解，掌握常用的设计方法及类图的  描述。</li>
</ol>
<h3 id="二．-类图设计"><a href="#二．-类图设计" class="headerlink" title="二．    类图设计"></a>二．    类图设计</h3><p><img src="https://img-blog.csdnimg.cn/20190420104906382.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzUzOTQ0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h3 id="三．-程序实现"><a href="#三．-程序实现" class="headerlink" title="三．    程序实现"></a>三．    程序实现</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> 基础;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.FileNotFoundException;</span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.OutputStreamWriter;</span><br><span class="line"><span class="comment">//import java.io.Writer;</span></span><br><span class="line"><span class="keyword">import</span> java.util.Random;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span>  <span class="title">RPGrole</span></span>&#123;</span><br><span class="line">	<span class="keyword">private</span>  <span class="keyword">static</span> String rolename;<span class="comment">//姓名</span></span><br><span class="line">	<span class="keyword">private</span>  <span class="keyword">static</span> String sex;<span class="comment">//性别</span></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">static</span> String racial;<span class="comment">//种族</span></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">static</span> String career;<span class="comment">//职业</span></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span> strength,agility,physical,intellige,intelligence,life,magic;<span class="comment">//力量,敏捷,体力,智力,智慧,生命值,魔法值</span></span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">show</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		System.out.println(<span class="string">"角色姓名			"</span>+rolename);</span><br><span class="line">		System.out.println(<span class="string">"角色性别			"</span>+sex);</span><br><span class="line">		System.out.println(<span class="string">"种族			"</span>+racial);</span><br><span class="line">		System.out.println(<span class="string">"职业			"</span>+career);</span><br><span class="line">		System.out.println(<span class="string">"力量			"</span>+strength);</span><br><span class="line">		System.out.println(<span class="string">"敏捷			"</span>+agility);</span><br><span class="line">		System.out.println(<span class="string">"体力			"</span>+physical);</span><br><span class="line">		System.out.println(<span class="string">"智力			"</span>+intellige);</span><br><span class="line">		System.out.println(<span class="string">"智慧			"</span>+intelligence);</span><br><span class="line">		System.out.println(<span class="string">"生命值			"</span>+life);</span><br><span class="line">		System.out.println(<span class="string">"魔法值			"</span>+magic);</span><br><span class="line">	</span><br><span class="line"></span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">    Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">getname</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		System.out.println(<span class="string">"请设置您的角色姓名"</span>);</span><br><span class="line">			Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">			 String rolename_def = sc.nextLine();</span><br><span class="line">			 <span class="keyword">while</span>(<span class="keyword">true</span>) &#123;</span><br><span class="line">			 <span class="keyword">if</span>(rolename_def.length()&gt;<span class="number">50</span>)</span><br><span class="line">			 &#123;System.out.println(<span class="string">"您设置的角色名过长"</span>);</span><br><span class="line">			 System.out.println(<span class="string">"请设置您的角色姓名"</span>);</span><br><span class="line">			 rolename_def = sc.nextLine();</span><br><span class="line">			 &#125;</span><br><span class="line">			 <span class="keyword">else</span> </span><br><span class="line">			 &#123;rolename=rolename_def;</span><br><span class="line">			 <span class="keyword">break</span>;</span><br><span class="line">			 &#125;</span><br><span class="line">			 &#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">getsex</span><span class="params">()</span></span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">		System.out.println(<span class="string">"请选择角色性别：1.男 2.女"</span>);</span><br><span class="line">		   Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">		<span class="keyword">int</span> sex_def = sc.nextInt();</span><br><span class="line">		<span class="keyword">switch</span>(sex_def) &#123;</span><br><span class="line">		<span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">		&#123;</span><br><span class="line">			sex = <span class="string">"男"</span>;</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">		&#123;</span><br><span class="line">			sex = <span class="string">"女"</span>;</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		&#125;	</span><br><span class="line">		&#125;	</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">public</span>  <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">getracial</span><span class="params">()</span></span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">		<span class="keyword">int</span> choose;</span><br><span class="line">		System.out.println(<span class="string">"请选择您游戏角色的种族：（0 人类 1 精灵 2 兽人 3 矮人 4 元素）"</span>);</span><br><span class="line">		  Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">		  choose  = sc.nextInt();</span><br><span class="line">		  <span class="keyword">switch</span>(choose) &#123;</span><br><span class="line">		  <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">			  racial=<span class="string">"人类"</span>;<span class="keyword">break</span>;  </span><br><span class="line">		  <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">			  racial=<span class="string">"精灵"</span>;<span class="keyword">break</span>;</span><br><span class="line">		  <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">			  racial=<span class="string">"兽人"</span>;<span class="keyword">break</span>;</span><br><span class="line">		  <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">			  racial=<span class="string">"矮人"</span>;<span class="keyword">break</span>;</span><br><span class="line">		  <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">			  racial=<span class="string">"元素"</span>;<span class="keyword">break</span>;</span><br><span class="line">		 </span><br><span class="line">	&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span>  <span class="keyword">void</span> <span class="title">getcareer</span><span class="params">()</span></span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">	</span><br><span class="line">		Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">		</span><br><span class="line">		<span class="keyword">int</span> s;</span><br><span class="line">		<span class="keyword">switch</span>(racial)</span><br><span class="line">		&#123;</span><br><span class="line">		<span class="keyword">case</span> <span class="string">"人类"</span>:</span><br><span class="line">			System.out.println(<span class="string">"请选择您角色的职业:(1 狂战士 2 圣骑士 3  刺客 4 猎手 5 祭司 6 巫师)"</span>);</span><br><span class="line">			s = sc.nextInt();</span><br><span class="line">			<span class="keyword">switch</span>(s) &#123;</span><br><span class="line">			<span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">				career=<span class="string">"狂战士"</span>;</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			<span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">				career=<span class="string">"圣骑士"</span>;</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			<span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">				career=<span class="string">"刺客"</span>;</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			<span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">				career=<span class="string">"猎手"</span>;</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			<span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">				career=<span class="string">"祭司"</span>;</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			<span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">				career=<span class="string">"巫师"</span>;</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		<span class="keyword">case</span> <span class="string">"精灵"</span>:</span><br><span class="line">			System.out.println(<span class="string">"请选择您角色的职业:( 1  刺客 2 猎手 3 祭司 4 巫师)"</span>);</span><br><span class="line">			s = sc.nextInt();</span><br><span class="line">			<span class="keyword">switch</span>(s) &#123;	</span><br><span class="line">			<span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">				career=<span class="string">"刺客"</span>;<span class="keyword">break</span>;</span><br><span class="line">			<span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">				career=<span class="string">"猎手"</span>;<span class="keyword">break</span>;</span><br><span class="line">			<span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">				career=<span class="string">"祭司"</span>;<span class="keyword">break</span>;</span><br><span class="line">			<span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">				career=<span class="string">"巫师"</span>;<span class="keyword">break</span>;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		<span class="keyword">case</span> <span class="string">"兽人"</span>:</span><br><span class="line">			System.out.println(<span class="string">"请选择您角色的职业:( 1  狂战士 2 猎手 3 祭司 )"</span>);</span><br><span class="line">			s = sc.nextInt();</span><br><span class="line">			<span class="keyword">switch</span>(s) &#123;</span><br><span class="line">			<span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">				career=<span class="string">"狂战士"</span>;<span class="keyword">break</span>;</span><br><span class="line">			<span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">				career=<span class="string">"猎手"</span>;<span class="keyword">break</span>;</span><br><span class="line">			<span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">				career=<span class="string">"祭司"</span>;<span class="keyword">break</span>;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		<span class="keyword">case</span> <span class="string">"矮人"</span>:</span><br><span class="line">			System.out.println(<span class="string">"请选择您角色的职业:( 1  狂战士 2 圣骑士 3 祭司 )"</span>);</span><br><span class="line">			s = sc.nextInt();</span><br><span class="line">			<span class="keyword">switch</span>(s) &#123;</span><br><span class="line">			<span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">				career=<span class="string">"狂战士"</span>;<span class="keyword">break</span>;</span><br><span class="line">			<span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">				career=<span class="string">"圣骑士"</span>;<span class="keyword">break</span>;</span><br><span class="line">			<span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">				career=<span class="string">"祭司"</span>;<span class="keyword">break</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		<span class="keyword">case</span> <span class="string">"元素"</span>:</span><br><span class="line">			System.out.println(<span class="string">"请选择您角色的职业:( 1  祭司 2 巫师  )"</span>);</span><br><span class="line">			s = sc.nextInt();</span><br><span class="line">			<span class="keyword">switch</span>(s) &#123;</span><br><span class="line">			<span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">				career=<span class="string">"祭司"</span>;<span class="keyword">break</span>;</span><br><span class="line">			<span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">				career=<span class="string">"巫师"</span>;<span class="keyword">break</span>;</span><br><span class="line">			&#125;<span class="keyword">break</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		</span><br><span class="line">		&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="function"><span class="keyword">public</span>  <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">getProperty</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        </span><br><span class="line">        Random random = <span class="keyword">new</span> Random();</span><br><span class="line">         </span><br><span class="line">        <span class="keyword">switch</span> (career) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">"狂战士"</span>:</span><br><span class="line">            	strength = random.nextInt(<span class="number">3</span>) + <span class="number">39</span>;<span class="comment">//力量</span></span><br><span class="line">            	agility = strength/<span class="number">2</span>;<span class="comment">//敏捷</span></span><br><span class="line">            	physical = strength-<span class="number">10</span>;<span class="comment">//体力</span></span><br><span class="line">            	intelligence = strength/<span class="number">8</span>;<span class="comment">//智力</span></span><br><span class="line">               </span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">"圣骑士"</span>:</span><br><span class="line">            	strength = random.nextInt(<span class="number">3</span>) + <span class="number">23</span>;<span class="comment">//力量</span></span><br><span class="line">            	agility = strength-<span class="number">10</span>;<span class="comment">//敏捷</span></span><br><span class="line">            	physical = agility*<span class="number">2</span>;<span class="comment">//体力</span></span><br><span class="line">            	intelligence = agility+<span class="number">5</span>;<span class="comment">//智力</span></span><br><span class="line">               </span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">"刺客"</span>:</span><br><span class="line">            	strength = random.nextInt(<span class="number">3</span>) + <span class="number">20</span>;<span class="comment">//力量</span></span><br><span class="line">            	agility = strength*<span class="number">2</span>-<span class="number">5</span>;<span class="comment">//敏捷</span></span><br><span class="line">            	physical = strength;<span class="comment">//体力</span></span><br><span class="line">            	intelligence = physical-<span class="number">5</span>;<span class="comment">//智力</span></span><br><span class="line">                </span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">"猎手"</span>:</span><br><span class="line">                strength = random.nextInt(<span class="number">3</span>) + <span class="number">13</span>;<span class="comment">//力量</span></span><br><span class="line">                agility = strength*<span class="number">3</span>-<span class="number">5</span>;<span class="comment">//敏捷</span></span><br><span class="line">                physical = strength;<span class="comment">//体力</span></span><br><span class="line">                intelligence = physical-<span class="number">5</span>;<span class="comment">//智力</span></span><br><span class="line">                </span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">"祭司"</span>:</span><br><span class="line">                strength = random.nextInt(<span class="number">3</span>) + <span class="number">13</span>;<span class="comment">//力量</span></span><br><span class="line">                agility = strength+<span class="number">5</span>;<span class="comment">//敏捷</span></span><br><span class="line">                physical = strength;<span class="comment">//体力</span></span><br><span class="line">                intelligence = physical+agility;<span class="comment">//智力</span></span><br><span class="line">               </span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">"巫师"</span>:</span><br><span class="line">            	strength = random.nextInt(<span class="number">3</span>) + <span class="number">8</span>;<span class="comment">//力量</span></span><br><span class="line">            	agility = strength*<span class="number">2</span>;<span class="comment">//敏捷</span></span><br><span class="line">            	physical = strength;<span class="comment">//体力</span></span><br><span class="line">            	intelligence = physical*<span class="number">2</span>;<span class="comment">//智力</span></span><br><span class="line">               </span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">       intellige = <span class="number">100</span>-strength-agility-physical-intelligence;<span class="comment">//智慧</span></span><br><span class="line">       magic = (intelligence+intellige)*<span class="number">10</span>;<span class="comment">//魔法</span></span><br><span class="line">       life = physical*<span class="number">20</span>;<span class="comment">//生命值</span></span><br><span class="line">       </span><br><span class="line">    &#125;</span><br><span class="line">	<span class="comment">/*</span></span><br><span class="line"><span class="comment">	 * 菜单及用户反馈</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">feedback</span><span class="params">()</span> <span class="keyword">throws</span> FileNotFoundException, IOException, InterruptedException </span>&#123;</span><br><span class="line">		Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">		<span class="keyword">while</span> (<span class="keyword">true</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			getname();<span class="comment">//姓名设置</span></span><br><span class="line">			getsex();<span class="comment">//性别</span></span><br><span class="line">			getracial();<span class="comment">//获得种族</span></span><br><span class="line">			getcareer();<span class="comment">//获得职业</span></span><br><span class="line">			getProperty();<span class="comment">//随机生成属性</span></span><br><span class="line">			show();</span><br><span class="line">			System.out.println(<span class="string">"小主，对该角色您还满意吗   0 :满意 anykey: 也不行呀"</span>);</span><br><span class="line">			System.out.println(<span class="string">"如果您不满意将重新为您生成新角色 ，满意的话就直接保存文件了哦"</span>);</span><br><span class="line">			String input = sc.nextLine();</span><br><span class="line">            System.out.println(input);</span><br><span class="line">			<span class="keyword">if</span>(input.equals(<span class="string">"0"</span>))</span><br><span class="line">			&#123;</span><br><span class="line">				File f = <span class="keyword">new</span> File(<span class="string">"RPG.txt"</span>);</span><br><span class="line">				FileOutputStream fop = <span class="keyword">new</span> FileOutputStream(f);</span><br><span class="line">				OutputStreamWriter writer = <span class="keyword">new</span> OutputStreamWriter(fop, <span class="string">"UTF-8"</span>);</span><br><span class="line">				writer.append(<span class="string">"                            召唤师角色创建详情 "</span>);</span><br><span class="line">				writer.append(<span class="string">"\r\n"</span>);</span><br><span class="line">				writer.append(<span class="string">"	角色姓名		"</span>+rolename);writer.append(<span class="string">"\r\n"</span>);</span><br><span class="line">				writer.append(<span class="string">"  	角色性别		"</span>+sex);writer.append(<span class="string">"\r\n"</span>);</span><br><span class="line">				writer.append(<span class="string">" 	种族			"</span>+racial);writer.append(<span class="string">"\r\n"</span>);</span><br><span class="line">				writer.append(<span class="string">"  	职业			"</span>+career);writer.append(<span class="string">"\r\n"</span>);</span><br><span class="line">				writer.append(String.valueOf(<span class="string">"  	力量			"</span>+strength));writer.append(<span class="string">"\r\n"</span>);</span><br><span class="line">				writer.append(String.valueOf(<span class="string">"  	敏捷			"</span>+agility));writer.append(<span class="string">"\r\n"</span>);</span><br><span class="line">				writer.append(String.valueOf(<span class="string">"  	体力			"</span>+physical));writer.append(<span class="string">"\r\n"</span>);</span><br><span class="line">				writer.append(String.valueOf(<span class="string">"  	智力			"</span>+intellige));writer.append(<span class="string">"\r\n"</span>);</span><br><span class="line">				writer.append(String.valueOf(<span class="string">"  	智慧			"</span>+intelligence));writer.append(<span class="string">"\r\n"</span>);</span><br><span class="line">				writer.append(String.valueOf(<span class="string">"  	生命值			"</span>+life));writer.append(<span class="string">"\r\n"</span>);</span><br><span class="line">				writer.append(String.valueOf(<span class="string">"  	魔法值			"</span>+magic));writer.append(<span class="string">"\r\n"</span>);</span><br><span class="line">				writer.close();</span><br><span class="line">				System.out.println(<span class="string">"角色已创建，请在文件中查看"</span>);</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">else</span> &#123;</span><br><span class="line">				System.out.println(<span class="string">"角色重建  loading"</span>);</span><br><span class="line">				Thread.sleep(<span class="number">5000</span>);</span><br><span class="line">				feedback();</span><br><span class="line">				</span><br><span class="line">			&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> FileNotFoundException, IOException, InterruptedException </span>&#123;</span><br><span class="line">			System.out.println(<span class="string">"欢迎来到地下城，亲爱的召唤师，请创建您的角色"</span>);</span><br><span class="line">			System.out.println(<span class="string">"=========================================="</span>);</span><br><span class="line">			feedback();</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure>

<h3 id="四．-调试，测试及运行结果"><a href="#四．-调试，测试及运行结果" class="headerlink" title="四．    调试，测试及运行结果"></a>四．    调试，测试及运行结果</h3><h6 id="调试断点单步跳入，跳过"><a href="#调试断点单步跳入，跳过" class="headerlink" title="调试断点单步跳入，跳过"></a>调试断点单步跳入，跳过</h6><p><img src="https://img-blog.csdnimg.cn/20190420105517231.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzUzOTQ0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h6 id="角色重建"><a href="#角色重建" class="headerlink" title="角色重建"></a>角色重建</h6><p><img src="https://img-blog.csdnimg.cn/20190420105611822.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzUzOTQ0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h3 id="五．-个人心得"><a href="#五．-个人心得" class="headerlink" title="五．    个人心得"></a>五．    个人心得</h3><ol>
<li>本次程序设计，深化了对面向对象编程的思想，了解掌握了UML （统一建模语言）类图和常用的设计模式，但是对七大法则运用及理解还是不够深入。</li>
<li>在编码时开始用this语句对全局变量赋值，所以getname(),getsex()等属性方法都是以动态方法来被调用，Java  main()方法默认属性为static静态方法，这就导致了在主类创建对象调用函数是出现一系列问题，如 创建角色RPGrole 当正常调用函数时，需采用RPGrole.function()来实现，这是静态方法调用非静态方法时的方法，但是当函数有参调用上层函数的返回值时，就会出现问题，此时如果仍采用RPGrole.function(RPGrole.function()),虽然按照道理来说并没有什么问题，但是当实际操作起来就会发现这可能会导致函数的重复调用，所以，当函数非静态时，用函数调用函数用起来要慎重。</li>
<li>改进空间：将对象生成类与主类单独分开，更能体现OOP的思想，在主类中只完成对象的属性获取及参数设置，在对象类中对这些主类函数进行调用，生成想要角色。</li>
</ol>
]]></content>
      <categories>
        <category>java 基础</category>
      </categories>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title>java递归实现十进制数2的幂次表示</title>
    <url>/2020/03/04/java%E9%80%92%E5%BD%92%E5%AE%9E%E7%8E%B0%E5%8D%81%E8%BF%9B%E5%88%B6%E6%95%B02%E7%9A%84%E5%B9%82%E6%AC%A1%E8%A1%A8%E7%A4%BA/</url>
    <content><![CDATA[<h3 id="1-题目要求"><a href="#1-题目要求" class="headerlink" title="1. 题目要求"></a>1. 题目要求</h3><p>任何一个正整数都可以用2的幂次方表示。例如：<br>　　　　137=2^7+2^3+2^0　　　　<br>  同时约定幂次方用括号来表示，即ab 可表示为a（b）。<br>　　   由此可知，137可表示为：<br>　　　　   2（7）+2（3）+2（0）<br>  进一步：7= 2^2+2+2^0   （21用2表示）<br>　　　　   3=2+2^0<br>  所以最后137可表示为：<br>　　　　   2（2（2）+2+2（0））+2（2+2（0））+2（0）<br>　　   又如：<br>　　　　   1315=2^10 +2^8 +2^5 +2+2^0<br>  所以1315最后可表示为：<br>　　   2（2（2+2（0））+2）+2（2（2+2（0）））+2（2（2）+2（0））+2+2（0）<br>　　输入：正整数（n≤20000）<br>输出：符合约定的n的0，2表示（在表示中不能有空格）<br> Input Format<br>        一个正整数<br> Output Format<br>        符合约定的n的0，2表示（在表示中不能有空格）<br>Sample Input<br>73<br>Sample Output<br> 2(2(2)+2)+2(2+2(0))+2(0)</p>
<h3 id="2-递归分析"><a href="#2-递归分析" class="headerlink" title="2.递归分析"></a>2.递归分析</h3><p>递归出口：n=1或n=2，分别打印“2（0）”，“2”。之后结束递归。<br><img src="https://img-blog.csdnimg.cn/20190607233955782.png" alt="在这里插入图片描述"></p>
<h3 id="3-代码实现"><a href="#3-代码实现" class="headerlink" title="3.代码实现"></a>3.代码实现</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">nTobinarypow</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">tpow</span><span class="params">(<span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(n==<span class="number">1</span>)&#123;</span><br><span class="line">            System.out.print(<span class="string">"2(0)"</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(n==<span class="number">2</span>)&#123;</span><br><span class="line">            System.out.print(<span class="string">"2"</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> temp=<span class="number">1</span>;<span class="comment">//2的幂次计算结果</span></span><br><span class="line">        <span class="keyword">int</span> c=<span class="number">0</span>;<span class="comment">//2的幂次</span></span><br><span class="line">        <span class="keyword">while</span>(temp&lt;n)&#123;</span><br><span class="line">            temp*=<span class="number">2</span>;</span><br><span class="line">            c++;</span><br><span class="line">        &#125;</span><br><span class="line">        c-=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(n==temp/<span class="number">2</span>)&#123;</span><br><span class="line">            System.out.print(<span class="string">"2("</span>);</span><br><span class="line">            tpow(c);</span><br><span class="line">            System.out.print(<span class="string">")"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(temp/<span class="number">2</span>==<span class="number">2</span>)&#123;</span><br><span class="line">                System.out.print(<span class="string">"2"</span>);</span><br><span class="line">                System.out.print(<span class="string">"+"</span>);</span><br><span class="line">                tpow(n-temp/<span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                System.out.print(<span class="string">"2("</span>);</span><br><span class="line">                tpow(c);</span><br><span class="line">                System.out.print(<span class="string">")+"</span>);</span><br><span class="line">                tpow(n-temp/<span class="number">2</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"请输入您想要转化的数值：（正整数哦）"</span>);</span><br><span class="line">        Scanner sc= <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">int</span> input = sc.nextInt();</span><br><span class="line">        System.out.println(<span class="string">"转化结果为："</span>);</span><br><span class="line">        tpow(input);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>java 基础</category>
      </categories>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title>java实现十进制想任意进制转化</title>
    <url>/2020/03/04/java-%E9%80%92%E5%BD%92%E5%8F%8A%E9%9D%9E%E9%80%92%E5%BD%92%E5%AE%9E%E7%8E%B0%E5%8D%81%E8%BF%9B%E5%88%B6%E6%95%B0%E5%90%91%E4%BB%BB%E6%84%8F%E8%BF%9B%E5%88%B6%E8%BD%AC%E6%8D%A2/</url>
    <content><![CDATA[<h3 id="一．-题目要求"><a href="#一．-题目要求" class="headerlink" title="一．    题目要求"></a>一．    题目要求</h3><p><strong>题目：将非负十进制整数n转换成b进制。（其中b=2~16）</strong></p>
<h3 id="二．-算法设计思路及递归模型"><a href="#二．-算法设计思路及递归模型" class="headerlink" title="二．    算法设计思路及递归模型"></a>二．    算法设计思路及递归模型</h3><p>递归出口：num=0  //此处num指递归后（num/base）=0,即商为0时递归结束。</p>
<p><img src="https://img-blog.csdnimg.cn/20190607232514648.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzUzOTQ0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h3 id="三-代码实现"><a href="#三-代码实现" class="headerlink" title="三. 代码实现"></a>三. 代码实现</h3><p><strong>递归实现</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> scale;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">recursion</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">scale_Tobe</span><span class="params">(<span class="keyword">int</span> base,<span class="keyword">int</span> num)</span></span>&#123;</span><br><span class="line">        String str=<span class="string">""</span>;</span><br><span class="line">        String wait=<span class="string">"0123456789abcdef"</span>;</span><br><span class="line">        <span class="keyword">if</span>(num==<span class="number">0</span>)&#123;</span><br><span class="line"><span class="comment">//            System.out.println(str);</span></span><br><span class="line">            <span class="keyword">return</span> <span class="string">" "</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            str = scale_Tobe(base,num/base);</span><br><span class="line"><span class="comment">//           String temp= String.valueOf(wait.charAt(num%base));</span></span><br><span class="line"><span class="comment">//           System.out.println(str+temp);</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> str+wait.charAt(num%base);<span class="comment">//缀加</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        System.out.println(<span class="string">"请输入您想转化的十进制数："</span>);</span><br><span class="line">        <span class="keyword">int</span> input_10= sc.nextInt();</span><br><span class="line">        System.out.println(<span class="string">"请输入您想转化的进制(2-16之间哦)"</span>);</span><br><span class="line">        <span class="keyword">int</span> input_base= sc.nextInt();</span><br><span class="line">        System.out.println(<span class="string">"转化为"</span>+input_base+<span class="string">"进制结果为："</span>);</span><br><span class="line"></span><br><span class="line">        System.out.println(scale_Tobe(input_base,input_10));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>非递归实现</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> scale;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">nonerecursion</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">conversion</span><span class="params">(<span class="keyword">int</span> num ,<span class="keyword">int</span> base)</span> </span>&#123;<span class="comment">//base 进制 num 欲转换数据</span></span><br><span class="line">        String str = <span class="string">""</span>;</span><br><span class="line">        <span class="keyword">int</span> remainder;<span class="comment">//余数</span></span><br><span class="line">        <span class="keyword">int</span> consult = num;<span class="comment">//商</span></span><br><span class="line">        <span class="keyword">while</span> (consult &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            remainder = num % base;</span><br><span class="line">            consult = consult / base;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//处理10-15之间a-f</span></span><br><span class="line">            <span class="keyword">if</span> (remainder &gt; <span class="number">9</span>) &#123;</span><br><span class="line">                str = (<span class="keyword">char</span>) (<span class="string">'a'</span> + (remainder - <span class="number">10</span>)) + str;</span><br><span class="line"></span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                str = remainder + str;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">            <span class="keyword">return</span> str;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner sc= <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        System.out.println(<span class="string">"请输入您要转化的十进制数"</span>);</span><br><span class="line">        <span class="keyword">int</span> input_num = sc.nextInt();</span><br><span class="line">        System.out.println(<span class="string">"请输入您想转化成进制"</span>);</span><br><span class="line">        <span class="keyword">int</span> input_base = sc.nextInt();</span><br><span class="line">        System.out.println(conversion(input_num,input_base));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="四-运行截图"><a href="#四-运行截图" class="headerlink" title="四.运行截图"></a>四.运行截图</h3><p><img src="https://img-blog.csdnimg.cn/20190607233018621.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzUzOTQ0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h3 id="递归调用过程"><a href="#递归调用过程" class="headerlink" title="递归调用过程"></a>递归调用过程</h3><p><strong>（求3—&gt;2进制=11）</strong><br><img src="https://img-blog.csdnimg.cn/20190607233159321.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzUzOTQ0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
]]></content>
      <categories>
        <category>java 基础</category>
      </categories>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title>java实现简单KFC</title>
    <url>/2020/03/04/Java%20%E5%AE%9E%E7%8E%B0%E7%AE%80%E5%8D%95%E7%9A%84KFC%E7%82%B9%E9%A4%90%E7%BB%93%E7%AE%97/</url>
    <content><![CDATA[<h3 id="一．-题目分析及要求"><a href="#一．-题目分析及要求" class="headerlink" title="一．    题目分析及要求"></a>一．    题目分析及要求</h3><p>同学们应该都去麦当劳或肯德基吃过快餐吧？请同学们参考肯德基官网的信息模拟肯德基快餐店的收银系统，合理使用C++或Java或Python结合设计模式（2种以上）至少实现系统的以下功能：<br>1.正常餐品结算和找零。<br>2.基本套餐结算和找零。<br>3.使用优惠劵购买餐品结算和找零。<br>4.模拟打印小票的功能（写到文件中）。<br>基本要求：<br>1.实现功能测试代码，确保程序的健壮性。<br>2.画出使用的设计模式图。</p>
<h3 id="二．-设计模式"><a href="#二．-设计模式" class="headerlink" title="二．    设计模式"></a>二．    设计模式</h3><p>单点食物<br>    采用简单工厂模式，利用Java反射机制来实现食品类的实例化。<br>    工厂类名 : ( SimFoodFactory )</p>
<p>套餐产品<br>    采用抽象工厂模式，实现套餐系列产品的生成（三个）<br>    工厂类名：（ComboOneFactory， ComboSecondFactory ，ComboThirdFactory ）</p>
<h3 id="三．-类图设计"><a href="#三．-类图设计" class="headerlink" title="三．    类图设计"></a>三．    类图设计</h3><p><img src="https://img-blog.csdnimg.cn/20190511232536403.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzUzOTQ0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h3 id="四．-算法实现"><a href="#四．-算法实现" class="headerlink" title="四．    算法实现"></a>四．    算法实现</h3><p>1.实体类 Food</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Food</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> Integer id;</span><br><span class="line">    <span class="keyword">public</span> String name;</span><br><span class="line">    <span class="keyword">public</span> Double price;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getId</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Double <span class="title">getPrice</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> price;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>2.Drink 类，Eat 类 继承 Food基类</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Eat</span> <span class="keyword">extends</span> <span class="title">Food</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> Float quality;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Float <span class="title">getQuality</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> quality;</span><br><span class="line">    &#125;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">                <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span></span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"Eat&#123;"</span>+</span><br><span class="line">                    <span class="string">"quality="</span> +quality+</span><br><span class="line">                    <span class="string">", id="</span>+ id +</span><br><span class="line">                    <span class="string">", name='"</span>+name +<span class="string">'\''</span>+</span><br><span class="line">                    <span class="string">", price="</span>+price+</span><br><span class="line">        <span class="string">'&#125;'</span>  ;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;&#125;</span><br><span class="line"><span class="number">3</span>.单种食物，单种饮料分别继承Eat 及 Drink</span><br><span class="line">如：①食物单品</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ChipsItem</span> <span class="keyword">extends</span> <span class="title">Eat</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ChipsItem</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id=<span class="number">1006</span>;</span><br><span class="line">        <span class="keyword">this</span>.name=<span class="string">"波纹霸王薯条"</span>;</span><br><span class="line">        <span class="keyword">this</span>.price=<span class="number">12.0</span>;</span><br><span class="line">        <span class="keyword">this</span>.quality=<span class="number">50f</span>;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"> ②饮料单品</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BeerItem</span> <span class="keyword">extends</span> <span class="title">Drink</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">BeerItem</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = <span class="number">1004</span>;</span><br><span class="line">        <span class="keyword">this</span>.name = <span class="string">"百威啤酒"</span>;</span><br><span class="line">        <span class="keyword">this</span>.price= <span class="number">15.0</span>;</span><br><span class="line">        <span class="keyword">this</span>.capacity= <span class="number">120f</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


<p>4.简单工厂，通过反射机制加载食物类实例（单点）</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> kfc.order.item.Food;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 简单工厂，反射加载食物类实例（单点食物）</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SimFoodFactory</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Food <span class="title">getFood</span><span class="params">(Class c)</span></span>&#123;</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> (Food) Class.forName(c.getName()).newInstance();</span><br><span class="line">        &#125;<span class="keyword">catch</span> (InstantiationException | IllegalAccessException| ClassNotFoundException e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>5.套餐组合通过CombFactory 接口的实现来加载</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">mport kfc.order.item.Food;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 抽象工厂，加载KFC组合套餐</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">CombFactory</span> </span>&#123;</span><br><span class="line">    <span class="function">List&lt;Food&gt; <span class="title">getCombo</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">具体一号套餐</span><br><span class="line"><span class="keyword">import</span> kfc.order.item.BeerItem;</span><br><span class="line"><span class="keyword">import</span> kfc.order.item.ChickenItem;</span><br><span class="line"><span class="keyword">import</span> kfc.order.item.Food;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 啤酒炸鸡 （1）号套餐</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ComboOneFactory</span> <span class="keyword">implements</span> <span class="title">CombFactory</span></span>&#123;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;Food&gt; <span class="title">getCombo</span><span class="params">()</span></span>&#123;</span><br><span class="line">        List&lt;Food&gt; foodOneList= <span class="keyword">new</span> ArrayList&lt;Food&gt;();<span class="comment">//存储套餐产品</span></span><br><span class="line">        Food chick=<span class="keyword">new</span> ChickenItem();<span class="comment">//实例化套餐内的产品</span></span><br><span class="line">        Food beer =<span class="keyword">new</span> BeerItem();</span><br><span class="line">        chick.price=chick.price-<span class="number">2</span>;<span class="comment">//套餐的优惠，炸鸡价格减2元</span></span><br><span class="line">        beer.price=beer.price-<span class="number">1</span>;<span class="comment">//套餐的优惠，啤酒价格减1元</span></span><br><span class="line">        foodOneList.add(chick);</span><br><span class="line">        foodOneList.add(beer);</span><br><span class="line">        <span class="keyword">return</span> foodOneList;<span class="comment">//返回套餐集合</span></span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


<p>6.FoodControler 类 通过函数处理具体点餐事务</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> kfc.order.item.*;</span><br><span class="line"><span class="keyword">import</span> kfc.order.service.ComboOneFactory;</span><br><span class="line"><span class="keyword">import</span> kfc.order.service.ComboSecondFactory;</span><br><span class="line"><span class="keyword">import</span> kfc.order.service.ComboThirdFactory;</span><br><span class="line"><span class="keyword">import</span> kfc.order.service.SimFoodFactory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FoodControler</span> </span>&#123;</span><br><span class="line">     <span class="keyword">static</span> SimFoodFactory simFoodFactory = <span class="keyword">new</span> SimFoodFactory();<span class="comment">//简单工厂实例化</span></span><br><span class="line">     <span class="keyword">static</span> List&lt;Food&gt; foodList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span>  <span class="keyword">void</span> <span class="title">service</span><span class="params">()</span></span>&#123;</span><br><span class="line">        Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line"></span><br><span class="line">        String choose = sc.nextLine();</span><br><span class="line">        <span class="keyword">switch</span> (choose)&#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">"7"</span>:</span><br><span class="line">                foodList = <span class="keyword">new</span> ComboOneFactory().getCombo();<span class="comment">//抽象工厂产生套餐1</span></span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">"8"</span>:</span><br><span class="line">                foodList = <span class="keyword">new</span> ComboSecondFactory().getCombo();<span class="comment">//抽象工厂产生套餐2</span></span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">"9"</span>:</span><br><span class="line">                foodList = <span class="keyword">new</span> ComboThirdFactory().getCombo();<span class="comment">//抽象工厂产生套餐3</span></span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span><span class="string">"1"</span>:</span><br><span class="line">            <span class="comment">//香辣炸鸡</span></span><br><span class="line">               Food food_1= simFoodFactory.getFood(ChickenItem<span class="class">.<span class="keyword">class</span>)</span>;<span class="comment">//反射加载单品食物</span></span><br><span class="line">                foodList.add(food_1);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span><span class="string">"2"</span>:</span><br><span class="line">                <span class="comment">//香辣鸡腿堡</span></span><br><span class="line">               Food food_2 = simFoodFactory.getFood(HamburgerItem<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">                foodList.add(food_2);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span><span class="string">"3"</span>:</span><br><span class="line">                <span class="comment">//薯条</span></span><br><span class="line">               Food food_3 = simFoodFactory.getFood(ChipsItem<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">                foodList.add(food_3);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span><span class="string">"4"</span>:</span><br><span class="line">                <span class="comment">//美式</span></span><br><span class="line">                Food food_4 = simFoodFactory.getFood(CafeItem<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">                foodList.add(food_4);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span><span class="string">"5"</span>:</span><br><span class="line">                <span class="comment">//可乐</span></span><br><span class="line">               Food food_5 = simFoodFactory.getFood(CokeItem<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">                foodList.add(food_5);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span><span class="string">"6"</span>:</span><br><span class="line">                <span class="comment">//百威啤酒</span></span><br><span class="line">               Food  food_6 = simFoodFactory.getFood(BeerItem<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">                foodList.add(food_6);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">          <span class="keyword">default</span>:</span><br><span class="line">              System.out.println(<span class="string">"您所输入的点餐序号不存在"</span>);</span><br><span class="line">              foodList = <span class="keyword">new</span> ArrayList();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">&#125;&#125;</span><br></pre></td></tr></table></figure>


<p>7.MainApp 类处理结算及顾客选择</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">其功能实现为其他类实例化对象当做方法参数使用</span><br></pre></td></tr></table></figure>

<h3 id="五．-测试截图"><a href="#五．-测试截图" class="headerlink" title="五．    测试截图"></a>五．    测试截图</h3><h5 id="点餐界面截图"><a href="#点餐界面截图" class="headerlink" title="点餐界面截图"></a>点餐界面截图</h5><p><img src="https://img-blog.csdnimg.cn/20190511233740837.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzUzOTQ0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h5 id="小票截图"><a href="#小票截图" class="headerlink" title="小票截图"></a>小票截图</h5><p><img src="https://img-blog.csdnimg.cn/20190511233833409.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzUzOTQ0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h3 id="六．-个人总结"><a href="#六．-个人总结" class="headerlink" title="六．    个人总结"></a>六．    个人总结</h3><p>Java Swing 可视化还未能掌握，因此此次程序设计只完成了基本要求。在程序编写中，对Java面向对象的思想有了更深的理解，也提升了编程中解决问题的能力。<br>在食物的实例化过程中，对建造者设计模式有了进一步的认识。同时对Java的反射机制有了一定的理解。</p>
<p>附 ： 源码</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> kfc.order.item;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Food</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> Integer id;</span><br><span class="line">    <span class="keyword">public</span> String name;</span><br><span class="line">    <span class="keyword">public</span> Double price;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getId</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Double <span class="title">getPrice</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> price;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> kfc.order.item;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Eat</span> <span class="keyword">extends</span> <span class="title">Food</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> Float quality;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Float <span class="title">getQuality</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> quality;</span><br><span class="line">    &#125;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">                <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span></span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"Eat&#123;"</span>+</span><br><span class="line">                    <span class="string">"quality="</span> +quality+</span><br><span class="line">                    <span class="string">", id="</span>+ id +</span><br><span class="line">                    <span class="string">", name='"</span>+name +<span class="string">'\''</span>+</span><br><span class="line">                    <span class="string">", price="</span>+price+</span><br><span class="line">        <span class="string">'&#125;'</span>  ;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> kfc.order.item;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Drink</span>  <span class="keyword">extends</span> <span class="title">Food</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> Float capacity;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Float <span class="title">getCapacity</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> capacity;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"Drink&#123;"</span>+</span><br><span class="line">                <span class="string">"capacity="</span> +capacity+</span><br><span class="line">                <span class="string">", id="</span>+ id +</span><br><span class="line">                <span class="string">", name='"</span>+name +<span class="string">'\''</span>+</span><br><span class="line">                <span class="string">", price="</span>+price+</span><br><span class="line">                <span class="string">'&#125;'</span>;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> kfc.order.item;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HamburgerItem</span>  <span class="keyword">extends</span> <span class="title">Eat</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">HamburgerItem</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = <span class="number">1001</span>;</span><br><span class="line">        <span class="keyword">this</span>.name = <span class="string">"香辣大虾堡"</span>;</span><br><span class="line">        <span class="keyword">this</span>.price = <span class="number">22.0</span>;</span><br><span class="line">        <span class="keyword">this</span>.quality = <span class="number">10f</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> kfc.order.item;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CokeItem</span> <span class="keyword">extends</span> <span class="title">Drink</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">CokeItem</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = <span class="number">1003</span>;</span><br><span class="line">        <span class="keyword">this</span>.name =<span class="string">"可口可乐"</span>;</span><br><span class="line">        <span class="keyword">this</span>.price = <span class="number">11.0</span>;</span><br><span class="line">        <span class="keyword">this</span>.capacity = <span class="number">200f</span>;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> kfc.order.item;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ChipsItem</span> <span class="keyword">extends</span> <span class="title">Eat</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ChipsItem</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id=<span class="number">1006</span>;</span><br><span class="line">        <span class="keyword">this</span>.name=<span class="string">"波纹霸王薯条"</span>;</span><br><span class="line">        <span class="keyword">this</span>.price=<span class="number">12.0</span>;</span><br><span class="line">        <span class="keyword">this</span>.quality=<span class="number">50f</span>;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> kfc.order.item;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ChickenItem</span> <span class="keyword">extends</span> <span class="title">Eat</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ChickenItem</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = <span class="number">1002</span>;</span><br><span class="line">        <span class="keyword">this</span>.name = <span class="string">"香辣鸡翅"</span>;</span><br><span class="line">        <span class="keyword">this</span>.price = <span class="number">48.0</span>;</span><br><span class="line">        <span class="keyword">this</span>.quality = <span class="number">100f</span>;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> kfc.order.item;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CafeItem</span> <span class="keyword">extends</span> <span class="title">Drink</span> </span>&#123;</span><br><span class="line">     <span class="function"><span class="keyword">public</span> <span class="title">CafeItem</span><span class="params">()</span></span>&#123;</span><br><span class="line">         <span class="keyword">this</span>.id = <span class="number">1005</span>;</span><br><span class="line">         <span class="keyword">this</span>.name =<span class="string">"美式咖啡"</span>;</span><br><span class="line">         <span class="keyword">this</span>.price = <span class="number">17.0</span>;</span><br><span class="line">         <span class="keyword">this</span>.capacity =<span class="number">100f</span>;</span><br><span class="line">     &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> kfc.order.item;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BeerItem</span> <span class="keyword">extends</span> <span class="title">Drink</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">BeerItem</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = <span class="number">1004</span>;</span><br><span class="line">        <span class="keyword">this</span>.name = <span class="string">"百威啤酒"</span>;</span><br><span class="line">        <span class="keyword">this</span>.price= <span class="number">15.0</span>;</span><br><span class="line">        <span class="keyword">this</span>.capacity= <span class="number">120f</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> kfc.order.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> kfc.order.item.Food;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 抽象工厂，加载KFC组合套餐</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">CombFactory</span> </span>&#123;</span><br><span class="line">    <span class="function">List&lt;Food&gt; <span class="title">getCombo</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> kfc.order.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> kfc.order.item.BeerItem;</span><br><span class="line"><span class="keyword">import</span> kfc.order.item.ChickenItem;</span><br><span class="line"><span class="keyword">import</span> kfc.order.item.Food;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 啤酒炸鸡 （1）号套餐</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ComboOneFactory</span> <span class="keyword">implements</span> <span class="title">CombFactory</span></span>&#123;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;Food&gt; <span class="title">getCombo</span><span class="params">()</span></span>&#123;</span><br><span class="line">        List&lt;Food&gt; foodOneList= <span class="keyword">new</span> ArrayList&lt;Food&gt;();<span class="comment">//存储套餐产品</span></span><br><span class="line">        Food chick=<span class="keyword">new</span> ChickenItem();<span class="comment">//实例化套餐内的产品</span></span><br><span class="line">        Food beer =<span class="keyword">new</span> BeerItem();</span><br><span class="line">        chick.price=chick.price-<span class="number">2</span>;<span class="comment">//套餐的优惠，炸鸡价格减2元</span></span><br><span class="line">        beer.price=beer.price-<span class="number">1</span>;<span class="comment">//套餐的优惠，啤酒价格减1元</span></span><br><span class="line">        foodOneList.add(chick);</span><br><span class="line">        foodOneList.add(beer);</span><br><span class="line">        <span class="keyword">return</span> foodOneList;<span class="comment">//返回套餐集合</span></span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> kfc.order.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> kfc.order.item.CafeItem;</span><br><span class="line"><span class="keyword">import</span> kfc.order.item.Food;</span><br><span class="line"><span class="keyword">import</span> kfc.order.item.HamburgerItem;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 咖啡和汉堡 （2）号套餐</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ComboSecondFactory</span> <span class="keyword">implements</span> <span class="title">CombFactory</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Food&gt; <span class="title">getCombo</span><span class="params">()</span></span>&#123;</span><br><span class="line">        List&lt;Food&gt; foodSecondList= <span class="keyword">new</span> ArrayList&lt;Food&gt;();</span><br><span class="line">        Food ham = <span class="keyword">new</span> HamburgerItem();</span><br><span class="line">        Food  cafe= <span class="keyword">new</span> CafeItem();</span><br><span class="line">        ham.price = ham.price-<span class="number">1</span>;<span class="comment">//套餐组合的优惠 汉堡减一元</span></span><br><span class="line">        cafe.price = cafe.price-<span class="number">0.5</span>;<span class="comment">//套餐组合的优惠 咖啡减0.5元</span></span><br><span class="line">        foodSecondList.add(cafe);</span><br><span class="line">        foodSecondList.add(ham);</span><br><span class="line">        <span class="keyword">return</span> foodSecondList;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> kfc.order.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> kfc.order.item.ChipsItem;</span><br><span class="line"><span class="keyword">import</span> kfc.order.item.CokeItem;</span><br><span class="line"><span class="keyword">import</span> kfc.order.item.Food;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 可乐和薯条 （3）号套餐</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ComboThirdFactory</span> <span class="keyword">implements</span> <span class="title">CombFactory</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Food&gt; <span class="title">getCombo</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        List&lt;Food&gt; foodThreeList = <span class="keyword">new</span> ArrayList&lt;Food&gt;();</span><br><span class="line">        Food chips = <span class="keyword">new</span> ChipsItem();</span><br><span class="line">        Food cola = <span class="keyword">new</span> CokeItem();</span><br><span class="line">        cola.price = cola.price - <span class="number">1</span>;<span class="comment">//套餐组合的优惠</span></span><br><span class="line">        chips.price = chips.price - <span class="number">0.5</span>;</span><br><span class="line">        foodThreeList.add(chips);</span><br><span class="line">        foodThreeList.add(cola);</span><br><span class="line">        <span class="keyword">return</span> foodThreeList;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> kfc.order.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> kfc.order.item.Food;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 简单工厂，反射加载食物类实例（单点食物）</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SimFoodFactory</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Food <span class="title">getFood</span><span class="params">(Class c)</span></span>&#123;</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> (Food) Class.forName(c.getName()).newInstance();</span><br><span class="line">        &#125;<span class="keyword">catch</span> (InstantiationException | IllegalAccessException| ClassNotFoundException e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> kfc.order.control;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> kfc.order.item.*;</span><br><span class="line"><span class="keyword">import</span> kfc.order.service.ComboOneFactory;</span><br><span class="line"><span class="keyword">import</span> kfc.order.service.ComboSecondFactory;</span><br><span class="line"><span class="keyword">import</span> kfc.order.service.ComboThirdFactory;</span><br><span class="line"><span class="keyword">import</span> kfc.order.service.SimFoodFactory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FoodControler</span> </span>&#123;</span><br><span class="line">     <span class="keyword">static</span> SimFoodFactory simFoodFactory = <span class="keyword">new</span> SimFoodFactory();<span class="comment">//简单工厂实例化</span></span><br><span class="line">     <span class="keyword">static</span> List&lt;Food&gt; foodList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span>  <span class="keyword">void</span> <span class="title">service</span><span class="params">()</span></span>&#123;</span><br><span class="line">        Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line"></span><br><span class="line">        String choose = sc.nextLine();</span><br><span class="line">        <span class="keyword">switch</span> (choose)&#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">"7"</span>:</span><br><span class="line">                foodList = <span class="keyword">new</span> ComboOneFactory().getCombo();<span class="comment">//抽象工厂产生套餐1</span></span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">"8"</span>:</span><br><span class="line">                foodList = <span class="keyword">new</span> ComboSecondFactory().getCombo();<span class="comment">//抽象工厂产生套餐2</span></span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">"9"</span>:</span><br><span class="line">                foodList = <span class="keyword">new</span> ComboThirdFactory().getCombo();<span class="comment">//抽象工厂产生套餐3</span></span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span><span class="string">"1"</span>:</span><br><span class="line">            <span class="comment">//香辣炸鸡</span></span><br><span class="line">               Food food_1= simFoodFactory.getFood(ChickenItem<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">                foodList.add(food_1);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span><span class="string">"2"</span>:</span><br><span class="line">                <span class="comment">//香辣鸡腿堡</span></span><br><span class="line">               Food food_2 = simFoodFactory.getFood(HamburgerItem<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">                foodList.add(food_2);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span><span class="string">"3"</span>:</span><br><span class="line">                <span class="comment">//薯条</span></span><br><span class="line">               Food food_3 = simFoodFactory.getFood(ChipsItem<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">                foodList.add(food_3);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span><span class="string">"4"</span>:</span><br><span class="line">                <span class="comment">//美式</span></span><br><span class="line">                Food food_4 = simFoodFactory.getFood(CafeItem<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">                foodList.add(food_4);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span><span class="string">"5"</span>:</span><br><span class="line">                <span class="comment">//可乐</span></span><br><span class="line">               Food food_5 = simFoodFactory.getFood(CokeItem<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">                foodList.add(food_5);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span><span class="string">"6"</span>:</span><br><span class="line">                <span class="comment">//百威啤酒</span></span><br><span class="line">               Food  food_6 = simFoodFactory.getFood(BeerItem<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">                foodList.add(food_6);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">          <span class="keyword">default</span>:</span><br><span class="line">              System.out.println(<span class="string">"您所输入的点餐序号不存在"</span>);</span><br><span class="line">              foodList = <span class="keyword">new</span> ArrayList();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> kfc.order.control;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> kfc.order.item.Food;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.BufferedWriter;</span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.FileWriter;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span>  <span class="title">MoneyAnalyze</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span>   Double <span class="title">getMoneyCount</span><span class="params">(List&lt;Food&gt; list )</span></span>&#123;<span class="comment">//,Double disCount,Double tickets)&#123;</span></span><br><span class="line">        Double moneyCount = <span class="number">0.0</span>; <span class="comment">//顾客应付钱数</span></span><br><span class="line">        <span class="keyword">for</span> (Food food:list)&#123;</span><br><span class="line">            moneyCount += food.price;</span><br><span class="line"></span><br><span class="line">        &#125;<span class="comment">//return moneyCount*disCount-tickets;  //计算折扣后应付钱数</span></span><br><span class="line">        <span class="keyword">return</span> moneyCount;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 找零</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> inMoney 收入的钱数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span>  count 应收钱数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span>  Double <span class="title">getChange</span><span class="params">( Double inMoney,Double count)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> inMoney-count;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 打印小票</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span>  <span class="keyword">void</span> <span class="title">receipt</span><span class="params">(List&lt;Food&gt;list ,Double disCount,Double tickets)</span> <span class="keyword">throws</span> IOException</span>&#123;</span><br><span class="line"></span><br><span class="line">          Date currentTime = <span class="keyword">new</span> Date();</span><br><span class="line"></span><br><span class="line">          FileWriter fileWriter= <span class="keyword">new</span> FileWriter(<span class="string">"receipt.txt"</span>);</span><br><span class="line">          BufferedWriter bw = <span class="keyword">new</span> BufferedWriter(fileWriter);</span><br><span class="line">          bw.write(<span class="string">"————————————————————欢迎光临  **有点LOW**  KFC————————————————"</span>+<span class="string">"\r\n"</span>);</span><br><span class="line">          bw.write(<span class="string">"\n\n"</span>);</span><br><span class="line">          bw.write(<span class="string">"订单时间："</span>+currentTime+<span class="string">"\r\n\n"</span>);</span><br><span class="line">          bw.write(<span class="string">"您本次消费清单如下"</span>+<span class="string">"\r\n"</span>);</span><br><span class="line">          <span class="keyword">for</span> (Food food:list)&#123;</span><br><span class="line">              bw.write(<span class="string">"ID："</span>+food.id+<span class="string">"\r\n"</span>);</span><br><span class="line">              bw.write(<span class="string">"食物："</span>+food.name+<span class="string">"\r\n"</span>);</span><br><span class="line">              bw.write(<span class="string">"金额："</span>+food.price+<span class="string">"\r\n"</span>);</span><br><span class="line">          &#125;</span><br><span class="line">          bw.write(<span class="string">"折扣"</span>+disCount*<span class="number">10</span> +<span class="string">"折"</span>+<span class="string">"\r\n"</span>);</span><br><span class="line">          bw.write(<span class="string">"优惠"</span>+tickets+<span class="string">"元"</span>+<span class="string">"\r\n"</span>);</span><br><span class="line">          bw.write(<span class="string">"总金额"</span>+((getMoneyCount(list)*disCount)-tickets)+ <span class="string">"\u5143"</span>);</span><br><span class="line">          bw.flush();</span><br><span class="line">          bw.close();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> kfc.order.control;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainApp</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span>  Double tickets=<span class="number">0.0</span> ;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Double disCount=<span class="number">1.0</span>;</span><br><span class="line">    MoneyAnalyze moneyAnalyze = <span class="keyword">new</span> MoneyAnalyze();</span><br><span class="line">    <span class="keyword">static</span> FoodControler foodControler = <span class="keyword">new</span> FoodControler();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">interFace</span><span class="params">()</span><span class="keyword">throws</span> IOException</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"============================================================"</span>);</span><br><span class="line">        System.out.println(<span class="string">"************************************************************\n"</span>);</span><br><span class="line">        System.out.println(<span class="string">"--------------------欢迎光临KFC------------------------------"</span>);</span><br><span class="line">        System.out.println(<span class="string">"**************     1.点餐                                    \n"</span>);</span><br><span class="line">        System.out.println(<span class="string">"**************     2.领取优惠卷 (请在购买商品之后查看领取哦)   \n"</span>);</span><br><span class="line">        System.out.println(<span class="string">"**************     3.结算                                    \n"</span>);</span><br><span class="line">        System.out.println(<span class="string">"*************************************************************\n"</span>);</span><br><span class="line">        System.out.println(<span class="string">"============================================================="</span>);</span><br><span class="line">        System.out.println(<span class="string">"请选择服务类型："</span>);</span><br><span class="line">        chooseServe();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">chooseServe</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        String inter =sc.nextLine();</span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(inter.equals(<span class="string">"1"</span>))&#123;</span><br><span class="line">            orderMeal();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(inter.equals(<span class="string">"2"</span>))&#123;</span><br><span class="line">            System.out.println(<span class="string">"满50减3.6元"</span>);</span><br><span class="line">            System.out.println(<span class="string">"满80减5.0元"</span>);</span><br><span class="line">            System.out.println(<span class="string">"请选择服务类型："</span>);</span><br><span class="line">            chooseServe();</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(inter.equals(<span class="string">"3"</span>))&#123;</span><br><span class="line">            <span class="keyword">if</span>(foodControler.foodList!=<span class="keyword">null</span>)&#123;</span><br><span class="line">            settlement();</span><br><span class="line">            <span class="keyword">break</span>;&#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                System.out.println(<span class="string">"您当前还未点餐，结算系统锁定，请点餐后选择"</span>);</span><br><span class="line">                chooseServe();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">"服务类型不存在，我们正在完善中,请您重新选择 "</span>);</span><br><span class="line">            chooseServe();</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">orderMeal</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"\n"</span>);</span><br><span class="line">        System.out.println(<span class="string">"----------------  本店推出以下菜品：--------------------------"</span>);</span><br><span class="line">        System.out.println(<span class="string">"①  自选单品"</span>);</span><br><span class="line">        System.out.println(<span class="string">"1. 香辣鸡翅：48元/份             2. 香辣大虾堡：22元/个"</span>);</span><br><span class="line">        System.out.println(<span class="string">"3. 波纹霸王薯条： 12元/份        4. 美式咖啡：17元/杯  "</span>);</span><br><span class="line">        System.out.println(<span class="string">"5. 可口可乐：11元/杯             6. 百威啤酒：15元/杯    "</span> );</span><br><span class="line">        System.out.println(<span class="string">"②  人气套餐——有优惠哦"</span>);</span><br><span class="line">        System.out.println(<span class="string">"7. 套餐一：啤酒+炸鸡：60元/份"</span>);</span><br><span class="line">        System.out.println(<span class="string">"8. 套餐二：汉堡+咖啡：37.5元/份"</span>);</span><br><span class="line">        System.out.println(<span class="string">"9. 套餐三：可乐+薯条：21.5元/份"</span>);</span><br><span class="line">        System.out.println(<span class="string">"--------------------------------------------------------------"</span>);</span><br><span class="line">        System.out.println(<span class="string">"请选择餐品序号"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//调用FoodControler 函数Server（）</span></span><br><span class="line"><span class="comment">// FoodControler foodControler =new FoodControler();</span></span><br><span class="line">        <span class="keyword">while</span>(<span class="keyword">true</span>)&#123;</span><br><span class="line"></span><br><span class="line">            foodControler.service();</span><br><span class="line"></span><br><span class="line">            System.out.println(<span class="string">"您所点的商品如下 ："</span>);</span><br><span class="line">            System.out.println(foodControler.foodList);</span><br><span class="line">            System.out.println(<span class="string">"您当前订单金额为："</span>+moneyAnalyze.getMoneyCount(foodControler.foodList)+<span class="string">"元"</span>);</span><br><span class="line"><span class="comment">//            System.out.println(foodControler.foodList.isEmpty());//测试列表空否</span></span><br><span class="line">            chooseQuit();</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">chooseQuit</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;<span class="comment">//点餐界面离开选项</span></span><br><span class="line">        System.out.println(<span class="string">"继续:【Y】  结算:【S】  返回【A】"</span>);</span><br><span class="line">        System.out.println(<span class="string">"请输入服务类型："</span>);</span><br><span class="line">        Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        String item =sc.nextLine();</span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (item.equals(<span class="string">"A"</span>) || item.equals(<span class="string">"a"</span>)) &#123;</span><br><span class="line">                interFace();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (item.equals(<span class="string">"Y"</span>) || item.equals(<span class="string">"y"</span>)) &#123;</span><br><span class="line"></span><br><span class="line">                System.out.println(foodControler.foodList);</span><br><span class="line"><span class="comment">//                System.out.println("您当前订单金额为："+moneyAnalyze.getMoneyCount(foodControler.foodList));</span></span><br><span class="line"></span><br><span class="line">                orderMeal();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (item.equals(<span class="string">"S"</span>) || item.equals(<span class="string">"s"</span>)) &#123;</span><br><span class="line">                settlement();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                System.out.println(<span class="string">"您所选择的服务不存在，请重新输入："</span>);</span><br><span class="line">                chooseQuit();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getTickets</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(moneyAnalyze.getMoneyCount(foodControler.foodList)&lt;<span class="number">50</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">"您的订单无法领取优惠券"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(moneyAnalyze.getMoneyCount(foodControler.foodList)&gt;<span class="number">50</span>&amp;&amp;moneyAnalyze.getMoneyCount(foodControler.foodList)&lt;<span class="number">80</span>)&#123;</span><br><span class="line">            tickets=<span class="number">3.6</span>;</span><br><span class="line">            System.out.println(<span class="string">"您的订单可以领取3.6元优惠券"</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(moneyAnalyze.getMoneyCount(foodControler.foodList)&gt;<span class="number">80</span>)&#123;</span><br><span class="line">            tickets=<span class="number">5.0</span>;</span><br><span class="line">            System.out.println(<span class="string">"您的订单可以领取5元优惠券"</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 通过消费判定折扣</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">settlement</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"您的付款金额："</span>);</span><br><span class="line">        Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        Double inMoney = sc.nextDouble();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(moneyAnalyze.getMoneyCount(foodControler.foodList)&gt;<span class="number">50</span>)&#123;</span><br><span class="line">            <span class="comment">//tickets= 3.6;</span></span><br><span class="line">            disCount=<span class="number">0.86</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(moneyAnalyze.getMoneyCount(foodControler.foodList)&gt;<span class="number">80</span>)&#123;</span><br><span class="line">            <span class="comment">//tickets=5;</span></span><br><span class="line">            disCount=<span class="number">0.75</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"您本次消费如下："</span>);</span><br><span class="line">        getTickets();</span><br><span class="line">        System.out.println(<span class="string">"您本次消费："</span>+moneyAnalyze.getMoneyCount(foodControler.foodList));</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"优惠："</span>+tickets+<span class="string">" 元"</span>);</span><br><span class="line">        System.out.println(<span class="string">"折扣："</span>+disCount*<span class="number">10</span>+<span class="string">" 折"</span>);</span><br><span class="line">        System.out.println(<span class="string">"折后消费:"</span>+(moneyAnalyze.getMoneyCount(foodControler.foodList)*disCount));</span><br><span class="line">        System.out.println(<span class="string">"收您："</span>+inMoney+<span class="string">" 元"</span>);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"找零："</span>+(moneyAnalyze.getChange(inMoney,moneyAnalyze.getMoneyCount(foodControler.foodList)*disCount-tickets))+<span class="string">" 元"</span>);</span><br><span class="line"></span><br><span class="line">        moneyAnalyze.receipt(foodControler.foodList,disCount,tickets);<span class="comment">//调用函数打印小票</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> kfc.order.control;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StartKFC</span>  </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        MainApp mainApp = <span class="keyword">new</span> MainApp();</span><br><span class="line"></span><br><span class="line">        mainApp.interFace();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//工厂模式算法源自CSDN 博客</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>java 基础</category>
      </categories>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title>java实现24点</title>
    <url>/2020/03/04/Java%20%E5%AE%9E%E7%8E%B024%20%E7%82%B9/</url>
    <content><![CDATA[<h3 id="一．题目分析"><a href="#一．题目分析" class="headerlink" title="一．题目分析"></a>一．题目分析</h3><p>从扑克中每次取出4张牌。使用加减乘除，第一个能得出24者为赢。（其中，J代表11，Q代表12，K代表13，A代表1），按照要求编程解决24点游戏。</p>
<h6 id="1-基本要求："><a href="#1-基本要求：" class="headerlink" title="1.基本要求："></a>1.基本要求：</h6><p> 随机生成4个代表扑克牌牌面的数字字母，程序自动列出所有可能算出24的表达式，用擅长的语言（C/C++/Java或其他均可）实现程序解决问题。<br>1.程序风格良好(使用自定义注释模板)<br>2.列出表达式无重复。</p>
<h6 id="2-提高要求："><a href="#2-提高要求：" class="headerlink" title="2. 提高要求："></a>2. 提高要求：</h6><p>用户初始生命值为一给定值（比如3），初始分数为0。随机生成4个代表扑克牌牌面的数字或字母，由用户输入包含这4个数字或字母的运算表达式（可包含括号），如果表达式计算结果为24则代表用户赢了此局。<br>      1. 程序风格良好(使用自定义注释模板)<br>      2.使用计时器要求用户在规定时间内输入表达式，如果规定时间内运算正确则加分，超时或运算错误则进入下一题并减少生命值（不扣分）。<br>      3.所有成绩均可记录在TopList.txt文件中。</p>
<h3 id="二-关键算法构造"><a href="#二-关键算法构造" class="headerlink" title="二. 关键算法构造"></a>二. 关键算法构造</h3><ol>
<li><p>基本要求<br>   一般24点均采用降维的方法来实现，所谓降维就是将原本四个数的计算通过递归的方式变成两两计算，即将前两个数的运算结果当做下一步计算的数据，以达到求表达式结果的目的。而表达式的去重则涉及到Java 中集合的应用即通过HashSet踢除重复元素。生成（calculateSet）来存放所有表达式，使用calculateSet.add(filterCalculate(t.getCul_str()))来实现集合元素的去重。<br>此代码即集合去重的基本思想</p>
</li>
<li><p>提高要求<br>为实现表达式24点的判断，采用双栈操作将操作符及运算数据分别入栈，无视左括号，当遇到右括号时，根据表达式从操作符栈中取出操作符，并从操作数栈中取出相应的操作数进行计算，并将计算结果压入操作数栈。在压栈操作完成后，取出栈顶元素，即表达式的运算结果。<br>如(1 + ( ( 2 + 3 ) * ( 4 * 5 ) ) )的双栈算法演示<br><img src="https://img-blog.csdnimg.cn/20190413185725691.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzUzOTQ0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>为了实现在输入的同时倒计时的目的，程序必须采用多线程，上周刚接触到 Java多线程，想到自己写一个线程可能会出现问题，于是想有没有现成的Java类来实现倒计时功能，而Java中Timer 和 Timertask 就可以实现这样的功能。</p>
<h3 id="三-程序实现"><a href="#三-程序实现" class="headerlink" title="三. 程序实现"></a>三. 程序实现</h3></li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Date;<span class="comment">//统计用时</span></span><br><span class="line"><span class="keyword">import</span> java.util.Random;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.HashSet;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Set;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">pointGame</span> </span>&#123;</span><br><span class="line">    <span class="keyword">static</span> List&lt;Node&gt; result = <span class="keyword">new</span> ArrayList&lt;Node&gt;();    <span class="comment">//实例化集合对象，用来存放结果</span></span><br><span class="line">    <span class="keyword">static</span> Set&lt;String&gt; calculateSet = <span class="keyword">new</span> HashSet&lt;String&gt;();<span class="comment">//表达式放入集合并去重</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Date now = <span class="keyword">new</span> Date();</span><br><span class="line">        <span class="keyword">int</span>[] values = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">4</span>];<span class="comment">//存放随机数</span></span><br><span class="line">        Random random = <span class="keyword">new</span> Random();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">4</span>;i++)<span class="comment">//生成随机数</span></span><br><span class="line">        &#123;</span><br><span class="line">        	<span class="keyword">int</span> x=random.nextInt(<span class="number">13</span>)+<span class="number">1</span>;</span><br><span class="line">        	values[i]=x;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(Arrays.toString(values)); <span class="comment">//打印随机数组</span></span><br><span class="line">        traverse(values); </span><br><span class="line">        System.out.println(<span class="string">"共耗时: "</span>+(System.currentTimeMillis()-now.getTime())+<span class="string">" 毫秒"</span>);<span class="comment">//当前时间减去程序开始运行时间</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">traverse</span><span class="params">(<span class="keyword">int</span>[] a)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(a.length!=<span class="number">4</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">"不得多于或少于4个数"</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        Double[] dArrays = <span class="keyword">new</span> Double[<span class="number">4</span>];</span><br><span class="line">        dArrays[<span class="number">0</span>] = a[<span class="number">0</span>]+<span class="number">0</span>D;</span><br><span class="line">        dArrays[<span class="number">1</span>] = a[<span class="number">1</span>]+<span class="number">0</span>D;</span><br><span class="line">        dArrays[<span class="number">2</span>] = a[<span class="number">2</span>]+<span class="number">0</span>D;</span><br><span class="line">        dArrays[<span class="number">3</span>] = a[<span class="number">3</span>]+<span class="number">0</span>D;</span><br><span class="line">        List&lt;Node&gt; headerList = <span class="keyword">null</span>;<span class="comment">//初始化集合</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">4</span>;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;<span class="number">4</span>;j++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(j==i)&#123;</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;<span class="number">4</span>;k++)&#123;</span><br><span class="line">                    <span class="keyword">if</span>(k==i || k==j)&#123;</span><br><span class="line">                        <span class="keyword">continue</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    headerList = createHeaderList(dArrays[i],dArrays[j]);</span><br><span class="line">                    List&lt;Node&gt; chooseThreeNum = <span class="keyword">null</span>;</span><br><span class="line">                    <span class="keyword">for</span>(Node t:headerList)&#123;</span><br><span class="line">                        chooseThreeNum = chooseThreeOrFourNum(t, dArrays[k]);</span><br><span class="line">                        List&lt;Node&gt; chooseFourNum = <span class="keyword">null</span>;</span><br><span class="line">                        <span class="keyword">for</span>(Node temp:chooseThreeNum )&#123;</span><br><span class="line">                            chooseFourNum = chooseThreeOrFourNum(temp,dArrays[<span class="number">6</span>-(i+j+k)]);</span><br><span class="line">                            pickNode(chooseFourNum);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        getAllCalculate();</span><br><span class="line">        <span class="keyword">if</span>(calculateSet.size()&gt;<span class="number">0</span>)&#123;</span><br><span class="line">            display();</span><br><span class="line">        &#125;      </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">display</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"共有解:"</span>+calculateSet.size()+<span class="string">"个,具体如下:"</span>);</span><br><span class="line">        <span class="keyword">for</span>(String s:calculateSet)&#123;</span><br><span class="line">            System.out.println(s+<span class="string">" = 24"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">getAllCalculate</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(result.size()&lt;<span class="number">1</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">"抱歉，没有解"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        Node second = <span class="keyword">null</span>;</span><br><span class="line">        Node first = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">for</span>(Node t:result)&#123;</span><br><span class="line">            second = t.getPre_node();</span><br><span class="line">            first = second.getPre_node();</span><br><span class="line">            <span class="keyword">if</span>(second.get_a().doubleValue()==first.getValue().doubleValue())&#123;</span><br><span class="line">                second.setA_cul_str(first.getCul_str());              </span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                second.setB_cul_str(first.getCul_str());    </span><br><span class="line">            &#125;</span><br><span class="line">            second.doCalculate();</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span>(t.get_a().doubleValue()==second.getValue().doubleValue())&#123;</span><br><span class="line">                t.setA_cul_str(second.getCul_str());              </span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                t.setB_cul_str(second.getCul_str());    </span><br><span class="line">            &#125;</span><br><span class="line">            t.doCalculate();</span><br><span class="line">            calculateSet.add(filterCalculate(t.getCul_str()));</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> String <span class="title">filterCalculate</span><span class="params">(String str)</span></span>&#123;</span><br><span class="line">        str = str.substring(<span class="number">1</span>, str.length()-<span class="number">1</span>);</span><br><span class="line">        str = str.replace(<span class="string">".0"</span>, <span class="string">""</span>);</span><br><span class="line">        str = str.replace(<span class="string">"*"</span>, <span class="string">"×"</span>);</span><br><span class="line">        str = str.replace(<span class="string">"/"</span>, <span class="string">"÷"</span>);</span><br><span class="line">        <span class="keyword">return</span> str;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">pickNode</span><span class="params">(List&lt;Node&gt; list)</span></span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(Node t : list)&#123;</span><br><span class="line">            <span class="keyword">if</span>(judge24(t.getValue()))&#123;</span><br><span class="line">                result.add(t);<span class="comment">//result 集合添加符合24点的表达式</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">judge24</span><span class="params">(Double d)</span></span>&#123;<span class="comment">//判断表达式结果</span></span><br><span class="line">        <span class="keyword">if</span>(Math.abs(d.doubleValue()-<span class="number">24</span>)&lt;=<span class="number">0.000001</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> List&lt;Node&gt; <span class="title">chooseThreeOrFourNum</span><span class="params">(Node t,Double b)</span></span>&#123;</span><br><span class="line">        List&lt;Node&gt; result = <span class="keyword">new</span> ArrayList&lt;Node&gt;();</span><br><span class="line">        Double a = t.getValue();</span><br><span class="line">        Node n1 = <span class="keyword">new</span> Node(a,b,<span class="string">'+'</span>);</span><br><span class="line">        Node n2 = <span class="keyword">new</span> Node(a,b,<span class="string">'-'</span>);</span><br><span class="line">        Node n3 = <span class="keyword">new</span> Node(a,b,<span class="string">'-'</span>,<span class="keyword">true</span>);<span class="comment">//a-b 或 a*b 结果与顺序相关</span></span><br><span class="line">        Node n4 = <span class="keyword">new</span> Node(a,b,<span class="string">'*'</span>);</span><br><span class="line">        Node n5 = <span class="keyword">new</span> Node(a,b,<span class="string">'/'</span>);</span><br><span class="line">        Node n6 = <span class="keyword">new</span> Node(a,b,<span class="string">'/'</span>,<span class="keyword">true</span>);</span><br><span class="line">        n1.doCalculate();</span><br><span class="line">        n2.doCalculate();</span><br><span class="line">        n3.doCalculate();</span><br><span class="line">        n4.doCalculate();</span><br><span class="line">        n5.doCalculate();</span><br><span class="line">        n6.doCalculate();</span><br><span class="line">        insertNode(n1,result);</span><br><span class="line">        insertNode(n2,result);</span><br><span class="line">        insertNode(n3,result);</span><br><span class="line">        insertNode(n4,result);</span><br><span class="line">        insertNode(n5,result);</span><br><span class="line">        insertNode(n6,result);</span><br><span class="line">        n1.setPre_node(t);</span><br><span class="line">        n2.setPre_node(t);</span><br><span class="line">        n3.setPre_node(t);</span><br><span class="line">        n4.setPre_node(t);</span><br><span class="line">        n5.setPre_node(t);</span><br><span class="line">        n6.setPre_node(t);    </span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> List&lt;Node&gt; <span class="title">createHeaderList</span><span class="params">(Double a,Double b)</span></span>&#123;</span><br><span class="line">        List&lt;Node&gt; result = <span class="keyword">new</span> ArrayList&lt;Node&gt;();</span><br><span class="line">        Node n1 = <span class="keyword">new</span> Node(a,b,<span class="string">'+'</span>);</span><br><span class="line">        Node n2 = <span class="keyword">new</span> Node(a,b,<span class="string">'-'</span>);</span><br><span class="line">        Node n3 = <span class="keyword">new</span> Node(a,b,<span class="string">'-'</span>,<span class="keyword">true</span>);</span><br><span class="line">        Node n4 = <span class="keyword">new</span> Node(a,b,<span class="string">'*'</span>);</span><br><span class="line">        Node n5 = <span class="keyword">new</span> Node(a,b,<span class="string">'/'</span>);</span><br><span class="line">        Node n6 = <span class="keyword">new</span> Node(a,b,<span class="string">'/'</span>,<span class="keyword">true</span>);</span><br><span class="line">        n1.doCalculate();</span><br><span class="line">        n2.doCalculate();</span><br><span class="line">        n3.doCalculate();</span><br><span class="line">        n4.doCalculate();</span><br><span class="line">        n5.doCalculate();</span><br><span class="line">        n6.doCalculate();</span><br><span class="line">        insertNode(n1,result);</span><br><span class="line">        insertNode(n2,result);</span><br><span class="line">        insertNode(n3,result);</span><br><span class="line">        insertNode(n4,result);</span><br><span class="line">        insertNode(n5,result);</span><br><span class="line">        insertNode(n6,result);</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">insertNode</span><span class="params">(Node p,List&lt;Node&gt; list)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(p.getValue()!=<span class="keyword">null</span>)&#123;</span><br><span class="line">            list.add(p);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Node</span> </span>&#123;</span><br><span class="line">    Double _a;</span><br><span class="line">    Double _b;</span><br><span class="line">    <span class="keyword">char</span> opr;</span><br><span class="line">    Double value;</span><br><span class="line">    <span class="keyword">boolean</span> is_rev_order;</span><br><span class="line">    String a_cul_str;<span class="comment">//_a的算式</span></span><br><span class="line">    String b_cul_str;<span class="comment">//_b的算式</span></span><br><span class="line">    String cul_str;<span class="comment">//自身的算式</span></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 实例化Node 对象</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    Node pre_node;</span><br><span class="line">    Node next_branch1;</span><br><span class="line">    Node next_branch2;</span><br><span class="line">    Node next_branch3;</span><br><span class="line">    Node next_branch4;</span><br><span class="line">    Node next_branch5;</span><br><span class="line">    Node next_branch6;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Node</span><span class="params">(Double a, Double b, <span class="keyword">char</span> opr)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>._a = a;</span><br><span class="line">        <span class="keyword">this</span>._b = b;</span><br><span class="line">        <span class="keyword">this</span>.opr = opr;</span><br><span class="line">        <span class="keyword">this</span>.a_cul_str = Double.toString(_a);</span><br><span class="line">        <span class="keyword">this</span>.b_cul_str = Double.toString(_b);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Node</span><span class="params">(Double a, Double b, <span class="keyword">char</span> opr, <span class="keyword">boolean</span> is_rev_order)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>._a = a;</span><br><span class="line">        <span class="keyword">this</span>._b = b;</span><br><span class="line">        <span class="keyword">this</span>.opr = opr;</span><br><span class="line">        <span class="keyword">this</span>.is_rev_order = is_rev_order;</span><br><span class="line">        <span class="keyword">this</span>.a_cul_str = Double.toString(_a);</span><br><span class="line">        <span class="keyword">this</span>.b_cul_str = Double.toString(_b);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> Double <span class="title">getValue</span><span class="params">()</span></span>&#123;<span class="comment">//获得随机数</span></span><br><span class="line">        <span class="keyword">return</span> value;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">         *计算数学表达式</span></span><br><span class="line"><span class="comment">         *对操作符进行数据间插入</span></span><br><span class="line"><span class="comment">         *递归实现将两个数的运算继续参与运算   </span></span><br><span class="line"><span class="comment">         * */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doCalculate</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">switch</span>(opr)&#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">'+'</span>:</span><br><span class="line">            cul_str = <span class="string">"("</span>+a_cul_str+<span class="string">"+"</span>+b_cul_str+<span class="string">")"</span>;</span><br><span class="line">            value = _a+_b;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">'-'</span>:</span><br><span class="line">            <span class="keyword">if</span>(is_rev_order)&#123;<span class="comment">//是生成数据顺序</span></span><br><span class="line">                cul_str = <span class="string">"("</span>+b_cul_str+<span class="string">"-"</span>+a_cul_str+<span class="string">")"</span>;</span><br><span class="line">                value = _b-_a;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                cul_str = <span class="string">"("</span>+a_cul_str+<span class="string">"-"</span>+b_cul_str+<span class="string">")"</span>;</span><br><span class="line">                value = _a-_b;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">'*'</span>:</span><br><span class="line">            cul_str = <span class="string">"("</span>+a_cul_str+<span class="string">"*"</span>+b_cul_str+<span class="string">")"</span>;</span><br><span class="line">            value = _a*_b;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">'/'</span>:</span><br><span class="line">            <span class="keyword">if</span>(is_rev_order)&#123;</span><br><span class="line">                <span class="keyword">if</span>(_a!=<span class="number">0</span>)&#123;</span><br><span class="line">                    cul_str = <span class="string">"("</span>+b_cul_str+<span class="string">"/"</span>+a_cul_str+<span class="string">")"</span>;</span><br><span class="line">                    value = _b/_a;</span><br><span class="line">                &#125;</span><br><span class="line">               </span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">if</span>(_b!=<span class="number">0</span>)&#123;</span><br><span class="line">                    cul_str = <span class="string">"("</span>+a_cul_str+<span class="string">"/"</span>+b_cul_str+<span class="string">")"</span>;</span><br><span class="line">                    value = _a/_b;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> Double <span class="title">get_a</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> _a;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">set_a</span><span class="params">(Double _a)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>._a = _a;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> Double <span class="title">get_b</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> _b;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">set_b</span><span class="params">(Double _b)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>._b = _b;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getA_cul_str</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> a_cul_str;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setA_cul_str</span><span class="params">(String a_cul_str)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.a_cul_str = a_cul_str;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getB_cul_str</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> b_cul_str;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setB_cul_str</span><span class="params">(String b_cul_str)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.b_cul_str = b_cul_str;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getCul_str</span><span class="params">()</span> </span>&#123;<span class="comment">//获得计算后的值</span></span><br><span class="line">        <span class="keyword">return</span> cul_str;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setCul_str</span><span class="params">(String cul_str)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.cul_str = cul_str;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> Node <span class="title">getPre_node</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> pre_node;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPre_node</span><span class="params">(Node pre_node)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.pre_node = pre_node;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> Node <span class="title">getNext_branch1</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> next_branch1;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setNext_branch1</span><span class="params">(Node next_branch1)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.next_branch1 = next_branch1;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> Node <span class="title">getNext_branch2</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> next_branch2;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setNext_branch2</span><span class="params">(Node next_branch2)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.next_branch2 = next_branch2;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> Node <span class="title">getNext_branch3</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> next_branch3;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setNext_branch3</span><span class="params">(Node next_branch3)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.next_branch3 = next_branch3;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> Node <span class="title">getNext_branch4</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> next_branch4;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setNext_branch4</span><span class="params">(Node next_branch4)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.next_branch4 = next_branch4;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> Node <span class="title">getNext_branch5</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> next_branch5;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setNext_branch5</span><span class="params">(Node next_branch5)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.next_branch5 = next_branch5;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> Node <span class="title">getNext_branch6</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> next_branch6;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setNext_branch6</span><span class="params">(Node next_branch6)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.next_branch6 = next_branch6;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.BufferedOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.Calendar;</span><br><span class="line"><span class="keyword">import</span> java.util.Random;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="keyword">import</span> java.util.Stack;</span><br><span class="line"><span class="keyword">import</span> java.util.Timer;</span><br><span class="line"><span class="keyword">import</span> java.util.TimerTask;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User_point</span> </span>&#123;</span><br><span class="line">	<span class="keyword">static</span> <span class="keyword">boolean</span> flag = <span class="keyword">true</span>;<span class="comment">//该变量标识是否超时</span></span><br><span class="line">	<span class="keyword">static</span> <span class="keyword">int</span> life = <span class="number">3</span>;<span class="comment">//初始化生命值</span></span><br><span class="line">	<span class="keyword">static</span> <span class="keyword">int</span> score=<span class="number">0</span>;<span class="comment">//初始化分数</span></span><br><span class="line">	</span><br><span class="line">	    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span>  <span class="keyword">throws</span> IOException</span>&#123;</span><br><span class="line">	    	start();<span class="comment">//start 函数作函数入口</span></span><br><span class="line">	    &#125;</span><br><span class="line"></span><br><span class="line">	    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Double <span class="title">calculate</span> <span class="params">(String str)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	        <span class="comment">//创建操作符栈</span></span><br><span class="line">	        Stack&lt;Character&gt; ops = <span class="keyword">new</span> Stack&lt;&gt;();</span><br><span class="line">	        <span class="comment">//创建操作数栈</span></span><br><span class="line">	        Stack&lt;Double&gt; nums = <span class="keyword">new</span> Stack&lt;&gt;();</span><br><span class="line">	        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; str.length(); i++) &#123;</span><br><span class="line">	            <span class="keyword">char</span> s = str.charAt(i);</span><br><span class="line">	            <span class="keyword">switch</span> (s) &#123;</span><br><span class="line">	                <span class="comment">//无视左括号</span></span><br><span class="line">	                <span class="keyword">case</span> <span class="string">'('</span>:</span><br><span class="line">	                    <span class="keyword">break</span>;</span><br><span class="line">	                <span class="comment">// +.-.*./ 这些操作符都压入栈</span></span><br><span class="line">	                <span class="keyword">case</span> <span class="string">'+'</span>:</span><br><span class="line">	                    ops.push(s);</span><br><span class="line">	                    <span class="keyword">break</span>;</span><br><span class="line">	                <span class="keyword">case</span> <span class="string">'-'</span>:</span><br><span class="line">	                    ops.push(s);</span><br><span class="line">	                    <span class="keyword">break</span>;</span><br><span class="line">	                <span class="keyword">case</span> <span class="string">'*'</span>:</span><br><span class="line">	                    ops.push(s);</span><br><span class="line">	                    <span class="keyword">break</span>;</span><br><span class="line">	                <span class="keyword">case</span> <span class="string">'/'</span>:</span><br><span class="line">	                    ops.push(s);</span><br><span class="line">	                    <span class="keyword">break</span>;</span><br><span class="line">	                <span class="keyword">case</span> <span class="string">')'</span>:</span><br><span class="line">	                    <span class="comment">//遇到右括号时，根据从操作符栈中取出操作符，并从操作数栈中取出相应都操作数进行计算，并将计算结果压入操作数栈</span></span><br><span class="line">	                    <span class="keyword">char</span> op = ops.pop();</span><br><span class="line">	                    Double num = nums.pop();</span><br><span class="line">	                    <span class="keyword">switch</span> (op) &#123;</span><br><span class="line">	                        <span class="keyword">case</span> <span class="string">'+'</span>:</span><br><span class="line">	                            num = num + nums.pop();</span><br><span class="line">	                            <span class="keyword">break</span>;</span><br><span class="line">	                        <span class="keyword">case</span> <span class="string">'-'</span>:</span><br><span class="line">	                            num = num - nums.pop();</span><br><span class="line">	                            <span class="keyword">break</span>;</span><br><span class="line">	                        <span class="keyword">case</span> <span class="string">'*'</span>:</span><br><span class="line">	                            num = num * nums.pop();</span><br><span class="line">	                            <span class="keyword">break</span>;</span><br><span class="line">	                        <span class="keyword">case</span> <span class="string">'/'</span>:</span><br><span class="line">	                            num = num / nums.pop();</span><br><span class="line">	                            <span class="keyword">break</span>;</span><br><span class="line">	                    &#125;</span><br><span class="line">	                    nums.push(num);</span><br><span class="line">	                    <span class="keyword">break</span>;</span><br><span class="line">	                <span class="keyword">default</span>:</span><br><span class="line">	                    nums.push(Double.parseDouble(Character.toString(s)));</span><br><span class="line">	                    <span class="keyword">break</span>;</span><br><span class="line">	            &#125;</span><br><span class="line">	        &#125;</span><br><span class="line">	        <span class="keyword">return</span> nums.pop();<span class="comment">//栈顶元素</span></span><br><span class="line">	    &#125;</span><br><span class="line">	    </span><br><span class="line">    </span><br><span class="line">	</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">public</span>  <span class="keyword">static</span> <span class="keyword">int</span>[] set_num()</span><br><span class="line">	&#123;   </span><br><span class="line">		<span class="keyword">int</span> number[] = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">4</span>];</span><br><span class="line">		Random random = <span class="keyword">new</span> Random();</span><br><span class="line">		</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">4</span>;i++)</span><br><span class="line">		&#123;<span class="keyword">int</span> x=random.nextInt(<span class="number">13</span>)+<span class="number">1</span>;</span><br><span class="line">    	number[i]=x;</span><br><span class="line">    	&#125;</span><br><span class="line">		</span><br><span class="line">		<span class="keyword">return</span> number;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//考虑异常处理</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span>  <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">start</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">		Calendar date = Calendar.getInstance();<span class="comment">//实例化Calendar对象，工厂方法</span></span><br><span class="line">		<span class="keyword">while</span>(life&gt;<span class="number">0</span>) &#123;<span class="comment">//当生命值大于0才会进行</span></span><br><span class="line">			flag=<span class="keyword">true</span>;<span class="comment">//初始化分数标记</span></span><br><span class="line">			<span class="comment">/**</span></span><br><span class="line"><span class="comment">			 * 在60秒内输入表达式，超时将 flag 的值 变为 false ，在answer 中分支进入‘2’, </span></span><br><span class="line"><span class="comment">			 */</span></span><br><span class="line">			date.setTime(<span class="keyword">new</span> Date()); <span class="comment">// 重置 Calendar 显示当前时间</span></span><br><span class="line"></span><br><span class="line">			date.add(Calendar.SECOND,<span class="number">60</span>);<span class="comment">//设置限定时间</span></span><br><span class="line">			</span><br><span class="line">			Timer timer = <span class="keyword">new</span> Timer();</span><br><span class="line">			<span class="comment">//当达到限定时间将会执行run()方法,即把全局变量flag变为false</span></span><br><span class="line">			timer.schedule(<span class="keyword">new</span> RemindTask(), date.getTime());</span><br><span class="line">			<span class="keyword">int</span> answer = answer();</span><br><span class="line">			<span class="keyword">switch</span>(answer) &#123;</span><br><span class="line">			<span class="keyword">case</span> -<span class="number">1</span>:</span><br><span class="line">				System.out.println(<span class="string">"表达式错误！！    当前生命值为"</span>+life+<span class="string">" 分数为："</span>+score);</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			<span class="keyword">case</span> -<span class="number">2</span>:</span><br><span class="line">				System.out.println(<span class="string">"输入超时！！    当前生命值为"</span>+life+<span class="string">" 分数为："</span>+score);</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			<span class="keyword">case</span> -<span class="number">3</span>:</span><br><span class="line">				System.out.println(<span class="string">"结果错误！！    当前生命值为"</span>+life+<span class="string">" 分数为："</span>+score);</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			<span class="keyword">case</span> <span class="number">1</span>:	</span><br><span class="line">				System.out.println(<span class="string">"正确,得到1分奖励！！    当前生命值为"</span>+life+<span class="string">" 分数为："</span>+score);</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			&#125;</span><br><span class="line">			System.out.println(<span class="string">"-------------------------------------------------------------"</span>);</span><br><span class="line">		&#125;</span><br><span class="line">		System.out.println(<span class="string">"游戏结束……分数为: "</span>+score);<span class="comment">//循环结束也就是生命值为0,打印游戏结束</span></span><br><span class="line">		saveScore(score);<span class="comment">//将玩家当前分数存入文件</span></span><br><span class="line">		<span class="keyword">return</span>;</span><br><span class="line">	&#125; </span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 文件操作,将玩家最后得分存入e:/TopList.txt</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">saveScore</span><span class="params">(<span class="keyword">int</span> score)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">		FileOutputStream fos = <span class="keyword">new</span> FileOutputStream(<span class="string">"e:/TopList.txt"</span>);</span><br><span class="line">		BufferedOutputStream bos = <span class="keyword">new</span> BufferedOutputStream(fos);</span><br><span class="line">		bos.write((score+<span class="string">""</span>).getBytes());<span class="comment">//把分数写入文件</span></span><br><span class="line">		bos.close();</span><br><span class="line">		</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 表达式正确性及时间处理函数</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">answer</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">int</span>[] number = set_num();</span><br><span class="line">		System.out.println(<span class="string">"                           "</span>+Arrays.toString(number)+<span class="string">"                       "</span>); <span class="comment">//打印随机数组	</span></span><br><span class="line">		System.out.println(<span class="string">"------------------------------开始作答-----------------------------------"</span>);</span><br><span class="line">		System.out.println(<span class="string">"-------请在一分钟内输入您的24点表达式并将其括号化，（否则凉凉了呀）---------"</span>);</span><br><span class="line">		Scanner sc= <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">	    String s = sc.nextLine();</span><br><span class="line">	   </span><br><span class="line">		</span><br><span class="line">		<span class="keyword">try</span> &#123;</span><br><span class="line">			<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; number.length; i++)</span><br><span class="line">				<span class="keyword">if</span> (!s.contains(number[i] + <span class="string">""</span>)) &#123;<span class="comment">//输入的表达式不含给定的值</span></span><br><span class="line">					life--;</span><br><span class="line">					<span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">				&#125;</span><br><span class="line">			<span class="keyword">if</span>(!flag) &#123;<span class="comment">//判断超时</span></span><br><span class="line">				life--;</span><br><span class="line">				<span class="keyword">return</span> -<span class="number">2</span>;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">if</span> (calculate(s)==<span class="number">24.0</span>)&#123;<span class="comment">//玩家表达式调用双栈运算</span></span><br><span class="line">				score++;<span class="comment">//分数加一</span></span><br><span class="line">				<span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">else</span> life--;</span><br><span class="line">			</span><br><span class="line">		&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">			</span><br><span class="line">			System.out.println(<span class="string">"表达式输入不合法"</span>);</span><br><span class="line">		&#125;</span><br><span class="line">		</span><br><span class="line">		<span class="keyword">return</span> -<span class="number">3</span>;</span><br><span class="line"></span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	</span><br><span class="line">	&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">RemindTask</span> <span class="keyword">extends</span> <span class="title">TimerTask</span> </span>&#123;  <span class="comment">//TimerTask 类多线程计算从开始输入表达式倒计时</span></span><br><span class="line"></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;<span class="comment">//重写父类run方法</span></span><br><span class="line">		User_point.flag = <span class="keyword">false</span>;<span class="comment">//当超时会把全局变量flag变为false</span></span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="四-测试截图"><a href="#四-测试截图" class="headerlink" title="四. 测试截图"></a>四. 测试截图</h3><h6 id="基础要求"><a href="#基础要求" class="headerlink" title="基础要求"></a>基础要求</h6><p><img src="https://img-blog.csdnimg.cn/20190413190145718.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzUzOTQ0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h6 id="提高要求"><a href="#提高要求" class="headerlink" title="提高要求"></a>提高要求</h6><p><img src="https://img-blog.csdnimg.cn/20190413190217356.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzUzOTQ0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h3 id="五．个人总结"><a href="#五．个人总结" class="headerlink" title="五．个人总结"></a>五．个人总结</h3><p>刚拿到题目时无从下手，由于对递归掌握的不是很好，所以也就没能想到利用降维的方法来解决问题，在网上看了很多很多算法后，才对这种递归降维的方法有了一定的认识，解决了问题。因为之前学习Java过程中关于集合的部分还未涉及，表达式去重也就变得相对困难，看了Java的集合部分后，才找到解决问题的办法——hashset。在提高要求的完成部分，解决表达式求值成了关键问题，这让我意识到学好数据结构的重要性，虽然有些算法的使用频率相对较低，但当使用的时候确实可以发挥奇效。还有一个问题是双栈算法尽管可以求值但需要将用户输入的表达式完全括号化，否则就会出现结果偏差，相较于这种算法，中缀表达式转后缀表达式的算法就更人性化一些，这也是本次程序设计还需完善的地方。</p>
]]></content>
      <categories>
        <category>java 基础</category>
      </categories>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title>java三种设计模式实例实现</title>
    <url>/2020/03/04/Java%20%E4%B8%89%E7%A7%8D%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E5%AE%9E%E4%BE%8B%E5%AE%9E%E7%8E%B0/</url>
    <content><![CDATA[<h3 id="一．-题目分析"><a href="#一．-题目分析" class="headerlink" title="一．    题目分析"></a>一．    题目分析</h3><p>1) 熟悉建模工具。<br>2) 掌握简单工厂模式、工厂方法模式、抽象工厂模式，并进行设计应用。</p>
<h4 id="①．简单工厂模式"><a href="#①．简单工厂模式" class="headerlink" title="①．简单工厂模式"></a>①．简单工厂模式</h4><p>使用简单工厂模式模拟女娲（Nvwa）造人（Person），如果传入参数M，则返回一个Man对象，如果传入参数W，则返回一个Woman对象，请实现该场景。现需要增加一个新的Robot类，如果传入参数  R，则返回一个Robot对象，对代码进行修改并注意女娲的变化。<br><strong><em>※分析</em></strong>：简单工厂模式属于类创建型模式，在简单工厂模式中，可以根据参数的不同返回不同类的实例。被创建的实例通常都具有共同的父类，也可用接口实现。</p>
<h4 id="②-工厂方法模式"><a href="#②-工厂方法模式" class="headerlink" title="② . 工厂方法模式"></a>② . 工厂方法模式</h4><p>海尔工厂(Haier)生产海尔空调(HaierAirCondition)，美的工厂(Midea)生产美的空调(MideaAirCondition) 。使用工厂方法模式描述该场景，绘制类图并编程实现。<br><strong><em>※分析</em></strong>：工厂方法模式也叫多态工厂模式，属于类创建型模式。在工厂方法模式中，空调父类工厂负责定义创建产品对象的公共接口，而工厂子类（如HaierAirConditionFactory）则负责生成具体的产品对象（HaierAirCondition），这样做的目的是将产品类的实例化操作延迟到工厂子类中完成，即通过工厂子类来确定究竟应该实例化哪一个具体产品类。<br>即使有新产品添加进来，也只需要新建具体的新建产品工厂，不会违反ocp原则。<br>  ※分析：</p>
<h4 id="③．抽象工厂模式"><a href="#③．抽象工厂模式" class="headerlink" title="③．抽象工厂模式"></a>③．抽象工厂模式</h4><p>电脑配件生产工厂生产内存、CPU等硬件设备，这些内存、CPU的品牌、型号并不一定相同，根据下面的“产品等级结构-产品族”示意图，使用抽象工厂模式实现电脑配件生产过程并绘制相应的类图，绘制类图并编程实现。<br><strong><em>※分析</em></strong>：抽象工厂模式属于对象创建型模式。它提供一个创建一系列相关或相互依赖对象的接口，而无须指定它们具体的类。此模式适用于产品族（且产品的个数较少）的生产。如添加新建产品子项，就需要在接口中添加新产品实例，违反开闭原则</p>
<h3 id="二．-类图设计"><a href="#二．-类图设计" class="headerlink" title="二．    类图设计"></a>二．    类图设计</h3><h6 id="1-简单工厂模式"><a href="#1-简单工厂模式" class="headerlink" title="1.    简单工厂模式"></a>1.    简单工厂模式</h6><p><img src="https://img-blog.csdnimg.cn/20190505162404969.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzUzOTQ0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h6 id="2-工厂模式"><a href="#2-工厂模式" class="headerlink" title="2.    工厂模式"></a>2.    工厂模式<img src="https://img-blog.csdnimg.cn/20190505162511153.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzUzOTQ0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></h6><h6 id="3-抽象工厂模式"><a href="#3-抽象工厂模式" class="headerlink" title="3.抽象工厂模式"></a>3.抽象工厂模式</h6><p><img src="https://img-blog.csdnimg.cn/20190505162628303.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzUzOTQ0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h3 id="三．-程序实现"><a href="#三．-程序实现" class="headerlink" title="三．    程序实现"></a>三．    程序实现</h3><p>①．man类,women类,robot类 分别实现People接口，重写接口play（）方法，实现子类对象的特性。而产生三种人的任务均由PeopleFactory（）类承担，其中带参函数producePeople(S)<br>通过用户键盘输入传入s,根据不同传入参数生成不同人种。<br>②．HaierAirCondition（），MideaAirCondition（）分别实现接口AirCondition（），并重写其活动方法。HaierAirConditionFactory（），MideaAirConditionFactory（）分别实现AirConditionFactory（）接口。在各自的工厂内重写接口方法，实现产品的制造，返回实例化对象。通过改写xml文件中类名来生产不同的空调。XML配置采用Java 反射机制来完成。<br>③．interface&lt;CPU ,RAM&gt;分别是PC_CPU,Mac_CPU 的父类，子类通过重写discriber() 方法来对产品进行描述。Interface&lt; ComputerPartsFactory&gt;是MacFactory，和PCFactory 的父类，子类重写接口方法返回相应的子类对象，达到生产产品族的目的。</p>
<h3 id="四．-调试测试截图"><a href="#四．-调试测试截图" class="headerlink" title="四．    调试测试截图"></a>四．    调试测试截图</h3><p><img src="https://img-blog.csdnimg.cn/20190505163059334.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzUzOTQ0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><img src="https://img-blog.csdnimg.cn/20190505163217394.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzUzOTQ0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20190505163317233.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzUzOTQ0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h3 id="五．-经验总结"><a href="#五．-经验总结" class="headerlink" title="五．    经验总结"></a>五．    经验总结</h3><p>通过具体的代码了解掌握了三种设计模式的思想及实现方法，并在编程中学到了参数传递的新方法XML。<br>XML文件通过修改自身关于类名映射来实现不同对象的改变。<br>两种设计模式总结如下<br>工厂方法模式：<br>一个抽象产品类，可以派生出多个具体产品类。<br>一个抽象工厂类，可以派生出多个具体工厂类。<br>每个具体工厂类只能创建一个具体产品类的实例。<br>抽象工厂模式：<br>多个抽象产品类，每个抽象产品类可以派生出多个具体产品类。<br>一个抽象工厂类，可以派生出多个具体工厂类。<br>每个具体工厂类可以创建多个具体产品类的实例。<br>区别：<br>工厂方法模式只有一个抽象产品类，而抽象工厂模式有多个。<br>工厂方法模式的具体工厂类只能创建一个具体产品类的实例，而抽象工厂模式可以创建多个。</p>
<hr>
<p>附：<br>  具体代码 1</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> AirConditionMade;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">airCondition</span> </span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">display</span><span class="params">()</span></span>;</span><br><span class="line">	</span><br><span class="line"><span class="keyword">package</span> AirConditionMade;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">airConditionFcatory</span> </span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> airCondition <span class="title">produce</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">&#125;&#125;</span><br><span class="line"><span class="keyword">package</span> AirConditionMade;</span><br><span class="line"><span class="keyword">import</span> AirConditionMade.XMLUtil;</span><br><span class="line"><span class="keyword">import</span> AirConditionMade.airConditionFcatory;</span><br><span class="line"><span class="keyword">import</span> AirConditionMade.airCondition;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Client</span> </span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span></span><br><span class="line"><span class="function">	  </span>&#123;</span><br><span class="line">		<span class="keyword">try</span> &#123;</span><br><span class="line">			airCondition AC;</span><br><span class="line">			airConditionFcatory factory;</span><br><span class="line">			factory=(airConditionFcatory)XMLUtil.getBean();</span><br><span class="line">			AC=factory.produce();</span><br><span class="line">			AC.display();</span><br><span class="line">			</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">catch</span>(Exception e)</span><br><span class="line">		&#123;</span><br><span class="line">			System.out.println(e.getMessage());</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">package</span> AirConditionMade;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HaierAirCondition</span> <span class="keyword">implements</span> <span class="title">airCondition</span></span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">display</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		System.out.println(<span class="string">"HaierAirCondition hava made!"</span>);</span><br><span class="line">		System.out.println(<span class="string">"海尔空调下线销售中"</span>);</span><br><span class="line">		</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">package</span> AirConditionMade;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HaierAirConditionFacctory</span> <span class="keyword">implements</span> <span class="title">airConditionFcatory</span></span>&#123;</span><br><span class="line">     <span class="function"><span class="keyword">public</span> airCondition <span class="title">produce</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    	 System.out.println(<span class="string">"海尔集团生产海尔空调"</span>);</span><br><span class="line">    	 <span class="keyword">return</span>  <span class="keyword">new</span> HaierAirCondition();</span><br><span class="line">     &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">package</span> AirConditionMade;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MideaAirCondition</span> <span class="keyword">implements</span> <span class="title">airCondition</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">display</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    	System.out.println(<span class="string">"MideaAirCondition have made!"</span>);</span><br><span class="line">    	System.out.println(<span class="string">"美的空调下线销售中"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">package</span> AirConditionMade;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MideaAirConditionFactory</span> <span class="keyword">implements</span> <span class="title">airConditionFcatory</span></span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> airCondition <span class="title">produce</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	 System.out.println(<span class="string">"美的集团生产美的空调"</span>);</span><br><span class="line">	 <span class="keyword">return</span>  <span class="keyword">new</span> MideaAirCondition();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">package</span> AirConditionMade;</span><br><span class="line"><span class="keyword">import</span> org.w3c.dom.*;</span><br><span class="line"><span class="keyword">import</span> org.xml.sax.SAXException;</span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> javax.xml.parsers.*;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">XMLUtil</span> </span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Object <span class="title">getBean</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	<span class="keyword">try</span> &#123;</span><br><span class="line">		<span class="comment">/**</span></span><br><span class="line"><span class="comment">		 * </span></span><br><span class="line"><span class="comment">		 * 创建文档对象</span></span><br><span class="line"><span class="comment">		 */</span></span><br><span class="line">	</span><br><span class="line">	</span><br><span class="line">		DocumentBuilderFactory dFactory = DocumentBuilderFactory.newInstance();</span><br><span class="line">		DocumentBuilder builder = dFactory.newDocumentBuilder();</span><br><span class="line">		Document doc;</span><br><span class="line">		doc = builder.parse(<span class="keyword">new</span> File(<span class="string">"XMLUtil.xml"</span>));</span><br><span class="line">		<span class="comment">//获取包含类名的文本节点</span></span><br><span class="line">		NodeList nl =doc.getElementsByTagName(<span class="string">"className"</span>);</span><br><span class="line">		Node classNode = nl.item(<span class="number">0</span>).getFirstChild();</span><br><span class="line">		String className = classNode.getNodeValue();</span><br><span class="line">		</span><br><span class="line">		<span class="comment">//通过类名生成实例化对象将其返回</span></span><br><span class="line">		Class&lt;?&gt; c = Class.forName(className);</span><br><span class="line">		Object  obj = c.newInstance();</span><br><span class="line">		<span class="keyword">return</span> obj;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">catch</span>(Exception e)</span><br><span class="line">	&#123;</span><br><span class="line">		e.printStackTrace();</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>具体代码 2</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> NvWamade;</span><br><span class="line"><span class="keyword">import</span> NvWamade.PeopleFactory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> NvWamade.People;</span><br><span class="line"><span class="comment">//import NvWamade.XMLUtilPeople;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Client</span> </span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">try</span></span><br><span class="line"></span><br><span class="line">        &#123;</span><br><span class="line">			Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">			System.out.println(<span class="string">"请输入想造的人种"</span>);</span><br><span class="line">			String input = sc.nextLine();</span><br><span class="line">			System.out.println(<span class="string">"女娲娘娘造人中，请稍后···"</span>);</span><br><span class="line">			Thread.sleep(<span class="number">3000</span>);</span><br><span class="line">			</span><br><span class="line">			</span><br><span class="line">			</span><br><span class="line">			</span><br><span class="line">			</span><br><span class="line">			</span><br><span class="line"></span><br><span class="line">         People pe;</span><br><span class="line"></span><br><span class="line">       <span class="comment">//  String createName=XMLUtilPeople.getCreateName();</span></span><br><span class="line">         </span><br><span class="line"></span><br><span class="line">         pe=PeopleFactory.producePeople(input);</span><br><span class="line"></span><br><span class="line">         pe.play();</span><br><span class="line">         sc.close();</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">catch</span>(Exception e)</span><br><span class="line"></span><br><span class="line">        &#123;</span><br><span class="line"></span><br><span class="line">         System.out.println(e.getMessage());</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">package</span> NvWamade;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Man</span> <span class="keyword">implements</span> <span class="title">People</span></span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">play</span><span class="params">()</span></span>&#123;</span><br><span class="line">		System.out.println(<span class="string">"男人"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">package</span> NvWamade;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">People</span> </span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">play</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> NvWamade;</span><br><span class="line"><span class="keyword">import</span> NvWamade.People;</span><br><span class="line"><span class="keyword">import</span> NvWamade.Man;</span><br><span class="line"><span class="keyword">import</span> NvWamade.Women;</span><br><span class="line"><span class="keyword">import</span> NvWamade.Robot;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PeopleFactory</span> </span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> People <span class="title">producePeople</span><span class="params">(String creat)</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">		<span class="keyword">if</span>(creat.equalsIgnoreCase(<span class="string">"M"</span>)) &#123;</span><br><span class="line">			System.out.println(<span class="string">"Have made MAN"</span>);</span><br><span class="line">			<span class="keyword">return</span>  <span class="keyword">new</span> Man();</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span>(creat.equalsIgnoreCase(<span class="string">"W"</span>)) &#123;</span><br><span class="line">			System.out.println(<span class="string">"Have made WOMEN"</span>);</span><br><span class="line">			<span class="keyword">return</span> <span class="keyword">new</span> Women();</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span>(creat.equalsIgnoreCase(<span class="string">"R"</span>)) &#123;</span><br><span class="line">			System.out.println(<span class="string">"Have made ROBOT"</span>);</span><br><span class="line">			<span class="keyword">return</span> <span class="keyword">new</span> Robot();			</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span></span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">throw</span> <span class="keyword">new</span> Exception(<span class="string">"对不起，女娲的技术还不能满足您的造人需求"</span>);</span><br><span class="line">		&#125;</span><br><span class="line">		</span><br><span class="line">	&#125; </span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">package</span> NvWamade;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Robot</span> <span class="keyword">implements</span> <span class="title">People</span> </span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">play</span><span class="params">()</span></span>&#123;</span><br><span class="line">		System.out.println(<span class="string">"机器人"</span>);</span><br><span class="line">		&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">package</span> NvWamade;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Women</span> <span class="keyword">implements</span> <span class="title">People</span> </span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">play</span><span class="params">()</span></span>&#123;</span><br><span class="line">		System.out.println(<span class="string">"女人"</span>);</span><br><span class="line">		&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">package</span> NvWamade;</span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.xml.parsers.*;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.w3c.dom.NodeList;</span><br><span class="line"><span class="keyword">import</span> org.w3c.dom.Document;</span><br><span class="line"><span class="keyword">import</span> org.w3c.dom.Node;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">XMLUtilPeople</span> </span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getCreateName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">try</span> &#123;</span><br><span class="line">			<span class="comment">/**</span></span><br><span class="line"><span class="comment">			 * 创建文档对象</span></span><br><span class="line"><span class="comment">			 */</span></span><br><span class="line">			DocumentBuilderFactory dFactory =DocumentBuilderFactory.newInstance();</span><br><span class="line">			DocumentBuilder builder =dFactory.newDocumentBuilder();</span><br><span class="line">			Document doc;</span><br><span class="line">			doc = (Document) builder.parse(<span class="keyword">new</span> File(<span class="string">"congflgPeople.xml"</span>));</span><br><span class="line">			<span class="comment">/**</span></span><br><span class="line"><span class="comment">			 * 获取包含名称的文本节点</span></span><br><span class="line"><span class="comment">			 */</span></span><br><span class="line">			NodeList nl = doc.getElementsByTagName(<span class="string">"createName"</span>);</span><br><span class="line">			Node classNode=nl.item(<span class="number">0</span>).getFirstChild();</span><br><span class="line">			String creatName = classNode.getNodeValue().trim();</span><br><span class="line">			<span class="keyword">return</span> creatName;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">catch</span>(Exception e)</span><br><span class="line">		&#123;</span><br><span class="line">			e.printStackTrace();</span><br><span class="line">			<span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>具体代码 3</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> PCpartMade;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ComputerPartsClient</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">	CPU cpu;</span><br><span class="line">	RAM ram;</span><br><span class="line">	ComputerPartsFactory pcFactory;</span><br><span class="line">	ComputerPartsFactory macFactory;</span><br><span class="line">	</span><br><span class="line">	System.out.println(<span class="string">"THIS IS THE PC_PARTS  @_@  "</span>);</span><br><span class="line">	pcFactory = <span class="keyword">new</span> PCFactory();</span><br><span class="line">	cpu = pcFactory.produceCPU();</span><br><span class="line">	ram = pcFactory.produceRAM();</span><br><span class="line">	cpu.discribe();</span><br><span class="line">	ram.discribe();</span><br><span class="line">	System.out.println(<span class="string">"***************************"</span>);</span><br><span class="line">	System.out.println(<span class="string">"THIS IS THE MAC_PARTS   @_@ "</span>);</span><br><span class="line">	macFactory = <span class="keyword">new</span> MacFactory();</span><br><span class="line">	cpu = macFactory.produceCPU();</span><br><span class="line">	ram = macFactory.produceRAM();</span><br><span class="line">	cpu.discribe();</span><br><span class="line">	ram.discribe();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">package</span> PCpartMade;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">ComputerPartsFactory</span> </span>&#123;</span><br><span class="line">	<span class="function">CPU <span class="title">produceCPU</span><span class="params">()</span></span>;</span><br><span class="line">	<span class="function">RAM <span class="title">produceRAM</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">package</span> PCpartMade;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">CPU</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">discribe</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">package</span> PCpartMade;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MacCPU</span> <span class="keyword">implements</span> <span class="title">CPU</span> </span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">discribe</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		System.out.println(<span class="string">"This production is the Mac_CPU"</span>);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;																				</span><br><span class="line"><span class="keyword">package</span> PCpartMade;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MacFactory</span> <span class="keyword">implements</span> <span class="title">ComputerPartsFactory</span></span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> MacCPU <span class="title">produceCPU</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		System.out.println(<span class="string">"MAC_CPU produced!"</span>);</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">new</span> MacCPU();</span><br><span class="line">		</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> MacRam <span class="title">produceRAM</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		System.out.println(<span class="string">"Mac_RAM produced!"</span>);</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">new</span> MacRam();</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">package</span> PCpartMade;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MacRam</span> <span class="keyword">implements</span> <span class="title">RAM</span> </span>&#123;</span><br><span class="line">		<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">discribe</span><span class="params">()</span> </span>&#123;</span><br><span class="line">			System.out.println(<span class="string">"This production is the Mac_RAM"</span>);</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">	&#125;</span><br><span class="line"><span class="keyword">package</span> PCpartMade;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PcCPU</span> <span class="keyword">implements</span> <span class="title">CPU</span> </span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">discribe</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		System.out.println(<span class="string">"This production is the PC_CPU"</span>);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">package</span> PCpartMade;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PCFactory</span> <span class="keyword">implements</span> <span class="title">ComputerPartsFactory</span></span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> PcCPU <span class="title">produceCPU</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		System.out.println(<span class="string">"PC_CPU produced!"</span>);</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">new</span> PcCPU();</span><br><span class="line">		</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> PcRam <span class="title">produceRAM</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		System.out.println(<span class="string">"PC_RAM produced!"</span>);</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">new</span> PcRam();</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">package</span> PCpartMade;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PcRam</span> <span class="keyword">implements</span> <span class="title">RAM</span> </span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">discribe</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		System.out.println(<span class="string">"This production is the PC_RAM"</span>);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">package</span> PCpartMade;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">RAM</span> </span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">discribe</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>java 基础</category>
      </categories>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo 添加分类及标签不能显示解决方法</title>
    <url>/2020/03/04/Hexo%20%E6%B7%BB%E5%8A%A0%E5%88%86%E7%B1%BB%E5%8F%8A%E6%A0%87%E7%AD%BE%E4%B8%8D%E8%83%BD%E6%98%BE%E7%A4%BA%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/</url>
    <content><![CDATA[<h2 id="问题：使用Ayer-主题配置Hexo个人博客，添加分类和标签无法显示"><a href="#问题：使用Ayer-主题配置Hexo个人博客，添加分类和标签无法显示" class="headerlink" title="问题：使用Ayer 主题配置Hexo个人博客，添加分类和标签无法显示"></a>问题：使用Ayer 主题配置Hexo个人博客，添加分类和标签无法显示</h2><h3 id="1-添加博客分类"><a href="#1-添加博客分类" class="headerlink" title="1.添加博客分类"></a>1.添加博客分类</h3><ol>
<li>开启主题配置文件下_config.yml menu来设置侧边栏菜单</li>
</ol>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="string">主页:</span> <span class="string">/</span></span><br><span class="line">  <span class="string">归档:</span> <span class="string">/archives</span></span><br><span class="line">  <span class="string">分类:</span> <span class="string">/categories</span>  <span class="comment"># 开启此项</span></span><br><span class="line">  <span class="string">标签:</span> <span class="string">/tags</span>  </span><br><span class="line">  <span class="attr">CSDN:</span> <span class="string">https://blog.csdn.net/qq_41753944</span></span><br></pre></td></tr></table></figure>

<ol start="2">
<li>在站点文件夹下打开Git bash,输入以下代码</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo n page categories</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>修改source\categories文件夹下index.md文件为下面的代码</li>
</ol>
<figure class="highlight md"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: 分类</span><br><span class="line">date: 2020-03-04 17:18:32</span><br><span class="line">type: categories</span><br><span class="line">layout: categories   #注意此行不添加则点击不会显示分类结果</span><br><span class="line">---</span><br></pre></td></tr></table></figure>
<h5 id="layout-categories-使用该主题时，如果不添加此行虽然在文章中有分类，但是点击左侧菜单栏时并不会跟上你所添加的分类，也就不会显示分类"><a href="#layout-categories-使用该主题时，如果不添加此行虽然在文章中有分类，但是点击左侧菜单栏时并不会跟上你所添加的分类，也就不会显示分类" class="headerlink" title="- layout: categories  使用该主题时，如果不添加此行虽然在文章中有分类，但是点击左侧菜单栏时并不会跟上你所添加的分类，也就不会显示分类"></a>- layout: categories  使用该主题时，如果不添加此行虽然在文章中有分类，但是点击左侧菜单栏时并不会跟上你所添加的分类，也就不会显示分类</h5><h3 id="2-添加博客分类"><a href="#2-添加博客分类" class="headerlink" title="2.添加博客分类"></a>2.添加博客分类</h3><ol>
<li>开启主题配置文件下_config.yml menu来设置侧边栏菜单</li>
</ol>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="string">主页:</span> <span class="string">/</span></span><br><span class="line">  <span class="string">归档:</span> <span class="string">/archives</span></span><br><span class="line">  <span class="string">分类:</span> <span class="string">/categories</span>  </span><br><span class="line">  <span class="string">标签:</span> <span class="string">/tags</span>  <span class="comment"># 开启此项</span></span><br><span class="line">  <span class="attr">CSDN:</span> <span class="string">https://blog.csdn.net/qq_41753944</span></span><br></pre></td></tr></table></figure>

<ol start="2">
<li>在站点文件夹下打开Git bash,输入以下代码</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo n page tags</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>修改source\categories文件夹下index.md文件为下面的代码</li>
</ol>
<figure class="highlight md"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: 标签</span><br><span class="line">date: 2020-03-04 17:18:32</span><br><span class="line">type: tags</span><br><span class="line">layout: tags   #注意此行不添加则点击不会显示标签</span><br><span class="line">---</span><br></pre></td></tr></table></figure>
<h5 id="layout-tags-使用该主题时，如果不添加此行虽然在文章中有标签，但是点击左侧菜单栏时并不会跟上你所添加的标签，也就不会显示标签"><a href="#layout-tags-使用该主题时，如果不添加此行虽然在文章中有标签，但是点击左侧菜单栏时并不会跟上你所添加的标签，也就不会显示标签" class="headerlink" title="- layout: tags  使用该主题时，如果不添加此行虽然在文章中有标签，但是点击左侧菜单栏时并不会跟上你所添加的标签，也就不会显示标签"></a>- layout: tags  使用该主题时，如果不添加此行虽然在文章中有标签，但是点击左侧菜单栏时并不会跟上你所添加的标签，也就不会显示标签</h5><p>附：<a href="https://gitee.com/shen-yu/hexo-theme-ayer" target="_blank" rel="noopener">Ayer hexo 主题作者开源项目网址</a></p>
]]></content>
      <categories>
        <category>github blog</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>python机器学习--手写算法KNN</title>
    <url>/2020/03/04/python%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0--%E6%89%8B%E5%86%99%E7%AE%97%E6%B3%95KNN/</url>
    <content><![CDATA[<h3 id="一．-KNN-算法简介"><a href="#一．-KNN-算法简介" class="headerlink" title="一．    KNN 算法简介"></a>一．    KNN 算法简介</h3><p>K-近邻（（k-Nearest Neighbors））算法可以说是最简单的机器算法。构建模型只需要保存训练数据集即可。想要对新数据点做出预测，算法会在训练数据集中找到最近的数据点，也就是它的“最近邻”。该算法的思想是一个样本与数据集中的k个样本最相似，如果这k个样本中的大多数属于某一个类别，则该样本也属于这个类别。</p>
<h3 id="二．-算法构造"><a href="#二．-算法构造" class="headerlink" title="二．    算法构造"></a>二．    算法构造</h3><p>   (1) 计算测试数据与各训练数据之间的距离；<br>  (2) 对距离进行升序排列；<br>  (3) 选取距离最小的K个点；<br>  (4) 计算前K个点各自类别的出现频率；<br>  (5) 返回前K个点中出现频率最高的类别作为测试数据的预测分类。</p>
<h3 id="三-算法细节实现"><a href="#三-算法细节实现" class="headerlink" title="三.    算法细节实现"></a>三.    算法细节实现</h3><h5 id="1-生成数据集（加载鸢尾花数据集）"><a href="#1-生成数据集（加载鸢尾花数据集）" class="headerlink" title="1.生成数据集（加载鸢尾花数据集）"></a>1.生成数据集（加载鸢尾花数据集）</h5><p><img src="https://img-blog.csdnimg.cn/20191012210532421.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzUzOTQ0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>以下是生成的数据及类别数据<br><img src="https://img-blog.csdnimg.cn/20191012210620834.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzUzOTQ0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20191012210647969.png" alt="在这里插入图片描述"></p>
<h5 id="2．获取训练集测试集"><a href="#2．获取训练集测试集" class="headerlink" title="2．获取训练集测试集"></a>2．获取训练集测试集</h5><p><img src="https://img-blog.csdnimg.cn/20191012210725986.png" alt="在这里插入图片描述"></p>
<h5 id="3-构建模型（绘制训练集散点图）"><a href="#3-构建模型（绘制训练集散点图）" class="headerlink" title="3 .构建模型（绘制训练集散点图）"></a>3 .构建模型（绘制训练集散点图）</h5><p><img src="https://img-blog.csdnimg.cn/2019101221082250.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzUzOTQ0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h5 id="4-KNN-算法处理过程"><a href="#4-KNN-算法处理过程" class="headerlink" title="4.KNN 算法处理过程"></a>4.KNN 算法处理过程</h5><h6 id="（1）-新增一个点"><a href="#（1）-新增一个点" class="headerlink" title="（1）.新增一个点"></a>（1）.新增一个点</h6><p>绘制新增点后的散点图<br><img src="https://img-blog.csdnimg.cn/20191012210916870.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzUzOTQ0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>图中黑色的点是所需预测的数，利用距离得出离他最近的点的类别以此来进行分类<br>以下是算法及注释<br><img src="https://img-blog.csdnimg.cn/20191012211103277.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzUzOTQ0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h5 id="5-使用测试集数据进行算法精度评估"><a href="#5-使用测试集数据进行算法精度评估" class="headerlink" title="5.使用测试集数据进行算法精度评估"></a>5.使用测试集数据进行算法精度评估</h5><p><img src="https://img-blog.csdnimg.cn/20191012211138895.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzUzOTQ0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>即将测试集的各个点代用算法距离公式，实现分类决策</p>
<h3 id="四-算法优劣"><a href="#四-算法优劣" class="headerlink" title="四.算法优劣"></a>四.算法优劣</h3><p> 优点：<br>    (1) 精度高；<br>    (2) 对异常值不敏感。<br> 缺点：<br>    (1) 计算复杂度高；<br>    (2) 空间复杂度高。<br> 适用数据范围：<br>    数值型和标称型</p>
<h3 id="五．经验总结"><a href="#五．经验总结" class="headerlink" title="五．经验总结"></a>五．经验总结</h3><p>由于不熟悉numpy 和matplotlib的函数，在相关的功能实现上费了很大功夫，但也学会了相关的知识。在手写KNN 算法的基础上进一步理解了KNN算法的思想。</p>
<p>附源碼：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> sklearn.datasets <span class="keyword">import</span> load_iris</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">from</span> math <span class="keyword">import</span> sqrt</span><br><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> Counter</span><br><span class="line">test_num = <span class="number">75</span>  <span class="comment"># 测试数据个数</span></span><br><span class="line"><span class="comment"># 源数据的产生(加载sklearn鸢尾花数据集)</span></span><br><span class="line">datas = load_iris()</span><br><span class="line"><span class="comment"># 使用切片获取150组鸢尾花数据(datas['data']为data key 值对应数据，即鸢尾花花瓣花萼数据)</span></span><br><span class="line">raw_data_x = datas[<span class="string">'data'</span>][<span class="number">0</span>:<span class="number">150</span>]</span><br><span class="line"><span class="comment"># 表示鸢尾花的类别（K-NN算法处理基于监督学习的分类问题）</span></span><br><span class="line"><span class="comment"># 0表示setosa类 ，1 表示versicolor类 ，2表示virginica 类</span></span><br><span class="line">raw_data_y = datas[<span class="string">'target'</span>][<span class="number">0</span>:<span class="number">150</span>]</span><br><span class="line"><span class="comment"># 产生训练集（源数据的百分之50）</span></span><br><span class="line">x_Train = raw_data_x[<span class="number">0</span>:<span class="number">150</span>:<span class="number">2</span>]</span><br><span class="line">y_Train = raw_data_y[<span class="number">0</span>:<span class="number">150</span>:<span class="number">2</span>]</span><br><span class="line"><span class="comment"># 产生测试集（源数据的百分之50）</span></span><br><span class="line">x_Test = raw_data_x[<span class="number">1</span>:<span class="number">150</span>:<span class="number">2</span>]</span><br><span class="line">y_Test = raw_data_y[<span class="number">1</span>:<span class="number">150</span>:<span class="number">2</span>]</span><br><span class="line"></span><br><span class="line">print(raw_data_x)</span><br><span class="line">print(raw_data_y)</span><br><span class="line"></span><br><span class="line">plt.scatter(x_Train[y_Train == <span class="number">0</span>, <span class="number">0</span>], x_Train[y_Train == <span class="number">0</span>, <span class="number">1</span>], color=<span class="string">'b'</span>, label=<span class="string">"feature 0"</span>)</span><br><span class="line">plt.scatter(x_Train[y_Train == <span class="number">1</span>, <span class="number">0</span>], x_Train[y_Train == <span class="number">1</span>, <span class="number">1</span>], color=<span class="string">'r'</span>, label=<span class="string">"feature 1"</span>)</span><br><span class="line">plt.scatter(x_Train[y_Train == <span class="number">2</span>, <span class="number">0</span>], x_Train[y_Train == <span class="number">2</span>, <span class="number">1</span>], color=<span class="string">'yellow'</span>, label=<span class="string">"feature 2"</span>)</span><br><span class="line">plt.title(<span class="string">"train-data-view"</span>)</span><br><span class="line">plt.xlabel(<span class="string">"x axis"</span>)</span><br><span class="line">plt.ylabel(<span class="string">"y axis"</span>)</span><br><span class="line">plt.show()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 增加一个新的点</span></span><br><span class="line">x = np.array([<span class="number">4.0915321615</span>, <span class="number">3.4651321653</span>, <span class="number">1.48654954531</span>, <span class="number">0.46365316316</span>])</span><br><span class="line"><span class="comment"># 绘制新增点的数据散点图并判断其是0 or 1  or  2</span></span><br><span class="line">plt.scatter(x_Train[y_Train == <span class="number">0</span>, <span class="number">0</span>], x_Train[y_Train == <span class="number">0</span>, <span class="number">1</span>], color=<span class="string">'b'</span>, label=<span class="string">"feature 0"</span>)</span><br><span class="line">plt.scatter(x_Train[y_Train == <span class="number">1</span>, <span class="number">0</span>], x_Train[y_Train == <span class="number">1</span>, <span class="number">1</span>], color=<span class="string">'r'</span>, label=<span class="string">"feature 1"</span>)</span><br><span class="line">plt.scatter(x_Train[y_Train == <span class="number">2</span>, <span class="number">0</span>], x_Train[y_Train == <span class="number">2</span>, <span class="number">1</span>], color=<span class="string">'yellow'</span>, label=<span class="string">"feature 2"</span>)</span><br><span class="line">plt.scatter(x[<span class="number">0</span>], x[<span class="number">1</span>], color=<span class="string">'black'</span>, label=<span class="string">"symbol ?"</span>)  <span class="comment"># 将新增点绘制成黑色</span></span><br><span class="line">plt.title(<span class="string">"k-NN (one point view)"</span>)</span><br><span class="line">plt.xlabel(<span class="string">"x axis"</span>)</span><br><span class="line">plt.ylabel(<span class="string">"y axis"</span>)</span><br><span class="line">plt.legend()</span><br><span class="line">plt.show()</span><br><span class="line"><span class="comment">#新点knn</span></span><br><span class="line">distances = []</span><br><span class="line"><span class="keyword">for</span> X_train <span class="keyword">in</span> x_Train:</span><br><span class="line"></span><br><span class="line">    d = sqrt(np.sum((X_train - x) ** <span class="number">2</span>))</span><br><span class="line">    distances.append(d)</span><br><span class="line"></span><br><span class="line">nearest = np.argsort(distances)</span><br><span class="line">k = int(input(<span class="string">"请输入k值  "</span>))</span><br><span class="line">topK_y = [y_Train[i] <span class="keyword">for</span> i <span class="keyword">in</span> nearest[:k]]</span><br><span class="line">print(<span class="string">"KNN 计算距离列表"</span>+str(topK_y))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">votes = Counter(topK_y)</span><br><span class="line">predict_y = votes.most_common(<span class="number">1</span>)[<span class="number">0</span>][<span class="number">0</span>]</span><br><span class="line">print(<span class="string">"新增点预测数值为："</span>+str(predict_y))</span><br><span class="line"><span class="keyword">if</span> predict_y==<span class="number">0</span>:</span><br><span class="line">    print(<span class="string">"新增点预测结果为：setosa"</span>)</span><br><span class="line"><span class="keyword">elif</span> predict_y==<span class="number">1</span>:</span><br><span class="line">    print(<span class="string">"新增点预测结果为：versicolor"</span>)</span><br><span class="line"><span class="keyword">elif</span> predict_y==<span class="number">2</span>:</span><br><span class="line">    print(<span class="string">"新增点预测结果为：virginica"</span>)</span><br><span class="line">counter = <span class="number">0</span></span><br><span class="line">pre = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> select <span class="keyword">in</span> x_Test:</span><br><span class="line">    Distance = []</span><br><span class="line">    <span class="keyword">for</span> x_pre <span class="keyword">in</span> x_Train:</span><br><span class="line">        d_t = sqrt(np.sum((x_pre-select) ** <span class="number">2</span>))</span><br><span class="line">        Distance.append(d_t)</span><br><span class="line"></span><br><span class="line">    near = np.argsort(Distance)</span><br><span class="line">    topK_y = [y_Train[i] <span class="keyword">for</span> i <span class="keyword">in</span> near[:k]]</span><br><span class="line">    votes = Counter(topK_y)</span><br><span class="line">    result = votes.most_common(<span class="number">1</span>)[<span class="number">0</span>][<span class="number">0</span>]</span><br><span class="line">    <span class="keyword">if</span> y_Test[pre] == result:</span><br><span class="line">        counter = counter + <span class="number">1</span></span><br><span class="line">        pre = pre + <span class="number">1</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        pre = pre + <span class="number">1</span></span><br><span class="line">score = counter / test_num</span><br><span class="line">print(<span class="string">"测试精度为"</span>+str(score))  <span class="comment">#输出测试精度</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>机器学习</category>
      </categories>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>最大公约数算法比较</title>
    <url>/2020/03/04/C%E8%AF%AD%E8%A8%80%E5%AE%9E%E7%8E%B0%E6%9C%80%E5%A4%A7%E5%85%AC%E7%BA%A6%E6%95%B0%E7%AE%97%E6%B3%95%E6%97%B6%E9%97%B4%E6%80%A7%E8%83%BD%E6%AF%94%E8%BE%83/</url>
    <content><![CDATA[<h2 id="最大公约数算法比较"><a href="#最大公约数算法比较" class="headerlink" title="最大公约数算法比较"></a>最大公约数算法比较</h2><h5 id="edit-time-2019-03-07"><a href="#edit-time-2019-03-07" class="headerlink" title="edit time:2019 03 07"></a>edit time:2019 03 07</h5><h3 id="一-代码编写目的"><a href="#一-代码编写目的" class="headerlink" title="一.代码编写目的"></a>一.代码编写目的</h3><p>1明确算法的概念和特点。<br>2通过对问题的分析，设计合理的算法解决问题</p>
<h3 id="二-代码内容"><a href="#二-代码内容" class="headerlink" title="二.代码内容"></a>二.代码内容</h3><p>运行最大公约数的常用算法，并进行程序的调式与测试，要求程序设计风格良好，并添加异常处理模块（如输入非法等）</p>
<h3 id="三-分析"><a href="#三-分析" class="headerlink" title="三.分析"></a>三.分析</h3><p>通过对最大公约数四种算法的编程实现，以多组随机数作为测试数据，测试相同功能代码在大数据输入情况下不同算法的时间效率，从而比较这四种算法的优劣性。同时在代码实现过程中了解自己写代码时算法优劣的重要性，思考如何提升代码效率及实现效果。</p>
<h3 id="四-算法构造"><a href="#四-算法构造" class="headerlink" title="四.算法构造"></a>四.算法构造</h3><h4 id="1-辗转相除"><a href="#1-辗转相除" class="headerlink" title="1.    辗转相除"></a>1.    辗转相除</h4><p>设两数为a,b设其中a 做被除数,b做除数，temp为余数1、大数放a中、小数放b中；<br>求a/b的余数；<br>若temp=0则b为最大公约数；<br>如果temp!=0则把b的值给a、temp的值给a；<br>返回第二步<br><img src="https://img-blog.csdnimg.cn/20190307230509663.png" alt="在这里插入图片描述">)<img src="https://img-blog.csdnimg.cn/20190307230453483.png" alt="在这里插入图片描述"></p>
<h4 id="2-穷举法"><a href="#2-穷举法" class="headerlink" title="2.    穷举法"></a>2.    穷举法</h4><p>对两个正整数a,b如果能在区间[a,0]或[b,0]内能找到一个整数temp能同时被a和b所整除，则temp即为最大公约数。<br><img src="https://img-blog.csdnimg.cn/2019030723063174.png" alt="在这里插入图片描述">)<img src="https://img-blog.csdnimg.cn/20190307230644909.png" alt="在这里插入图片描述"></p>
<h4 id="3-更相减损术"><a href="#3-更相减损术" class="headerlink" title="3.    更相减损术"></a>3.    更相减损术</h4><p>第一步：任意给定两个正整数；判断它们是否都是偶数。若是，则用2约简；若不是则执行第二步。<br>第二步：以较大的数减较小的数，接着把所得的差与较小的数比较，并以大数减小数。继续这个操作，直到所得的减数和差相等为止。<br>则第一步中约掉的若干个2与第二步中等数的乘积就是所求的最大公约数。<br><img src="https://img-blog.csdnimg.cn/2019030723073624.png" alt="在这里插入图片描述">)<img src="https://img-blog.csdnimg.cn/20190307230749885.png" alt="在这里插入图片描述"></p>
<h4 id="4-stein"><a href="#4-stein" class="headerlink" title="4.    stein"></a>4.    stein</h4><p>如果An=Bn,那么An(或Bn)<em>Cn是最大公约数,算法结束<br>如果An=0，Bn是最大公约数，算法结束<br>如果Bn=0，An是最大公约数，算法结束<br>设置A1=A、B1=B和C1=1<br>如果An和Bn都是偶数，则An+1=An/2，Bn+1=Bn/2，Cn+1=Cn</em>2(注意，乘2只要把整数左移一位即可，除2只要把整数右移一位即可)<br>如果An是偶数，Bn不是偶数，则An+1=An/2，Bn+1=Bn，Cn+1=Cn(很显然啦，2不是奇数的约数)<br>如果Bn是偶数，An不是偶数，则Bn+1=Bn/2，An+1=An，Cn+1=Cn(很显然啦，2不是奇数的约数)<br>如果An和Bn都不是偶数，则An+1=|An-Bn|/2，Bn+1=min(An,Bn)，Cn+1=Cn<br>n加1，转1<br><img src="https://img-blog.csdnimg.cn/20190307230854108.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20190307230910121.png" alt="在这里插入图片描述"></p>
<h3 id="五．-算法实现"><a href="#五．-算法实现" class="headerlink" title="五．    算法实现"></a>五．    算法实现</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">*auther:@却水</span></span><br><span class="line"><span class="comment">*edit time:2019-03-07</span></span><br><span class="line"><span class="comment">*@xi'an University of science &amp; technology</span></span><br><span class="line"><span class="comment">*@Software engineering 1703 17408070828</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;time.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 5000</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="comment">//辗转相除法嵌套调用</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">divisor</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span><span class="comment">//最大公约数</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">int</span> temp;</span><br><span class="line">	<span class="keyword">if</span>(a&gt;b)</span><br><span class="line">	&#123;</span><br><span class="line">		temp=a;a=b;b=temp;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">while</span>(b!=<span class="number">0</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		temp=a%b;</span><br><span class="line">		a=b;</span><br><span class="line">		b=temp;</span><br><span class="line">	&#125;</span><br><span class="line">   </span><br><span class="line">	<span class="keyword">return</span> (a);  </span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">multiple</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span><span class="comment">//最小公倍数</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">int</span> <span class="title">divisor</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>;</span><br><span class="line">		<span class="keyword">int</span> temp;</span><br><span class="line">	temp=divisor(a,b);</span><br><span class="line">	<span class="keyword">return</span>(a*b/temp);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">gcd</span> <span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span><span class="comment">//递归调用</span></span></span><br><span class="line"><span class="function">   </span></span><br><span class="line"><span class="function">	</span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(a%b==<span class="number">0</span>)</span><br><span class="line">		<span class="keyword">return</span> b;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">		<span class="keyword">return</span> gcd(b,a%b);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//穷举法</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">divisor1</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line">	<span class="keyword">int</span> temp;</span><br><span class="line">	temp=(a&gt;b)?b:a;</span><br><span class="line">	<span class="keyword">while</span>(temp&gt;<span class="number">0</span>)</span><br><span class="line">	&#123;<span class="keyword">if</span>(b%temp==<span class="number">0</span>&amp;&amp;a%temp==<span class="number">0</span>)</span><br><span class="line">		<span class="keyword">break</span>;</span><br><span class="line">	temp--;</span><br><span class="line">	&#125; </span><br><span class="line">	</span><br><span class="line"><span class="keyword">return</span>(temp);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">multiple1</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> p,q,temp;</span><br><span class="line">	p=(a&gt;b)?a:b;<span class="comment">//较大值</span></span><br><span class="line">	q=(a&gt;b)?b:a;<span class="comment">//较小值</span></span><br><span class="line">	temp=p;</span><br><span class="line">	<span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span>(p%q==<span class="number">0</span>)</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		p+=temp;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line"><span class="keyword">return</span> p;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//更相减损术</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">gcd1</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> i=<span class="number">0</span>,temp,x;</span><br><span class="line">	<span class="keyword">while</span>(a%<span class="number">2</span>==<span class="number">0</span>&amp;&amp;b%<span class="number">2</span>==<span class="number">0</span>)<span class="comment">//两数都是偶数</span></span><br><span class="line">	&#123;a/=<span class="number">2</span>;</span><br><span class="line">	b/=<span class="number">2</span>;</span><br><span class="line">	i++;<span class="comment">//计算共有几个2</span></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span>(a&lt;b)</span><br><span class="line">	&#123;</span><br><span class="line">		temp=a;</span><br><span class="line">		a=b;</span><br><span class="line">		b=temp;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">while</span>(x)</span><br><span class="line">	&#123;</span><br><span class="line">		x=a-b;</span><br><span class="line">		a=(b&gt;x)?b:x;</span><br><span class="line">		b=(b&lt;x)?b:x;</span><br><span class="line">		<span class="keyword">if</span>(b==(a-b))</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span>(i=<span class="number">0</span>)</span><br><span class="line">		<span class="keyword">return</span> b;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">		<span class="keyword">return</span> (<span class="keyword">int</span>)<span class="built_in">pow</span>(<span class="number">2</span>,i)*b;<span class="comment">//计算更相减损后的乘积</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//stein</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Stein</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">int</span> x,<span class="keyword">unsigned</span> <span class="keyword">int</span> y)</span><span class="comment">//返回a,b中的最大公约数</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="comment">/* return the greatest common divisor of x and y */</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> factor = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">int</span> temp;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> ( x &lt; y )</span><br><span class="line">&#123;</span><br><span class="line">     temp = x;</span><br><span class="line">     x = y;</span><br><span class="line">     y = temp;                      </span><br><span class="line"> &#125;                  </span><br><span class="line">  <span class="keyword">if</span> ( <span class="number">0</span> == y )    </span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;            </span><br><span class="line">   &#125;         </span><br><span class="line">   <span class="keyword">while</span> ( x != y )     </span><br><span class="line">   &#123;     </span><br><span class="line">    <span class="keyword">if</span> ( x &amp; <span class="number">0x1</span> )            </span><br><span class="line">  &#123;<span class="comment">//x为偶数              </span></span><br><span class="line">     <span class="keyword">if</span> ( y &amp; <span class="number">0x1</span> )                   </span><br><span class="line">    &#123;<span class="comment">/* when x and y are both odd */</span>                    </span><br><span class="line">        y = ( x - y ) &gt;&gt; <span class="number">1</span>;                        </span><br><span class="line">          x -= y;                      </span><br><span class="line">   &#125;                     </span><br><span class="line">    <span class="keyword">else</span>                    </span><br><span class="line"> &#123;<span class="comment">/* X为偶数y为奇数 */</span>                       </span><br><span class="line">y &gt;&gt;= <span class="number">1</span>;                                </span><br><span class="line">       &#125;                 </span><br><span class="line">    &#125;            </span><br><span class="line">    <span class="keyword">else</span>             </span><br><span class="line">  &#123;<span class="comment">/* x为奇数 */</span>              </span><br><span class="line">    <span class="keyword">if</span> ( y &amp; <span class="number">0x1</span> )                    </span><br><span class="line">  &#123;<span class="comment">/* x为奇数y为偶数 */</span>                      </span><br><span class="line">   x &gt;&gt;= <span class="number">1</span>;                             </span><br><span class="line">   <span class="keyword">if</span> ( x &lt; y )                             </span><br><span class="line">   &#123;                             </span><br><span class="line">     temp = x;                                   </span><br><span class="line">      x = y;                                  </span><br><span class="line">       y = temp;                                 </span><br><span class="line">     &#125;                           </span><br><span class="line">      &#125;                  </span><br><span class="line">   <span class="keyword">else</span>                     </span><br><span class="line">&#123;<span class="comment">/* when x and y are both even */</span>                        </span><br><span class="line"> x &gt;&gt;= <span class="number">1</span>;                               </span><br><span class="line">  y &gt;&gt;= <span class="number">1</span>;                              </span><br><span class="line">  ++factor;                              </span><br><span class="line">      &#125;                  </span><br><span class="line">    &#125;            </span><br><span class="line">&#125;        </span><br><span class="line"><span class="keyword">return</span> ( x &lt;&lt; factor );        </span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">gcd_run</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> v)</span><span class="comment">//stein递归</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (u == <span class="number">0</span>) <span class="keyword">return</span> v;</span><br><span class="line">    <span class="keyword">if</span> (v == <span class="number">0</span>) <span class="keyword">return</span> u;</span><br><span class="line">    <span class="comment">// look for factors of 2</span></span><br><span class="line">    <span class="keyword">if</span> (~u &amp; <span class="number">1</span>) <span class="comment">// u is even</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (v &amp; <span class="number">1</span>) <span class="comment">// v is odd</span></span><br><span class="line">            <span class="keyword">return</span> gcd(u &gt;&gt; <span class="number">1</span>, v);</span><br><span class="line">        <span class="keyword">else</span> <span class="comment">// both u and v are even</span></span><br><span class="line">            <span class="keyword">return</span> gcd(u &gt;&gt; <span class="number">1</span>, v &gt;&gt; <span class="number">1</span>) &lt;&lt; <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">     <span class="keyword">if</span> (~v &amp; <span class="number">1</span>) <span class="comment">// u is odd, v is even</span></span><br><span class="line">        <span class="keyword">return</span> gcd(u, v &gt;&gt; <span class="number">1</span>);</span><br><span class="line">     <span class="comment">// reduce larger argument</span></span><br><span class="line">    <span class="keyword">if</span> (u &gt; v)</span><br><span class="line">        <span class="keyword">return</span> gcd((u - v) &gt;&gt; <span class="number">1</span>, v);</span><br><span class="line">     <span class="keyword">return</span> gcd((v - u) &gt;&gt; <span class="number">1</span>, u);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i,a;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"请输入测试数据组数"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">数据异常处理</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">    <span class="keyword">int</span> ret;</span><br><span class="line">    ret = <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a);</span><br><span class="line">    <span class="keyword">while</span> (ret != <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">while</span> (getchar() != <span class="string">'\n'</span>);</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"error input,please again.\n"</span>);</span><br><span class="line">        ret = <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a);</span><br><span class="line">    &#125;<span class="comment">//直到输入的值为整数</span></span><br><span class="line">	 </span><br><span class="line"><span class="keyword">int</span> arr[N] ;</span><br><span class="line">srand((<span class="keyword">unsigned</span>)time(<span class="literal">NULL</span>));<span class="comment">//调用time函数来获取随机数</span></span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i&lt; N; i++)</span><br><span class="line">&#123;</span><br><span class="line">arr[i] = rand(); <span class="comment">//随机数组</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;<span class="built_in">cout</span>&lt;&lt;<span class="string">"                       检验数据是否随机"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"                        ********"</span>&lt;&lt;arr[i]&lt;&lt;<span class="string">"********"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//计时函数</span></span><br><span class="line">    <span class="keyword">double</span> time=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">double</span> counts=<span class="number">0</span>;</span><br><span class="line">    LARGE_INTEGER nFreq;</span><br><span class="line">	LARGE_INTEGER nBeginTime;</span><br><span class="line">	LARGE_INTEGER nEndTime;</span><br><span class="line">	QueryPerformanceFrequency(&amp;nFreq);</span><br><span class="line"></span><br><span class="line">QueryPerformanceCounter(&amp;nBeginTime);</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">2</span>*a;i++)&#123;</span><br><span class="line">divisor(arr[i],arr[i+<span class="number">2</span>]);<span class="comment">//调用辗转相除法函数</span></span><br><span class="line">&#125;</span><br><span class="line">QueryPerformanceCounter(&amp;nEndTime);<span class="comment">//停止计时</span></span><br><span class="line">time=(<span class="keyword">double</span>)(nEndTime.QuadPart-nBeginTime.QuadPart)/(<span class="keyword">double</span>)nFreq.QuadPart;<span class="comment">//计算程序执行时间单位为s</span></span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"辗转相除法(非递归)时间为："</span>&lt;&lt;time*<span class="number">1000</span>&lt;&lt;<span class="string">"ms"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">QueryPerformanceCounter(&amp;nBeginTime);</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">2</span>*a;i++)</span><br><span class="line">&#123;</span><br><span class="line">gcd(arr[i],arr[i+<span class="number">2</span>]);<span class="comment">//辗转相除递归调用</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">QueryPerformanceCounter(&amp;nEndTime);<span class="comment">//停止计时</span></span><br><span class="line">time=(<span class="keyword">double</span>)(nEndTime.QuadPart-nBeginTime.QuadPart)/(<span class="keyword">double</span>)nFreq.QuadPart;<span class="comment">//计算程序执行时间单位为s</span></span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"辗转相除法(递归)时间为："</span>&lt;&lt;time*<span class="number">1000</span>&lt;&lt;<span class="string">"ms"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">QueryPerformanceCounter(&amp;nBeginTime);</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">2</span>*a;i++)</span><br><span class="line">&#123;</span><br><span class="line">divisor1(arr[i],arr[i+<span class="number">2</span>]);<span class="comment">//穷举法函数调用QueryPerformanceCounter(&amp;nEndTime);//停止计时</span></span><br><span class="line"></span><br><span class="line">&#125;time=(<span class="keyword">double</span>)(nEndTime.QuadPart-nBeginTime.QuadPart)/(<span class="keyword">double</span>)nFreq.QuadPart;<span class="comment">//计算程序执行时间单位为s</span></span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"穷举法时间为："</span>&lt;&lt;(-time*<span class="number">1000</span>)&lt;&lt;<span class="string">"ms"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">QueryPerformanceCounter(&amp;nBeginTime);</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">2</span>*a;i++)</span><br><span class="line">&#123;</span><br><span class="line">	gcd1(arr[i],arr[i+<span class="number">2</span>]);<span class="comment">//更相减损术算法</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">QueryPerformanceCounter(&amp;nEndTime);<span class="comment">//停止计时</span></span><br><span class="line">time=(<span class="keyword">double</span>)(nEndTime.QuadPart-nBeginTime.QuadPart)/(<span class="keyword">double</span>)nFreq.QuadPart;<span class="comment">//计算程序执行时间单位为s</span></span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"更相减损术算法时间为："</span>&lt;&lt;time*<span class="number">1000</span>&lt;&lt;<span class="string">"ms"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">QueryPerformanceCounter(&amp;nBeginTime);</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">2</span>*a;i++)</span><br><span class="line">&#123;</span><br><span class="line">Stein(arr[i],arr[i+<span class="number">2</span>]);<span class="comment">//Stein</span></span><br><span class="line">&#125;</span><br><span class="line">QueryPerformanceCounter(&amp;nEndTime);<span class="comment">//停止计时</span></span><br><span class="line">time=(<span class="keyword">double</span>)(nEndTime.QuadPart-nBeginTime.QuadPart)/(<span class="keyword">double</span>)nFreq.QuadPart;<span class="comment">//计算程序执行时间单位为s</span></span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"Stein算法时间为："</span>&lt;&lt;time*<span class="number">1000</span>&lt;&lt;<span class="string">"ms"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">QueryPerformanceCounter(&amp;nBeginTime);</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">2</span>*a;i++)</span><br><span class="line">&#123;i+=<span class="number">1</span>;gcd_run(arr[i],arr[i+<span class="number">2</span>]);<span class="comment">//Stein递归调用</span></span><br><span class="line">&#125;</span><br><span class="line">QueryPerformanceCounter(&amp;nEndTime);<span class="comment">//停止计时</span></span><br><span class="line">time=(<span class="keyword">double</span>)(nEndTime.QuadPart-nBeginTime.QuadPart)/(<span class="keyword">double</span>)nFreq.QuadPart;<span class="comment">//计算程序执行时间单位为s</span></span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"Stein（递归）时间为："</span>&lt;&lt;time*<span class="number">1000</span>&lt;&lt;<span class="string">"ms"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="七．-个人经验总结"><a href="#七．-个人经验总结" class="headerlink" title="七．    个人经验总结"></a>七．    个人经验总结</h3><p>   本次实验立足算法的代码实现，侧重于编程及算法构造能力，通过对算法时间的统计，清晰明了看到解决相同问题时不同算法的时间效率，为自己写程序使用最优代码时刻提醒。<br>收获：熟悉了C语言随机数生成机制及函数调用方法掌握了时间计算的三种函数，如头文件#include&lt;time.h&gt;下的clock函数#include&lt;windows.h&gt;下的gettimeofday(&amp;start, NULL)和QueryPerformanceCounter(&amp;nEndTime)<br>函数。在随机数生成方面因为以前做课设时不够认真掌握不足，所以在本次程序设计中花费了不少功夫，时间。虽然花费了时间但是收获很大，补上了前面应该学却没学到的东西。在异常处理方面了解到了scanf()返回值的特性，并利用了其函数特性实现了非整数输入的排错功能。<br>    不足之处及改进：冰冻三尺非一日之寒，以前下的功夫不够，以至于编程实践能力欠缺，以后要抓住这样的机会锻炼自己的代码能力及算法设计能力。另外，程序设计方面封装性差，要多学习优秀代码，养成好的编程风格。</p>
]]></content>
      <categories>
        <category>C s hert</category>
      </categories>
      <tags>
        <tag>C</tag>
      </tags>
  </entry>
  <entry>
    <title>三天打鱼两天晒网</title>
    <url>/2020/03/04/%E4%B8%89%E5%A4%A9%E6%89%93%E9%B1%BC%E4%B8%A4%E5%A4%A9%E6%99%92%E7%BD%91%E2%80%94C++%E5%AE%9E%E7%8E%B0/</url>
    <content><![CDATA[<h2 id="题目背景"><a href="#题目背景" class="headerlink" title="题目背景"></a>题目背景</h2><p>中国有句俗语叫“三天打鱼两天晒网”。某人从2010年1月1日起开始“三天打鱼两天晒网”，问这个人在以后的某一天中是“打鱼”还是“晒网”。用C或C++语言/java/python实现程序解决问题。</p>
<h3 id="基本要求及提高要求"><a href="#基本要求及提高要求" class="headerlink" title="基本要求及提高要求"></a>基本要求及提高要求</h3><p><strong>基本要求：</strong><br>1.程序风格良好(使用自定义注释模板)，提供友好的输入输出。<br><strong>提高要求：</strong><br>1.输入数据的正确性验证。<br>2.使用文件进行数据测试。如将日期 20100101 20111214  等数据保存在 in.txt文件中，程序读入in.dat文件进行判定，并将结果输出至 out.txt文件。</p>
<h4 id="代码编写语言"><a href="#代码编写语言" class="headerlink" title="代码编写语言"></a>代码编写语言</h4><p><em>C++</em></p>
<h4 id="代码设计思想"><a href="#代码设计思想" class="headerlink" title="代码设计思想"></a>代码设计思想</h4><p>1.建立主类，初始化数据元素<br>2.通过Deal_key函数实现日期的输入与正确性判断<br>3.函数sumdays()实现输入日期到2010-1-1的天数计算<br>4.display()函数判断变量days_5的取值来确定工作状态<br>5.file()函数通过文件流操作实现文件内数值的读入及处理</p>
<h4 id="具体功能实现（代码片段）"><a href="#具体功能实现（代码片段）" class="headerlink" title="具体功能实现（代码片段）"></a>具体功能实现（代码片段）</h4><h5 id="1-数据输入及判断正误"><a href="#1-数据输入及判断正误" class="headerlink" title="1.数据输入及判断正误"></a>1.数据输入及判断正误</h5><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Date_fish::Deal_key</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"请输入年"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;year;</span><br><span class="line">      <span class="comment">//判断输入的年，月，日是否在规定的范围</span></span><br><span class="line">   <span class="keyword">if</span> (year&lt;<span class="number">2010</span>||year&gt;<span class="number">2019</span>) <span class="comment">//判断年</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"年份输入错误，请输入2010-2019范围的年份（包含2010和2019)"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        </span><br><span class="line">		<span class="built_in">cin</span>&gt;&gt;year;</span><br><span class="line">    &#125; </span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"请输入月"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt;month;</span><br><span class="line">     <span class="keyword">if</span>(month&lt;=<span class="number">0</span>||month&gt;<span class="number">12</span>) <span class="comment">//判断月</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"月份输入错误，请输入1-12范围的月份（包含1和12)"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;month;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">	 </span><br><span class="line">	 <span class="built_in">cout</span>&lt;&lt;<span class="string">"请输入日"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;day;</span><br><span class="line"></span><br><span class="line"> <span class="keyword">if</span>(month==<span class="number">1</span>||month==<span class="number">3</span>||month==<span class="number">5</span>||month==<span class="number">7</span>||month==<span class="number">8</span>||month==<span class="number">10</span>||month==<span class="number">12</span>)<span class="comment">//判断日  </span></span><br><span class="line"> &#123;</span><br><span class="line">	 <span class="keyword">if</span>(day&gt;<span class="number">31</span>||day&lt;=<span class="number">0</span>)<span class="comment">//判断大月</span></span><br><span class="line">	 &#123;<span class="built_in">cout</span>&lt;&lt;<span class="string">"天数输入错误，请输入改后的正常天数"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">	 <span class="built_in">cin</span>&gt;&gt;day;</span><br><span class="line">	 &#125;</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">else</span> <span class="keyword">if</span>(month!=<span class="number">2</span>)<span class="comment">//判断小月</span></span><br><span class="line">	 <span class="keyword">if</span>(day&gt;<span class="number">30</span>||day&lt;=<span class="number">0</span>)</span><br><span class="line">	 &#123;&#123;<span class="built_in">cout</span>&lt;&lt;<span class="string">"您输入的日期有误，请重新输入"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">	 <span class="built_in">cin</span>&gt;&gt;day;&#125;</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">else</span> <span class="keyword">if</span>(((year%<span class="number">4</span>==<span class="number">0</span>&amp;&amp;year%<span class="number">100</span>!=<span class="number">0</span>)||year%<span class="number">400</span>==<span class="number">0</span>))<span class="comment">//判断闰年2月</span></span><br><span class="line"> &#123;</span><br><span class="line">	 <span class="keyword">if</span>(day&gt;<span class="number">29</span>||day&lt;=<span class="number">0</span>)</span><br><span class="line">	 &#123;<span class="built_in">cout</span>&lt;&lt;<span class="string">"您输入的日期有误，请重新输入"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">	  <span class="built_in">cin</span>&gt;&gt;day;</span><br><span class="line">	 &#125;</span><br><span class="line"></span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">else</span></span><br><span class="line"> &#123;</span><br><span class="line">	 <span class="keyword">if</span>(day&gt;<span class="number">28</span>||day&lt;=<span class="number">0</span>)</span><br><span class="line">	 &#123;<span class="built_in">cout</span>&lt;&lt;<span class="string">"您输入的日期有误，请重新输入"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">	 <span class="built_in">cin</span>&gt;&gt;day;&#125;</span><br><span class="line">	 <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h5 id="2-距离指定日期的天数计算"><a href="#2-距离指定日期的天数计算" class="headerlink" title="2.距离指定日期的天数计算"></a>2.距离指定日期的天数计算</h5><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Date_fish::sumdays</span><span class="params">()</span> <span class="comment">//判断平闰年函数并计算天数</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> YEAR_0=<span class="number">2010</span>; <span class="comment">//定义初始变量YEAR_0为2010</span></span><br><span class="line">    <span class="keyword">for</span> (YEAR_0;YEAR_0&lt;year;YEAR_0++) <span class="comment">//距当前年份几年，循环几次</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>((year%<span class="number">400</span>==<span class="number">0</span>)||(year%<span class="number">4</span>==<span class="number">0</span>&amp;&amp;year%<span class="number">100</span>!=<span class="number">0</span>)) <span class="comment">//当前年份为闰年，||前为世纪年判断，||后为普通年</span></span><br><span class="line">        &#123;</span><br><span class="line">            sum+=<span class="number">366</span>;<span class="comment">//闰年，总天数加366天</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span><span class="comment">//为平年</span></span><br><span class="line">        &#123;</span><br><span class="line">            sum+=<span class="number">365</span>; <span class="comment">//平年，总天数加365天</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;month<span class="number">-1</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">		<span class="keyword">if</span>((year%<span class="number">400</span>==<span class="number">0</span>)||(year%<span class="number">4</span>==<span class="number">0</span>&amp;&amp;year%<span class="number">100</span>!=<span class="number">0</span>))</span><br><span class="line">        sum+=special_month_day[i]; <span class="comment">//加当前月份的天数</span></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">		sum+=normal_month_day[i];</span><br><span class="line">    &#125;</span><br><span class="line">    sum+=day; <span class="comment">//总天数</span></span><br><span class="line">	<span class="built_in">cout</span>&lt;&lt;<span class="string">"到2010-01-01的总天数为："</span>;</span><br><span class="line">	<span class="built_in">cout</span>&lt;&lt;sum&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    days_5=sum%<span class="number">5</span>;<span class="comment">//除5取余</span></span><br><span class="line">    sum=<span class="number">0</span>;<span class="comment">//初始化</span></span><br><span class="line">   <span class="comment">//return days_5;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h5 id="3-输入日期工作状态判断"><a href="#3-输入日期工作状态判断" class="headerlink" title="3.输入日期工作状态判断"></a>3.输入日期工作状态判断</h5><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Date_fish::display</span><span class="params">()</span></span></span><br><span class="line"><span class="function"> </span>&#123;</span><br><span class="line">	  </span><br><span class="line">	<span class="keyword">if</span> (days_5&gt;=<span class="number">1</span>&amp;&amp;days_5&lt;<span class="number">4</span>)<span class="comment">//余数1,2,3</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//余数1,2,3打鱼</span></span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"这天在打鱼"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//晒网</span></span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"这天在晒网"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">   <span class="comment">//return days_5;</span></span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure>
<h5 id="4-文件操作"><a href="#4-文件操作" class="headerlink" title="4.文件操作"></a>4.文件操作</h5><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Date_fish::file</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span>&#123;<span class="keyword">int</span> a[<span class="number">3</span>];<span class="comment">//数组实现txt文档中三个值的传回 </span></span><br><span class="line"><span class="function">ifstream <span class="title">infile</span><span class="params">(<span class="string">"in.txt"</span>,ios::in)</span></span>;</span><br><span class="line"><span class="keyword">if</span>(!infile)</span><br><span class="line">&#123;<span class="built_in">cerr</span>&lt;&lt;<span class="string">"open in.txt error!"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line">infile&gt;&gt;a[<span class="number">0</span>]&gt;&gt;a[<span class="number">1</span>]&gt;&gt;a[<span class="number">2</span>];</span><br><span class="line">year=a[<span class="number">0</span>]; month=a[<span class="number">1</span>]; day=a[<span class="number">2</span>];</span><br><span class="line"></span><br><span class="line">sumdays();<span class="comment">//接收计算后的days_5</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="function">ofstream <span class="title">outfile</span><span class="params">(<span class="string">"out.txt"</span>,ios::out)</span></span>;</span><br><span class="line"></span><br><span class="line">&#123;<span class="keyword">if</span> (days_5&gt;<span class="number">0</span>&amp;&amp;days_5&lt;<span class="number">4</span>)</span><br><span class="line">   &#123;</span><br><span class="line">        outfile&lt;&lt;year&lt;&lt;<span class="string">"."</span>&lt;&lt;month&lt;&lt;<span class="string">"."</span>&lt;&lt;day&lt;&lt;<span class="string">"该天打鱼"</span>&lt;&lt;<span class="built_in">endl</span>; <span class="comment">//余数为1或2或3，将打鱼的信息写入out文件中</span></span><br><span class="line">   &#125; </span><br><span class="line">   <span class="keyword">else</span></span><br><span class="line">   &#123;</span><br><span class="line">        outfile&lt;&lt;year&lt;&lt;<span class="string">"."</span>&lt;&lt;month&lt;&lt;<span class="string">"."</span>&lt;&lt;day&lt;&lt;<span class="string">"该天晒网"</span>&lt;&lt;<span class="built_in">endl</span>;<span class="comment">//余数为0或4，将晒网的信息写入out文件中</span></span><br><span class="line"></span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line">   <span class="comment">//关闭文件</span></span><br><span class="line">   infile.<span class="built_in">close</span>(); </span><br><span class="line">   outfile.<span class="built_in">close</span>();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="文件操作解释说明"><a href="#文件操作解释说明" class="headerlink" title="**文件操作解释说明"></a>**文件操作解释说明</h4><p>为方便使用.txt文档中保存的输入数据，分别将“year”,“month”,“day”放在一个数组中，以空格隔开，达到为程序写入数值的功能。</p>
<h4 id="详细代码（可编译执行）"><a href="#详细代码（可编译执行）" class="headerlink" title="详细代码（可编译执行）"></a>详细代码（可编译执行）</h4><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*~</span></span><br><span class="line"><span class="comment">#@**xi'an university of science &amp; technology**</span></span><br><span class="line"><span class="comment">#@Software engineering 1703 </span></span><br><span class="line"><span class="comment">#@17408070828</span></span><br><span class="line"><span class="comment">~*/</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Date_fish</span>&#123;</span></span><br><span class="line"><span class="keyword">public</span> :</span><br><span class="line">    <span class="keyword">int</span> year; <span class="comment">//年</span></span><br><span class="line">    <span class="keyword">int</span> month; <span class="comment">//月</span></span><br><span class="line">    <span class="keyword">int</span> day; <span class="comment">//日</span></span><br><span class="line">    Date_fish();<span class="comment">//构造函数</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">file</span><span class="params">()</span></span>; <span class="comment">//对文件中的信息进行处理</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">Deal_key</span><span class="params">()</span></span>;<span class="comment">//对从键盘输入的信息进行处理</span></span><br><span class="line">    <span class="keyword">int</span> Choose;<span class="comment">////键盘读入或文件读入的选择标志</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">sumdays</span><span class="params">()</span></span>;<span class="comment">//判断闰年平年</span></span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">display</span><span class="params">()</span></span>;<span class="comment">//工作类型</span></span><br><span class="line">    <span class="keyword">int</span> days_5; <span class="comment">//除5的余数</span></span><br><span class="line">    <span class="keyword">int</span> sum; <span class="comment">//距2010年1月1日的总天数</span></span><br><span class="line">    <span class="keyword">int</span> normal_month_day[<span class="number">12</span>]; <span class="comment">//平年每月的天数</span></span><br><span class="line">	<span class="keyword">int</span> special_month_day[<span class="number">12</span>];</span><br><span class="line">&#125;;</span><br><span class="line">Date_fish::Date_fish () <span class="comment">//构造函数初始化</span></span><br><span class="line">&#123;</span><br><span class="line">     Choose=<span class="number">0</span>; <span class="comment">//键盘读入或文件读入的选择标志</span></span><br><span class="line">     sum=<span class="number">0</span>;</span><br><span class="line">     days_5=<span class="number">0</span>; </span><br><span class="line">     year=<span class="number">0</span>;</span><br><span class="line">     month=<span class="number">0</span>;</span><br><span class="line">     day=<span class="number">0</span>;</span><br><span class="line">     <span class="keyword">int</span> normal_month_day[<span class="number">12</span>]=&#123;<span class="number">31</span>,<span class="number">28</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>&#125;;</span><br><span class="line">	 <span class="keyword">int</span> special_month_day[<span class="number">12</span>]=&#123;<span class="number">31</span>,<span class="number">29</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>&#125;;<span class="comment">//初始平闰年各月份天数</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Date_fish::Deal_key</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"请输入年"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;year;</span><br><span class="line">      <span class="comment">//判断输入的年，月，日是否在规定的范围</span></span><br><span class="line">   <span class="keyword">if</span> (year&lt;<span class="number">2010</span>||year&gt;<span class="number">2019</span>) <span class="comment">//判断年</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"年份输入错误，请输入2010-2019范围的年份（包含2010和2019)"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        </span><br><span class="line">		<span class="built_in">cin</span>&gt;&gt;year;</span><br><span class="line">    &#125; </span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"请输入月"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt;month;</span><br><span class="line">     <span class="keyword">if</span>(month&lt;=<span class="number">0</span>||month&gt;<span class="number">12</span>) <span class="comment">//判断月</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"月份输入错误，请输入1-12范围的月份（包含1和12)"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;month;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">	 </span><br><span class="line">	 <span class="built_in">cout</span>&lt;&lt;<span class="string">"请输入日"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;day;</span><br><span class="line"></span><br><span class="line"> <span class="keyword">if</span>(month==<span class="number">1</span>||month==<span class="number">3</span>||month==<span class="number">5</span>||month==<span class="number">7</span>||month==<span class="number">8</span>||month==<span class="number">10</span>||month==<span class="number">12</span>)<span class="comment">//判断日</span></span><br><span class="line">    </span><br><span class="line"> &#123;</span><br><span class="line">	 <span class="keyword">if</span>(day&gt;<span class="number">31</span>||day&lt;=<span class="number">0</span>)<span class="comment">//判断大月</span></span><br><span class="line">	 &#123;<span class="built_in">cout</span>&lt;&lt;<span class="string">"天数输入错误，请输入改后的正常天数"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">	 <span class="built_in">cin</span>&gt;&gt;day;</span><br><span class="line">	 &#125;</span><br><span class="line"></span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">else</span> <span class="keyword">if</span>(month!=<span class="number">2</span>)<span class="comment">//判断小月</span></span><br><span class="line">	 <span class="keyword">if</span>(day&gt;<span class="number">30</span>||day&lt;=<span class="number">0</span>)</span><br><span class="line">	 &#123;&#123;<span class="built_in">cout</span>&lt;&lt;<span class="string">"您输入的日期有误，请重新输入"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">	 <span class="built_in">cin</span>&gt;&gt;day;&#125;</span><br><span class="line">	</span><br><span class="line">   </span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">else</span> <span class="keyword">if</span>(((year%<span class="number">4</span>==<span class="number">0</span>&amp;&amp;year%<span class="number">100</span>!=<span class="number">0</span>)||year%<span class="number">400</span>==<span class="number">0</span>))<span class="comment">//判断闰年2月</span></span><br><span class="line"> &#123;</span><br><span class="line">	 <span class="keyword">if</span>(day&gt;<span class="number">29</span>||day&lt;=<span class="number">0</span>)</span><br><span class="line">	 &#123;<span class="built_in">cout</span>&lt;&lt;<span class="string">"您输入的日期有误，请重新输入"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">	  <span class="built_in">cin</span>&gt;&gt;day;</span><br><span class="line">	 &#125;</span><br><span class="line"></span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">else</span></span><br><span class="line"> &#123;</span><br><span class="line">	 <span class="keyword">if</span>(day&gt;<span class="number">28</span>||day&lt;=<span class="number">0</span>)</span><br><span class="line">	 &#123;<span class="built_in">cout</span>&lt;&lt;<span class="string">"您输入的日期有误，请重新输入"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">	 <span class="built_in">cin</span>&gt;&gt;day;&#125;</span><br><span class="line">	 <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Date_fish::sumdays</span><span class="params">()</span> <span class="comment">//判断平闰年函数并计算天数</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> YEAR_0=<span class="number">2010</span>; <span class="comment">//定义初始变量YEAR_0为2010</span></span><br><span class="line">    <span class="keyword">for</span> (YEAR_0;YEAR_0&lt;year;YEAR_0++) <span class="comment">//距当前年份几年，循环几次</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>((year%<span class="number">400</span>==<span class="number">0</span>)||(year%<span class="number">4</span>==<span class="number">0</span>&amp;&amp;year%<span class="number">100</span>!=<span class="number">0</span>)) <span class="comment">//当前年份为闰年，||前为世纪年判断，||后为普通年</span></span><br><span class="line">        &#123;</span><br><span class="line">            sum+=<span class="number">366</span>;<span class="comment">//闰年，总天数加366天</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span><span class="comment">//为平年</span></span><br><span class="line">        &#123;</span><br><span class="line">            sum+=<span class="number">365</span>; <span class="comment">//平年，总天数加365天</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;month<span class="number">-1</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">		<span class="keyword">if</span>((year%<span class="number">400</span>==<span class="number">0</span>)||(year%<span class="number">4</span>==<span class="number">0</span>&amp;&amp;year%<span class="number">100</span>!=<span class="number">0</span>))</span><br><span class="line">        sum+=special_month_day[i]; <span class="comment">//加当前月份的天数</span></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">		sum+=normal_month_day[i];</span><br><span class="line">    &#125;</span><br><span class="line">    sum+=day; <span class="comment">//总天数</span></span><br><span class="line">	<span class="built_in">cout</span>&lt;&lt;<span class="string">"到2010-01-01的总天数为："</span>;</span><br><span class="line">	<span class="built_in">cout</span>&lt;&lt;sum&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    days_5=sum%<span class="number">5</span>;<span class="comment">//除5取余</span></span><br><span class="line">    sum=<span class="number">0</span>;<span class="comment">//初始化</span></span><br><span class="line">   <span class="comment">//return days_5;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">	 </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Date_fish::display</span><span class="params">()</span></span></span><br><span class="line"><span class="function"> </span>&#123;</span><br><span class="line">	  </span><br><span class="line">	<span class="keyword">if</span> (days_5&gt;=<span class="number">1</span>&amp;&amp;days_5&lt;<span class="number">4</span>)<span class="comment">//余数1,2,3</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//余数1,2,3打鱼</span></span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"这天在打鱼"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//晒网</span></span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"这天在晒网"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">   <span class="comment">//return days_5;</span></span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Date_fish::file</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span>&#123;<span class="keyword">int</span> a[<span class="number">3</span>];<span class="comment">//数组实现txt文档中三个值的传回 </span></span><br><span class="line"><span class="function">ifstream <span class="title">infile</span><span class="params">(<span class="string">"in.txt"</span>,ios::in)</span></span>;</span><br><span class="line"><span class="keyword">if</span>(!infile)</span><br><span class="line">&#123;<span class="built_in">cerr</span>&lt;&lt;<span class="string">"open in.txt error!"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line">infile&gt;&gt;a[<span class="number">0</span>]&gt;&gt;a[<span class="number">1</span>]&gt;&gt;a[<span class="number">2</span>];</span><br><span class="line">year=a[<span class="number">0</span>]; month=a[<span class="number">1</span>]; day=a[<span class="number">2</span>];</span><br><span class="line"></span><br><span class="line">sumdays();<span class="comment">//接收计算后的days_5</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="function">ofstream <span class="title">outfile</span><span class="params">(<span class="string">"out.txt"</span>,ios::out)</span></span>;</span><br><span class="line"></span><br><span class="line">&#123;<span class="keyword">if</span> (days_5&gt;<span class="number">0</span>&amp;&amp;days_5&lt;<span class="number">4</span>)</span><br><span class="line">   &#123;</span><br><span class="line">        outfile&lt;&lt;year&lt;&lt;<span class="string">"."</span>&lt;&lt;month&lt;&lt;<span class="string">"."</span>&lt;&lt;day&lt;&lt;<span class="string">"该天打鱼"</span>&lt;&lt;<span class="built_in">endl</span>; <span class="comment">//余数为1或2或3，将打鱼的信息写入out文件中</span></span><br><span class="line">   &#125; </span><br><span class="line">   <span class="keyword">else</span></span><br><span class="line">   &#123;</span><br><span class="line">        outfile&lt;&lt;year&lt;&lt;<span class="string">"."</span>&lt;&lt;month&lt;&lt;<span class="string">"."</span>&lt;&lt;day&lt;&lt;<span class="string">"该天晒网"</span>&lt;&lt;<span class="built_in">endl</span>;<span class="comment">//余数为0或4，将晒网的信息写入out文件中</span></span><br><span class="line"></span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line">   <span class="comment">//关闭文件</span></span><br><span class="line">   infile.<span class="built_in">close</span>(); </span><br><span class="line">   outfile.<span class="built_in">close</span>();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Date_fish m;</span><br><span class="line">   <span class="built_in">cout</span>&lt;&lt;<span class="string">"请选择日期读取方式："</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">   <span class="built_in">cout</span>&lt;&lt;<span class="string">"*******0为从键盘读取*******"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">   <span class="built_in">cout</span>&lt;&lt;<span class="string">"*******1为从文件读取*******"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">   <span class="built_in">cin</span>&gt;&gt;m.Choose;</span><br><span class="line">   </span><br><span class="line">   <span class="comment">//</span></span><br><span class="line">   <span class="keyword">switch</span>(m.Choose)</span><br><span class="line">   &#123;</span><br><span class="line">   <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">       &#123;m.Deal_key();</span><br><span class="line">	   m.sumdays();</span><br><span class="line">       m.<span class="built_in">display</span>();&#125;</span><br><span class="line">	   <span class="keyword">break</span>;</span><br><span class="line">   <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">       m.file();</span><br><span class="line">       <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*-----------</span></span><br><span class="line"><span class="comment">auther @却水*/</span></span><br></pre></td></tr></table></figure>
<h3 id="个人总结"><a href="#个人总结" class="headerlink" title="个人总结"></a><em>个人总结</em></h3><p><strong>在完成本次题目时个人存在的问题</strong><br>1.编程基础较差，程序遇到bug解决能力较弱 ，解决时间较长<br>2.代码风格较乱，还需改进<br>3.设计算法较为繁琐，判断日期时天的判断if—else语句繁琐，刚开始的算法较简洁但是出现计算时间错误，无奈之下只能改为if嵌套语句<br>4.c++语法不够熟练，尤其文件操作生疏，导致文件操作方面花费了大量的时间<br>5.因理解题目要求不到位，在文件的操作方面走了很多弯路</p>
<p><strong>在本次完成题目时的收获</strong><br>1.重温C++语法<br>2.学习了以前忽略的C语言文件操作<br>3.通过不断调试错误，对错误的出现有了一些新的认识，如，顺序结构影响程序执行的逻辑，嵌套语句的使用不当导致程序异常<br>4.做出成果增强了学习其他语言的信心及决心</p>
<h4 id="流程图"><a href="#流程图" class="headerlink" title="流程图"></a>流程图</h4><p><img src="https://img-blog.csdnimg.cn/20190301140612415.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNzUzOTQ0,size_16,color_FFFFFF,t_70" alt=""></p>
]]></content>
      <categories>
        <category>C s hert</category>
      </categories>
      <tags>
        <tag>C</tag>
      </tags>
  </entry>
</search>
